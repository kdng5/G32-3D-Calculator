{
  "version": 3,
  "sources": ["../../nerdamer/Algebra.js", "../../nerdamer/Calculus.js", "../../nerdamer/all.min.js"],
  "sourcesContent": ["/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * License : MIT\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global module, Function */\r\n\r\nif((typeof module) !== 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Calculus.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    /*shortcuts*/\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            N = core.groups.N,\r\n            P = core.groups.P,\r\n            S = core.groups.S,\r\n            EX = core.groups.EX,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            keys = core.Utils.keys,\r\n            even = core.Utils.even,\r\n            variables = core.Utils.variables,\r\n            format = core.Utils.format,\r\n            round = core.Utils.round,\r\n            Frac = core.Frac,\r\n            isInt = core.Utils.isInt,\r\n            Symbol = core.Symbol,\r\n            CONST_HASH = core.Settings.CONST_HASH,\r\n            math = core.Utils.importFunctions(),\r\n            evaluate = core.Utils.evaluate;\r\n    //*************** CLASSES ***************//\r\n    /**\r\n     * Converts a symbol into an equivalent polynomial arrays of \r\n     * the form [[coefficient_1, power_1],[coefficient_2, power_2], ... ]\r\n     * Univariate polymials only. \r\n     * @param {Symbol|Number} symbol\r\n     * @param {String} variable The variable name of the polynomial\r\n     * @param {int} order\r\n     */\r\n    function Polynomial(symbol, variable, order) {\r\n        if(core.Utils.isSymbol(symbol)) {\r\n            this.parse(symbol);\r\n            this.variable = this.variable || variable;\r\n        }\r\n        else if(!isNaN(symbol)) {\r\n            order = order || 0;\r\n            if(variable === undefined)\r\n                throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');\r\n            this.coeffs = [];\r\n            this.coeffs[order] = symbol;\r\n            this.fill(symbol);\r\n        }\r\n        else if(typeof symbol === 'string') {\r\n            this.parse(_.parse(symbol));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Polynomial given an array of coefficients\r\n     * @param {int[]} arr\r\n     * @param {String} variable\r\n     * @returns {Polynomial}\r\n     */\r\n    Polynomial.fromArray = function (arr, variable) {\r\n        if(typeof variable === 'undefined')\r\n            throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');\r\n        var p = new Polynomial();\r\n        p.coeffs = arr;\r\n        p.variable = variable;\r\n        return p;\r\n    };\r\n\r\n    Polynomial.fit = function (c1, c2, n, base, p, variable) {\r\n        //after having looped through and mod 10 the number to get the matching factor\r\n        var terms = new Array(p + 1),\r\n                t = n - c2;\r\n        terms[0] = c2; //the constants is assumed to be correct\r\n        //constant for x^p is also assumed know so add\r\n        terms[p] = c1;\r\n        t -= c1 * Math.pow(base, p);\r\n        //start fitting\r\n        for(var i = p - 1; i > 0; i--) {\r\n            var b = Math.pow(base, i), //we want as many wholes as possible\r\n                    q = t / b,\r\n                    sign = Math.sign(q);\r\n            var c = sign * Math.floor(Math.abs(q));\r\n            t -= c * b;\r\n            terms[i] = c;\r\n        }\r\n        if(t !== 0)\r\n            return null;\r\n        for(var i = 0; i < terms.length; i++)\r\n            terms[i] = new Frac(terms[i]);\r\n\r\n        return Polynomial.fromArray(terms, variable);\r\n    };\r\n\r\n    Polynomial.prototype = {\r\n        /**\r\n         * Converts Symbol to Polynomial\r\n         * @param {Symbol} symbol\r\n         * @param {Array} c - a collector array\r\n         * @returns {Polynomial}\r\n         */\r\n        parse: function (symbol, c) {\r\n            this.variable = variables(symbol)[0];\r\n            if(!symbol.isPoly())\r\n                throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received ' + core.Utils.text(symbol));\r\n            c = c || [];\r\n            if(!symbol.power.absEquals(1))\r\n                symbol = _.expand(symbol);\r\n\r\n            if(symbol.group === core.groups.N) {\r\n                c[0] = symbol.multiplier;\r\n            }\r\n            else if(symbol.group === core.groups.S) {\r\n                c[symbol.power.toDecimal()] = symbol.multiplier;\r\n            }\r\n            else {\r\n                for(var x in symbol.symbols) {\r\n                    var sub = symbol.symbols[x],\r\n                            p = sub.power;\r\n                    if(core.Utils.isSymbol(p))\r\n                        throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');\r\n\r\n                    p = sub.group === N ? 0 : p.toDecimal();\r\n                    if(sub.symbols) {\r\n                        this.parse(sub, c);\r\n                    }\r\n                    else {\r\n                        c[p] = sub.multiplier;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.coeffs = c;\r\n\r\n            this.fill();\r\n        },\r\n        /**\r\n         * Fills in the holes in a polynomial with zeroes\r\n         * @param {Number} x - The number to fill the holes with\r\n         */\r\n        fill: function (x) {\r\n            x = Number(x) || 0;\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(this.coeffs[i] === undefined) {\r\n                    this.coeffs[i] = new Frac(x);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Removes higher order zeros or a specific coefficient\r\n         * @returns {Array}\r\n         */\r\n        trim: function () {\r\n            var l = this.coeffs.length;\r\n            while(l--) {\r\n                var c = this.coeffs[l];\r\n                var equalsZero = c.equals(0);\r\n                if(c && equalsZero) {\r\n                    if(l === 0)\r\n                        break;\r\n                    this.coeffs.pop();\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /*\r\n         * Returns polynomial mod p **currently fails**\r\n         * @param {Number} p\r\n         * @returns {Polynomial}\r\n         */\r\n        modP: function (p) {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = this.coeffs[i];\r\n                if(c < 0) { //go borrow\r\n                    var b; //a coefficient > 0\r\n                    for(var j = i; j < l; j++) {//starting from where we left off\r\n                        if(this.coeffs[j] > 0) {\r\n                            b = this.coeffs[j];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(b) { //if such a coefficient exists\r\n                        for(j; j > i; j--) { //go down the line and adjust using p\r\n                            this.coeffs[j] = this.coeffs[j].subtract(new Frac(1));\r\n                            this.coeffs[j - 1] = this.coeffs[j - 1].add(new Frac(p));\r\n                        }\r\n                        c = this.coeffs[i]; //reset c\r\n                    }\r\n                }\r\n\r\n                var d = c.mod(p);\r\n                var w = c.subtract(d).divide(p);\r\n                if(!w.equals(0)) {\r\n                    var up_one = i + 1;\r\n                    var next = this.coeffs[up_one] || new Frac(0);\r\n                    next = next.add(w);\r\n                    this.coeffs[up_one] = new Frac(next);\r\n                    this.coeffs[i] = new Frac(d);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        add: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.add(b);\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        subtract: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.subtract(b);\r\n            }\r\n            return this;\r\n        },\r\n        divide: function (poly) {\r\n            var variable = this.variable,\r\n                    dividend = core.Utils.arrayClone(this.coeffs),\r\n                    divisor = core.Utils.arrayClone(poly.coeffs),\r\n                    n = dividend.length,\r\n                    mp = divisor.length - 1,\r\n                    quotient = [];\r\n\r\n            //loop through the dividend\r\n            for(var i = 0; i < n; i++) {\r\n                var p = n - (i + 1);\r\n                //get the difference of the powers\r\n                var d = p - mp;\r\n                //get the quotient of the coefficients\r\n                var q = dividend[p].divide(divisor[mp]);\r\n\r\n                if(d < 0)\r\n                    break;//the divisor is not greater than the dividend\r\n                //place it in the quotient\r\n                quotient[d] = q;\r\n\r\n                for(var j = 0; j <= mp; j++) {\r\n                    //reduce the dividend\r\n                    dividend[j + d] = dividend[j + d].subtract((divisor[j].multiply(q)));\r\n                }\r\n            }\r\n\r\n            //clean up\r\n            var p1 = Polynomial.fromArray(dividend, variable || 'x').trim(), //pass in x for safety\r\n                    p2 = Polynomial.fromArray(quotient, variable || 'x');\r\n            return [p2, p1];\r\n        },\r\n        multiply: function (poly) {\r\n            var l1 = this.coeffs.length, l2 = poly.coeffs.length,\r\n                    c = []; //array to be returned\r\n            for(var i = 0; i < l1; i++) {\r\n                var x1 = this.coeffs[i];\r\n                for(var j = 0; j < l2; j++) {\r\n                    var k = i + j, //add the powers together\r\n                            x2 = poly.coeffs[j],\r\n                            e = c[k] || new Frac(0); //get the existing term from the new array\r\n                    c[k] = e.add(x1.multiply(x2)); //multiply the coefficients and add to new polynomial array\r\n                }\r\n            }\r\n            this.coeffs = c;\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks if a polynomial is zero\r\n         * @returns {Boolean}\r\n         */\r\n        isZero: function () {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /** \r\n         * Substitutes in a number n into the polynomial p(n)\r\n         * @param {Number} n\r\n         * @returns {Frac}\r\n         */\r\n        sub: function (n) {\r\n            var sum = new Frac(0), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var t = this.coeffs[i];\r\n                if(!t.equals(0))\r\n                    sum = sum.add(t.multiply(new Frac(Math.pow(n, i))));\r\n            }\r\n            return sum;\r\n        },\r\n        /**\r\n         * Returns a clone of the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        clone: function () {\r\n            var p = new Polynomial();\r\n            p.coeffs = this.coeffs;\r\n            p.variable = this.variable;\r\n            return p;\r\n        },\r\n        /**\r\n         * Gets the degree of the polynomial\r\n         * @returns {Number}\r\n         */\r\n        deg: function () {\r\n            this.trim();\r\n            return this.coeffs.length - 1;\r\n        },\r\n        /**\r\n         * Returns a lead coefficient\r\n         * @returns {Frac}\r\n         */\r\n        lc: function () {\r\n            return this.coeffs[this.deg()].clone();\r\n        },\r\n        /**\r\n         * Converts polynomial into a monic polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        monic: function () {\r\n            var lc = this.lc(), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++)\r\n                this.coeffs[i] = this.coeffs[i].divide(lc);\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the GCD of two polynomials\r\n         * @param {Polynomial} poly\r\n         * @returns {Polynomial}\r\n         */\r\n        gcd: function (poly) {\r\n            //get the maximum power of each\r\n            var mp1 = this.coeffs.length - 1,\r\n                    mp2 = poly.coeffs.length - 1,\r\n                    T;\r\n            //swap so we always have the greater power first\r\n            if(mp1 < mp2) {\r\n                return poly.gcd(this);\r\n            }\r\n            var a = this;\r\n\r\n            while(!poly.isZero()) {\r\n                var t = poly.clone();\r\n                a = a.clone();\r\n                T = a.divide(t);\r\n                poly = T[1];\r\n                a = t;\r\n            }\r\n\r\n            var gcd = core.Math2.QGCD.apply(null, a.coeffs);\r\n            if(!gcd.equals(1)) {\r\n                var l = a.coeffs.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    a.coeffs[i] = a.coeffs[i].divide(gcd);\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        /**\r\n         * Differentiates the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        diff: function () {\r\n            var new_array = [], l = this.coeffs.length;\r\n            for(var i = 1; i < l; i++)\r\n                new_array.push(this.coeffs[i].multiply(new Frac(i)));\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Integrates the polynomial\r\n         * @returns {Polynomial} \r\n         */\r\n        integrate: function () {\r\n            var new_array = [0], l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = new Frac(i + 1);\r\n                new_array[c] = this.coeffs[i].divide(c);\r\n            }\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the Greatest common factor of the polynomial\r\n         * @param {bool} toPolynomial - true if a polynomial is wanted\r\n         * @returns {Frac|Polynomial}\r\n         */\r\n        gcf: function (toPolynomial) {\r\n            //get the first nozero coefficient and returns its power\r\n            var fnz = function (a) {\r\n                for(var i = 0; i < a.length; i++)\r\n                    if(!a[i].equals(0))\r\n                        return i;\r\n            },\r\n                    ca = [];\r\n            for(var i = 0; i < this.coeffs.length; i++) {\r\n                var c = this.coeffs[i];\r\n                if(!c.equals(0) && ca.indexOf(c) === -1)\r\n                    ca.push(c);\r\n            }\r\n            var p = [core.Math2.QGCD.apply(undefined, ca), fnz(this.coeffs)].toDecimal();\r\n\r\n            if(toPolynomial) {\r\n                var parr = [];\r\n                parr[p[1] - 1] = p[0];\r\n                p = Polynomial.fromArray(parr, this.variable).fill();\r\n            }\r\n\r\n            return p;\r\n        },\r\n        /**\r\n         * Raises a polynomial P to a power p -> P^p. e.g. (x+1)^2\r\n         * @param {bool} incl_img - Include imaginary numbers \r\n         */\r\n        quad: function (incl_img) {\r\n            var roots = [];\r\n            if(this.coeffs.length > 3)\r\n                throw new Error('Cannot calculate quadratic order of ' + (this.coeffs.length - 1));\r\n            if(this.coeffs.length === 0)\r\n                throw new Error('Polynomial array has no terms');\r\n            var a = this.coeffs[2] || 0, b = this.coeffs[1] || 0, c = this.coeffs[0];\r\n            var dsc = b * b - 4 * a * c;\r\n            if(dsc < 0 && !incl_img)\r\n                return roots;\r\n            else {\r\n                roots[0] = (-b + Math.sqrt(dsc)) / (2 * a);\r\n                roots[1] = (-b - Math.sqrt(dsc)) / (2 * a);\r\n            }\r\n            return roots;\r\n        },\r\n        /**\r\n         * Makes polynomial square free\r\n         * @returns {Array}\r\n         */\r\n        squareFree: function () {\r\n\r\n            var a = this.clone(),\r\n                    i = 1,\r\n                    b = a.clone().diff(),\r\n                    c = a.clone().gcd(b),\r\n                    w = a.divide(c)[0];\r\n            var output = Polynomial.fromArray([new Frac(1)], a.variable);\r\n            while(!c.equalsNumber(1)) {\r\n                var y = w.gcd(c);\r\n                var z = w.divide(y)[0];\r\n                //one of the factors may have shown up since it's square but smaller than the \r\n                //one where finding\r\n                if(!z.equalsNumber(1) && i > 1) {\r\n                    var t = z.clone();\r\n                    for(var j = 1; j < i; j++)\r\n                        t.multiply(z.clone());\r\n                    z = t;\r\n                }\r\n                output = output.multiply(z);\r\n                i++;\r\n                w = y;\r\n                c = c.divide(y)[0];\r\n            }\r\n\r\n            return [output, w, i];\r\n        },\r\n        /**\r\n         * Converts polynomial to Symbol\r\n         * @returns {Symbol}\r\n         */\r\n        toSymbol: function () {\r\n            var l = this.coeffs.length,\r\n                    variable = this.variable;\r\n            if(l === 0)\r\n                return new core.Symbol(0);\r\n            var end = l - 1, str = '';\r\n\r\n            for(var i = 0; i < l; i++) {\r\n                //place the plus sign for all but the last one\r\n                var plus = i === end ? '' : '+',\r\n                        e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    str += (e + '*' + variable + '^' + i + plus);\r\n            }\r\n            return _.parse(str);\r\n        },\r\n        /**\r\n         * Checks if polynomial is equal to a number\r\n         * @param {Number} x\r\n         * @returns {Boolean}\r\n         */\r\n        equalsNumber: function (x) {\r\n            this.trim();\r\n            return this.coeffs.length === 1 && this.coeffs[0].toDecimal() === String(x);\r\n        },\r\n        toString: function () {\r\n            return this.toSymbol().toString();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TODO\r\n     * ===================================================================================\r\n     * THIS METHOD HAS A NASTY HIDDEN BUG. IT HAS INCONSISTENT RETURN TYPES PRIMARILY DUE TO \r\n     * WRONG ASSUMPTIONS AT THE BEGINNING. THE ASSUMPTION WAS THAT COEFFS WERE ALWAYS GOING BE NUMBERS\r\n     * NOT TAKING INTO ACCOUNT THAT IMAGINARY NUMBERS. FIXING THIS BREAKS WAY TOO MANY TESTS \r\n     * AT THEM MOMENT WHICH I DON'T HAVE TO FIX\r\n     * ===================================================================================\r\n     * If the symbols is of group PL or CP it will return the multipliers of each symbol\r\n     * as these are polynomial coefficients. CB symbols are glued together by multiplication\r\n     * so the symbol multiplier carries the coefficients for all contained symbols.\r\n     * For S it just returns it's own multiplier. This function doesn't care if it's a polynomial or not\r\n     * @param {Array} c The coefficient array\r\n     * @param {boolean} with_order \r\n     * @return {Array}\r\n     */\r\n    Symbol.prototype.coeffs = function (c, with_order) {\r\n        if(with_order && !this.isPoly(true))\r\n            _.error('Polynomial expected when requesting coefficients with order');\r\n        c = c || [];\r\n        var s = this.clone().distributeMultiplier();\r\n        if(s.isComposite()) {\r\n            for(var x in s.symbols) {\r\n                var sub = s.symbols[x];\r\n                if(sub.isComposite()) {\r\n                    sub.clone().distributeMultiplier().coeffs(c, with_order);\r\n                }\r\n                else {\r\n                    if(with_order)\r\n                        c[sub.isConstant() ? 0 : sub.power.toDecimal()] = sub.multiplier;\r\n                    else {\r\n                        c.push(sub.multiplier);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if(with_order)\r\n                c[s.isConstant(true) ? 0 : s.power.toDecimal()] = s.multiplier;\r\n            else {\r\n                if(s.group === CB && s.isImaginary()) {\r\n                    var m = new Symbol(s.multiplier);\r\n                    s.each(function (x) {\r\n                        //add the imaginary part\r\n                        if(x.isConstant(true) || x.imaginary)\r\n                            m = _.multiply(m, x);\r\n                    });\r\n                    c.push(m);\r\n                }\r\n                else\r\n                    c.push(s.multiplier);\r\n            }\r\n        }\r\n        //fill the holes\r\n        if(with_order) {\r\n            for(var i = 0; i < c.length; i++)\r\n                if(c[i] === undefined)\r\n                    c[i] = new Symbol(0);\r\n        }\r\n        return c;\r\n    };\r\n    Symbol.prototype.tBase = function (map) {\r\n        if(typeof map === 'undefined')\r\n            throw new Error('Symbol.tBase requires a map object!');\r\n        var terms = [];\r\n        var symbols = this.collectSymbols(null, null, null, true),\r\n                l = symbols.length;\r\n        for(var i = 0; i < l; i++) {\r\n            var symbol = symbols[i],\r\n                    g = symbol.group,\r\n                    nterm = new MVTerm(symbol.multiplier, [], map);\r\n            if(g === CB) {\r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x];\r\n                    nterm.terms[map[x]] = sym.power;\r\n                }\r\n            }\r\n            else {\r\n                nterm.terms[map[symbol.value]] = symbol.power;\r\n            }\r\n\r\n            terms.push(nterm.fill());\r\n            nterm.updateCount();\r\n        }\r\n        return terms;\r\n    };\r\n    Symbol.prototype.altVar = function (x) {\r\n        var m = this.multiplier.toString(), p = this.power.toString();\r\n        return (m === '1' ? '' : m + '*') + x + (p === '1' ? '' : '^' + p);\r\n    };\r\n    /**\r\n     * Checks to see if the symbols contain the same variables\r\n     * @param {Symbol} symbol\r\n     * @returns {Boolean}\r\n     */\r\n    Symbol.prototype.sameVars = function (symbol) {\r\n        if(!(this.symbols || this.group === symbol.group))\r\n            return false;\r\n        for(var x in this.symbols) {\r\n            var a = this.symbols[x], b = symbol.symbols[x];\r\n            if(!b)\r\n                return false;\r\n            if(a.value !== b.value)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Groups the terms in a symbol with respect to a variable\r\n     * For instance the symbol {a*b^2*x^2+a*b*x^2+x+6} returns [6,1,a*b+a*b^2]\r\n     * @returns {Factors}\r\n     */\r\n    Symbol.prototype.groupTerms = function (x) {\r\n        x = String(x);\r\n        var f, p, egrouped;\r\n        var grouped = [];\r\n        this.each(function (e) {\r\n            if(e.group === PL) {\r\n                egrouped = e.groupTerms(x);\r\n                for(var i = 0; i < egrouped.length; i++) {\r\n                    var el = egrouped[i];\r\n                    if(el)\r\n                        grouped[i] = el;\r\n                }\r\n            }\r\n            else {\r\n                f = core.Utils.decompose_fn(e, x, true);\r\n                p = f.x.value === x ? Number(f.x.power) : 0;\r\n                //check if there's an existing value\r\n                grouped[p] = _.add(grouped[p] || new Symbol(0), f.a);\r\n            }\r\n        });\r\n        return grouped;\r\n    };\r\n    /**\r\n     * Use this to collect Factors\r\n     * @returns {Symbol[]}\r\n     */\r\n    Symbol.prototype.collectFactors = function () {\r\n        var factors = [];\r\n        if(this.group === CB)\r\n            this.each(function (x) {\r\n                factors.push(x.clone());\r\n            });\r\n        else\r\n            factors.push(this.clone());\r\n        return factors;\r\n    };\r\n    /**\r\n     * A container class for factors\r\n     * @returns {Factors}\r\n     */\r\n    function Factors() {\r\n        this.factors = {};\r\n        this.length = 0;\r\n    }\r\n    ;\r\n    Factors.prototype.getNumberSymbolics = function () {\r\n        var n = 0;\r\n        this.each(function (x) {\r\n            if(!x.isConstant(true))\r\n                n++;\r\n        });\r\n        return n;\r\n    };\r\n    /**\r\n     * Adds the factors to the factor object\r\n     * @param {Symbo} s\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.add = function (s) {\r\n        if(s.equals(0))\r\n            return this; //nothing to add\r\n\r\n        //we don't want to carry -1 as a factor. If a factor already exists,\r\n        //then add the minus one to that factor and return.\r\n        if(s.equals(-1) && this.length > 0) {\r\n            var fo = core.Utils.firstObject(this.factors, null, true);\r\n            this.add(_.symfunction(core.Settings.PARENTHESIS, [fo.obj]).negate());\r\n            delete this.factors[fo.key];\r\n            this.length--;\r\n            return this;\r\n        }\r\n\r\n        if(s.group === CB) {\r\n            var factors = this;\r\n            if(!s.multiplier.equals(1))\r\n                factors.add(new Symbol(s.multiplier));\r\n            s.each(function (x) {\r\n                factors.add(x);\r\n            });\r\n        }\r\n        else {\r\n            if(this.preAdd) //if a preAdd function was defined call it to do prep\r\n                s = this.preAdd(s);\r\n            if(this.pFactor) //if the symbol isn't linear add back the power\r\n                s = _.pow(s, new Symbol(this.pFactor));\r\n\r\n            var is_constant = s.isConstant();\r\n            if(is_constant && s.equals(1))\r\n                return this; //don't add 1\r\n            var v = is_constant ? s.value : s.text();\r\n            if(v in this.factors) {\r\n                this.factors[v] = _.multiply(this.factors[v], s);\r\n                //did the addition cancel out the existing factor? If so remove it and decrement the length\r\n                if(this.factors[v].equals(1)) {\r\n                    delete this.factors[v];\r\n                    this.length--;\r\n                }\r\n            }\r\n            else {\r\n                this.factors[v] = s;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the factor object to a Symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Factors.prototype.toSymbol = function () {\r\n        var factored = new Symbol(1);\r\n        var factors = Object.values(this.factors).sort(function (a, b) {\r\n            return a.group > b.group;\r\n        });\r\n\r\n        for(var i = 0, l = factors.length; i < l; i++) {\r\n            var f = factors[i];\r\n\r\n            //don't wrap group S or FN\r\n            var factor = f.power.equals(1) && f.fname !== '' /* don't wrap it twice */ ?\r\n                    _.symfunction(core.PARENTHESIS, [f]) : f;\r\n\r\n            factored = _.multiply(factored, factor);\r\n        }\r\n        if(factored.fname === '')\r\n            factored = Symbol.unwrapPARENS(factored);\r\n        return factored;\r\n    };\r\n    /**\r\n     * Merges 2 factor objects into one\r\n     * @param {Factor} o\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.merge = function (o) {\r\n        for(var x in o) {\r\n            if(x in this.factors)\r\n                this.factors[x] = _.multiply(this.factors[x], o[x]);\r\n            else\r\n                this.factors[x] = o[x];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * The iterator for the factor object\r\n     * @param {Function} f - callback\r\n     * @returns {Factor}\r\n     */\r\n    Factors.prototype.each = function (f) {\r\n        for(var x in this.factors) {\r\n            var factor = this.factors[x];\r\n            if(factor.fname === core.PARENTHESIS && factor.isLinear())\r\n                factor = factor.args[0];\r\n            f.call(this, factor, x);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the number of factors contained in the factor object\r\n     * @returns {int}\r\n     */\r\n    Factors.prototype.count = function () {\r\n        return keys(this.factors).length;\r\n    };\r\n    /**\r\n     * Cleans up factors from -1\r\n     * @returns {undefined}\r\n     */\r\n    Factors.prototype.clean = function () {\r\n        try {\r\n            var h = core.Settings.CONST_HASH;\r\n            if(this.factors[h].lessThan(0)) {\r\n                if(this.factors[h].equals(-1))\r\n                    delete this.factors[h];\r\n                else\r\n                    this.factors[h].negate();\r\n                this.each(function (x) {\r\n                    x.negate();\r\n                });\r\n            }\r\n        }\r\n        catch(e) {\r\n        }\r\n        ;\r\n    };\r\n    Factors.prototype.toString = function () {\r\n        return this.toSymbol().toString();\r\n    };\r\n\r\n    //a wrapper for performing multivariate division\r\n    function MVTerm(coeff, terms, map) {\r\n        this.terms = terms || [];\r\n        this.coeff = coeff;\r\n        this.map = map; //careful! all maps are the same object\r\n        this.sum = new core.Frac(0);\r\n        this.image = undefined;\r\n    }\r\n    ;\r\n    MVTerm.prototype.updateCount = function () {\r\n        this.count = this.count || 0;\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            if(!this.terms[i].equals(0))\r\n                this.count++;\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.getVars = function () {\r\n        var vars = [];\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var term = this.terms[i],\r\n                    rev_map = this.getRevMap();\r\n            if(!term.equals(0))\r\n                vars.push(this.rev_map[i]);\r\n        }\r\n        return vars.join(' ');\r\n    };\r\n    MVTerm.prototype.len = function () {\r\n        if(typeof this.count === 'undefined') {\r\n            this.updateCount();\r\n        }\r\n        return this.count;\r\n    };\r\n    MVTerm.prototype.toSymbol = function (rev_map) {\r\n        rev_map = rev_map || this.getRevMap();\r\n        var symbol = new Symbol(this.coeff);\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var v = rev_map[i],\r\n                    t = this.terms[i];\r\n            if(t.equals(0) || v === CONST_HASH)\r\n                continue;\r\n            var mapped = new Symbol(v);\r\n            mapped.power = t;\r\n            symbol = _.multiply(symbol, mapped);\r\n        }\r\n        return symbol;\r\n    };\r\n    MVTerm.prototype.getRevMap = function () {\r\n        if(this.rev_map)\r\n            return this.rev_map;\r\n        var o = {};\r\n        for(var x in this.map)\r\n            o[this.map[x]] = x;\r\n        this.rev_map = o;\r\n        return o;\r\n    };\r\n    MVTerm.prototype.generateImage = function () {\r\n        this.image = this.terms.join(' ');\r\n        return this;\r\n    },\r\n            MVTerm.prototype.getImg = function () {\r\n                if(!this.image)\r\n                    this.generateImage();\r\n                return this.image;\r\n            },\r\n            MVTerm.prototype.fill = function () {\r\n                var l = this.map.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    if(typeof this.terms[i] === 'undefined')\r\n                        this.terms[i] = new core.Frac(0);\r\n                    else {\r\n                        this.sum = this.sum.add(this.terms[i]);\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n    MVTerm.prototype.divide = function (mvterm) {\r\n        var c = this.coeff.divide(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].subtract(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.multiply = function (mvterm) {\r\n        var c = this.coeff.multiply(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].add(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.isZero = function () {\r\n        return this.coeff.equals(0);\r\n    };\r\n    MVTerm.prototype.toString = function () {\r\n        return '{ coeff: ' + this.coeff.toString() + ', terms: [' +\r\n                this.terms.join(',') + ']: sum: ' + this.sum.toString() + ', count: ' + this.count + '}';\r\n    };\r\n\r\n    core.Utils.toMapObj = function (arr) {\r\n        var c = 0, o = {};\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var v = arr[i];\r\n            if(typeof o[v] === 'undefined') {\r\n                o[v] = c;\r\n                c++;\r\n            }\r\n        }\r\n        o.length = c;\r\n        return o;\r\n    };\r\n    core.Utils.filledArray = function (v, n, clss) {\r\n        var a = [];\r\n        while(n--) {\r\n            a[n] = clss ? new clss(v) : v;\r\n        }\r\n        return a;\r\n    };\r\n    core.Utils.arrSum = function (arr) {\r\n        var sum = 0, l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            sum += arr[i];\r\n        return sum;\r\n    };\r\n    /**\r\n     * Determines if 2 arrays have intersecting elements.\r\n     * @param {Array} a\r\n     * @param {Array} b\r\n     * @returns {Boolean} True if a and b have intersecting elements.\r\n     */\r\n    core.Utils.haveIntersection = function (a, b) {\r\n        var t;\r\n        if(b.length > a.length)\r\n            t = b, b = a, a = t; // indexOf to loop over shorter\r\n        return a.some(function (e) {\r\n            return b.indexOf(e) > -1;\r\n        });\r\n    };\r\n    /**\r\n     * Substitutes out functions as variables so they can be used in regular algorithms\r\n     * @param {Symbol} symbol\r\n     * @param {Object} map\r\n     * @returns {String} The expression string\r\n     */\r\n    core.Utils.subFunctions = function (symbol, map) {\r\n        map = map || {};\r\n        var subbed = [];\r\n        symbol.each(function (x) {\r\n            if(x.group === FN || x.previousGroup === FN) {\r\n                //we need a new variable name so why not use one of the existing\r\n                var val = core.Utils.text(x, 'hash'), tvar = map[val];\r\n                if(!tvar) {\r\n                    //generate a unique enough name\r\n                    var t = x.fname + keys(map).length;\r\n                    map[val] = t;\r\n                    subbed.push(x.altVar(t));\r\n                }\r\n                else\r\n                    subbed.push(x.altVar(tvar));\r\n            }\r\n            else if(x.group === CB || x.group === PL || x.group === CP) {\r\n                subbed.push(core.Utils.subFunctions(x, map));\r\n            }\r\n            else\r\n                subbed.push(x.text());\r\n        });\r\n        if(symbol.group === CP || symbol.group === PL)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));\r\n        ;\r\n        if(symbol.group === CB)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));\r\n        return symbol.text();\r\n    };\r\n    core.Utils.getFunctionsSubs = function (map) {\r\n        var subs = {};\r\n        //prepare substitutions\r\n        for(var x in map)\r\n            subs[map[x]] = _.parse(x);\r\n        return subs;\r\n    };\r\n\r\n    var __ = core.Algebra = {\r\n        version: '1.4.6',\r\n        proots: function (symbol, decp) {\r\n            //the roots will be rounded up to 7 decimal places.\r\n            //if this causes trouble you can explicitly pass in a different number of places\r\n            //rarr for polynomial of power n is of format [n, coeff x^n, coeff x^(n-1), ..., coeff x^0]\r\n            decp = decp || 7;\r\n            var zeros = 0;\r\n            var known_roots = [];\r\n            var get_roots = function (rarr, powers, max) {\r\n                var roots = calcroots(rarr, powers, max).concat(known_roots);\r\n                for(var i = 0; i < zeros; i++)\r\n                    roots.unshift(0);\r\n                return roots;\r\n            };\r\n\r\n            if(symbol instanceof Symbol && symbol.isPoly()) {\r\n                symbol.distributeMultiplier();\r\n                //make it so the symbol has a constants as the lowest term\r\n                if(symbol.group === PL) {\r\n                    var lowest_pow = core.Utils.arrayMin(keys(symbol.symbols));\r\n                    var lowest_symbol = symbol.symbols[lowest_pow].clone().toUnitMultiplier();\r\n                    symbol = _.expand(_.divide(symbol, lowest_symbol));\r\n                    known_roots.push(0); //add zero since this is a known root\r\n                }\r\n                if(symbol.group === core.groups.S) {\r\n                    return [0];\r\n                }\r\n                else if(symbol.group === core.groups.PL) {\r\n                    var powers = keys(symbol.symbols),\r\n                            minpower = core.Utils.arrayMin(powers),\r\n                            symbol = core.PARSER.divide(symbol, core.PARSER.parse(symbol.value + '^' + minpower));\r\n                }\r\n\r\n                var variable = keys(symbol.symbols).sort().pop(),\r\n                        sym = symbol.group === core.groups.PL ? symbol.symbols : symbol.symbols[variable],\r\n                        g = sym.group,\r\n                        powers = g === S ? [sym.power.toDecimal()] : keys(sym.symbols),\r\n                        rarr = [],\r\n                        max = core.Utils.arrayMax(powers); //maximum power and degree of polynomial to be solved\r\n\r\n                // Prepare the data\r\n                for(var i = 1; i <= max; i++) {\r\n                    var c = 0; //if there is no power then the hole must be filled with a zero\r\n                    if(powers.indexOf(i + '') !== -1) {\r\n                        if(g === S) {\r\n                            c = sym.multiplier;\r\n                        }\r\n                        else {\r\n                            c = sym.symbols[i].multiplier;\r\n                        }\r\n                    }\r\n                    // Insert the coeffient but from the front\r\n                    rarr.unshift(c);\r\n                }\r\n\r\n                rarr.push(symbol.symbols[CONST_HASH].multiplier);\r\n\r\n                if(sym.group === S)\r\n                    rarr[0] = sym.multiplier;//the symbol maybe of group CP with one variable\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else if(core.Utils.isArray(symbol)) {\r\n                var parr = symbol;\r\n                var rarr = [],\r\n                        powers = [],\r\n                        last_power = 0;\r\n                for(var i = 0; i < parr.length; i++) {\r\n\r\n                    var coeff = parr[i][0],\r\n                            pow = parr[i][1],\r\n                            d = pow - last_power - 1;\r\n                    //insert the zeros\r\n                    for(var j = 0; j < d; j++)\r\n                        rarr.unshift(0);\r\n\r\n                    rarr.unshift(coeff);\r\n                    if(pow !== 0)\r\n                        powers.push(pow);\r\n                    last_power = pow;\r\n                }\r\n                var max = Math.max.apply(undefined, powers);\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else {\r\n                throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');\r\n            }\r\n\r\n            function calcroots(rarr, powers, max) {\r\n                var MAXDEGREE = 100; // Degree of largest polynomial accepted by this script.\r\n\r\n                // Make a clone of the coefficients before appending the max power\r\n                var p = rarr.slice(0);\r\n\r\n                // Divide the string up into its individual entries, which--presumably--are separated by whitespace\r\n                rarr.unshift(max);\r\n\r\n                if(max > MAXDEGREE) {\r\n                    throw new core.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to \" + MAXDEGREE + \". \");\r\n                }\r\n\r\n                var zeroi = [], // Vector of imaginary components of roots\r\n                        degreePar = {};    // degreePar is a dummy variable for passing the parameter POLYDEGREE by reference\r\n                degreePar.Degree = max;\r\n\r\n                for(i = 0; i < max; i++) {\r\n                    zeroi.push(0);\r\n                }\r\n                var zeror = zeroi.slice(0); // Vector of real components of roots\r\n\r\n                // Find the roots\r\n                //--> Begin Jenkins-Traub\r\n\r\n                /*\r\n                 * A verbatim copy of Mr. David Binner's Jenkins-Traub port\r\n                 */\r\n                function QuadSD_ak1(NN, u, v, p, q, iPar) {\r\n                    // Divides p by the quadratic 1, u, v placing the quotient in q and the remainder in a, b\r\n                    // iPar is a dummy variable for passing in the two parameters--a and b--by reference\r\n                    q[0] = iPar.b = p[0];\r\n                    q[1] = iPar.a = -(u * iPar.b) + p[1];\r\n\r\n                    for(var i = 2; i < NN; i++) {\r\n                        q[i] = -(u * iPar.a + v * iPar.b) + p[i];\r\n                        iPar.b = iPar.a;\r\n                        iPar.a = q[i];\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function calcSC_ak1(DBL_EPSILON, N, a, b, iPar, K, u, v, qk) {\r\n                    // This routine calculates scalar quantities used to compute the next K polynomial and\r\n                    // new estimates of the quadratic coefficients.\r\n                    // calcSC -\tinteger variable set here indicating how the calculations are normalized\r\n                    // to avoid overflow.\r\n                    // iPar is a dummy variable for passing in the nine parameters--a1, a3, a7, c, d, e, f, g, and h --by reference\r\n\r\n                    // sdPar is a dummy variable for passing the two parameters--c and d--into QuadSD_ak1 by reference\r\n                    var sdPar = new Object(),\r\n                            // TYPE = 3 indicates the quadratic is almost a factor of K\r\n                            dumFlag = 3;\r\n\r\n                    // Synthetic division of K by the quadratic 1, u, v\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(N, u, v, K, qk, sdPar);\r\n                    iPar.c = sdPar.a;\r\n                    iPar.d = sdPar.b;\r\n\r\n                    if(Math.abs(iPar.c) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 1]))) {\r\n                        if(Math.abs(iPar.d) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 2])))\r\n                            return dumFlag;\r\n                    }\r\n\r\n                    iPar.h = v * b;\r\n                    if(Math.abs(iPar.d) >= Math.abs(iPar.c)) {\r\n                        // TYPE = 2 indicates that all formulas are divided by d\r\n                        dumFlag = 2;\r\n                        iPar.e = a / (iPar.d);\r\n                        iPar.f = (iPar.c) / (iPar.d);\r\n                        iPar.g = u * b;\r\n                        iPar.a3 = (iPar.e) * ((iPar.g) + a) + (iPar.h) * (b / (iPar.d));\r\n                        iPar.a1 = -a + (iPar.f) * b;\r\n                        iPar.a7 = (iPar.h) + ((iPar.f) + u) * a;\r\n                    }\r\n                    else {\r\n                        // TYPE = 1 indicates that all formulas are divided by c;\r\n                        dumFlag = 1;\r\n                        iPar.e = a / (iPar.c);\r\n                        iPar.f = (iPar.d) / (iPar.c);\r\n                        iPar.g = (iPar.e) * u;\r\n                        iPar.a3 = (iPar.e) * a + ((iPar.g) + (iPar.h) / (iPar.c)) * b;\r\n                        iPar.a1 = -(a * ((iPar.d) / (iPar.c))) + b;\r\n                        iPar.a7 = (iPar.g) * (iPar.d) + (iPar.h) * (iPar.f) + a;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function nextK_ak1(DBL_EPSILON, N, tFlag, a, b, iPar, K, qk, qp) {\r\n                    // Computes the next K polynomials using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in three parameters--a1, a3, and a7\r\n                    var temp;\r\n                    if(tFlag == 3) {\t// Use unscaled form of the recurrence\r\n                        K[1] = K[0] = 0.0;\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = qk[i - 2];\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    temp = ((tFlag == 1) ? b : a);\r\n                    if(Math.abs(iPar.a1) > (10.0 * DBL_EPSILON * Math.abs(temp))) {\r\n                        // Use scaled form of the recurrence\r\n                        iPar.a7 /= iPar.a1;\r\n                        iPar.a3 /= iPar.a1;\r\n                        K[0] = qp[0];\r\n                        K[1] = -(qp[0] * iPar.a7) + qp[1];\r\n                        for(var i = 2; i < N; i++)\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3 + qp[i];\r\n                    }\r\n                    else {\r\n                        // If a1 is nearly zero, then use a special form of the recurrence\r\n                        K[0] = 0.0;\r\n                        K[1] = -(qp[0] * iPar.a7);\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function newest_ak1(tFlag, iPar, a, a1, a3, a7, b, c, d, f, g, h, u, v, K, N, p) {\r\n                    // Compute new estimates of the quadratic coefficients using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in the two parameters--uu and vv--by reference\r\n                    // iPar.a = uu, iPar.b = vv\r\n\r\n                    var a4, a5, b1, b2, c1, c2, c3, c4, temp;\r\n                    iPar.b = iPar.a = 0.0;// The quadratic is zeroed\r\n\r\n                    if(tFlag != 3) {\r\n                        if(tFlag != 2) {\r\n                            a4 = a + u * b + h * f;\r\n                            a5 = c + (u + v * f) * d;\r\n                        }\r\n                        else {\r\n                            a4 = (a + g) * f + h;\r\n                            a5 = (f + u) * c + v * d;\r\n                        }\r\n\r\n                        // Evaluate new quadratic coefficients\r\n                        b1 = -(K[N - 1] / p[N]);\r\n                        b2 = -(K[N - 2] + b1 * p[N - 1]) / p[N];\r\n                        c1 = v * b2 * a1;\r\n                        c2 = b1 * a7;\r\n                        c3 = b1 * b1 * a3;\r\n                        c4 = -(c2 + c3) + c1;\r\n                        temp = -c4 + a5 + b1 * a4;\r\n                        if(temp != 0.0) {\r\n                            iPar.a = -((u * (c3 + c2) + v * (b1 * a1 + b2 * a7)) / temp) + u;\r\n                            iPar.b = v * (1.0 + c4 / temp);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function Quad_ak1(a, b1, c, iPar) {\r\n                    // Calculates the zeros of the quadratic a*Z^2 + b1*Z + c\r\n                    // The quadratic formula, modified to avoid overflow, is used to find the larger zero if the\r\n                    // zeros are real and both zeros are complex. The smaller real zero is found directly from\r\n                    // the product of the zeros c/a.\r\n\r\n                    // iPar is a dummy variable for passing in the four parameters--sr, si, lr, and li--by reference\r\n\r\n                    var b, d, e;\r\n                    iPar.sr = iPar.si = iPar.lr = iPar.li = 0.0;\r\n\r\n                    if(a == 0) {\r\n                        iPar.sr = ((b1 != 0) ? -(c / b1) : iPar.sr);\r\n                        return;\r\n                    }\r\n                    if(c == 0) {\r\n                        iPar.lr = -(b1 / a);\r\n                        return;\r\n                    }\r\n\r\n                    // Compute discriminant avoiding overflow\r\n                    b = b1 / 2.0;\r\n                    if(Math.abs(b) < Math.abs(c)) {\r\n                        e = ((c >= 0) ? a : -a);\r\n                        e = -e + b * (b / Math.abs(c));\r\n                        d = Math.sqrt(Math.abs(e)) * Math.sqrt(Math.abs(c));\r\n                    }\r\n                    else {\r\n                        e = -((a / b) * (c / b)) + 1.0;\r\n                        d = Math.sqrt(Math.abs(e)) * (Math.abs(b));\r\n                    }\r\n\r\n                    if(e >= 0) {\r\n                        // Real zeros\r\n                        d = ((b >= 0) ? -d : d);\r\n                        iPar.lr = (-b + d) / a;\r\n                        iPar.sr = ((iPar.lr != 0) ? (c / (iPar.lr)) / a : iPar.sr);\r\n                    }\r\n                    else {\r\n                        // Complex conjugate zeros\r\n                        iPar.lr = iPar.sr = -(b / a);\r\n                        iPar.si = Math.abs(d / a);\r\n                        iPar.li = -(iPar.si);\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function QuadIT_ak1(DBL_EPSILON, N, iPar, uu, vv, qp, NN, sdPar, p, qk, calcPar, K) {\r\n                    // Variable-shift K-polynomial iteration for a quadratic factor converges only if the\r\n                    // zeros are equimodular or nearly so.\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // sdPar is a dummy variable for passing the two parameters--a and b--in by reference\r\n                    // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --in by reference\r\n\r\n                    // qPar is a dummy variable for passing the four parameters--szr, szi, lzr, and lzi--into Quad_ak1 by reference\r\n                    var qPar = new Object(),\r\n                            ee, mp, omp, relstp, t, u, ui, v, vi, zm,\r\n                            i, j = 0, tFlag, triedFlag = 0;   // Integer variables\r\n\r\n                    iPar.NZ = 0;// Number of zeros found\r\n                    u = uu; // uu and vv are coefficients of the starting quadratic\r\n                    v = vv;\r\n\r\n                    do {\r\n                        qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                        Quad_ak1(1.0, u, v, qPar);\r\n                        iPar.szr = qPar.sr;\r\n                        iPar.szi = qPar.si;\r\n                        iPar.lzr = qPar.lr;\r\n                        iPar.lzi = qPar.li;\r\n\r\n                        // Return if roots of the quadratic are real and not close to multiple or nearly\r\n                        // equal and of opposite sign.\r\n                        if(Math.abs(Math.abs(iPar.szr) - Math.abs(iPar.lzr)) > 0.01 * Math.abs(iPar.lzr))\r\n                            break;\r\n\r\n                        // Evaluate polynomial by quadratic synthetic division\r\n\r\n                        QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n\r\n                        mp = Math.abs(-((iPar.szr) * (sdPar.b)) + (sdPar.a)) + Math.abs((iPar.szi) * (sdPar.b));\r\n\r\n                        // Compute a rigorous bound on the rounding error in evaluating p\r\n\r\n                        zm = Math.sqrt(Math.abs(v));\r\n                        ee = 2.0 * Math.abs(qp[0]);\r\n                        t = -((iPar.szr) * (sdPar.b));\r\n\r\n                        for(i = 1; i < N; i++) {\r\n                            ee = ee * zm + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        ee = ee * zm + Math.abs(t + sdPar.a);\r\n                        ee = (9.0 * ee + 2.0 * Math.abs(t) - 7.0 * (Math.abs((sdPar.a) + t) + zm * Math.abs((sdPar.b)))) * DBL_EPSILON;\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than 20 times this bound\r\n                        if(mp <= 20.0 * ee) {\r\n                            iPar.NZ = 2;\r\n                            break;\r\n                        }\r\n\r\n                        j++;\r\n                        // Stop iteration after 20 steps\r\n                        if(j > 20)\r\n                            break;\r\n                        if(j >= 2) {\r\n                            if((relstp <= 0.01) && (mp >= omp) && (!triedFlag)) {\r\n                                // A cluster appears to be stalling the convergence. Five fixed shift\r\n                                // steps are taken with a u, v close to the cluster.\r\n                                relstp = ((relstp < DBL_EPSILON) ? Math.sqrt(DBL_EPSILON) : Math.sqrt(relstp));\r\n                                u -= u * relstp;\r\n                                v += v * relstp;\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                for(i = 0; i < 5; i++) {\r\n                                    tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                                    nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                                }\r\n\r\n                                triedFlag = 1;\r\n                                j = 0;\r\n\r\n                            }\r\n                        }\r\n                        omp = mp;\r\n\r\n                        // Calculate next K polynomial and new u and v\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        newest_ak1(tFlag, sdPar, sdPar.a, calcPar.a1, calcPar.a3, calcPar.a7, sdPar.b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vi = sdPar.b;\r\n\r\n                        // If vi is zero, the iteration is not converging\r\n                        if(vi != 0) {\r\n                            relstp = Math.abs((-v + vi) / vi);\r\n                            u = ui;\r\n                            v = vi;\r\n                        }\r\n                    }\r\n                    while(vi != 0);\r\n                    return;\r\n                }\r\n\r\n                function RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk) {\r\n                    // Variable-shift H-polynomial iteration for a real zero\r\n                    // sss\t- starting iterate = sdPar.a\r\n                    // NZ\t\t- number of zeros found = iPar.NZ\r\n                    // dumFlag\t- flag to indicate a pair of zeros near real axis, returned to iFlag\r\n\r\n                    var ee, kv, mp, ms, omp, pv, s, t,\r\n                            dumFlag, i, j, nm1 = N - 1;   // Integer variables\r\n\r\n                    iPar.NZ = j = dumFlag = 0;\r\n                    s = sdPar.a;\r\n\r\n                    for(; ; ) {\r\n                        pv = p[0];\r\n\r\n                        // Evaluate p at s\r\n                        qp[0] = pv;\r\n                        for(i = 1; i < NN; i++) {\r\n                            qp[i] = pv = pv * s + p[i];\r\n                        }\r\n                        mp = Math.abs(pv);\r\n\r\n                        // Compute a rigorous bound on the error in evaluating p\r\n                        ms = Math.abs(s);\r\n                        ee = 0.5 * Math.abs(qp[0]);\r\n                        for(i = 1; i < NN; i++) {\r\n                            ee = ee * ms + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than\r\n                        // 20 times this bound\r\n                        if(mp <= 20.0 * DBL_EPSILON * (2.0 * ee - mp)) {\r\n                            iPar.NZ = 1;\r\n                            iPar.szr = s;\r\n                            iPar.szi = 0.0;\r\n                            break;\r\n                        }\r\n                        j++;\r\n                        // Stop iteration after 10 steps\r\n                        if(j > 10)\r\n                            break;\r\n\r\n                        if(j >= 2) {\r\n                            if((Math.abs(t) <= 0.001 * Math.abs(-t + s)) && (mp > omp)) {\r\n                                // A cluster of zeros near the real axis has been encountered.\r\n                                // Return with iFlag set to initiate a quadratic iteration.\r\n                                dumFlag = 1;\r\n                                iPar.a = s;\r\n                                break;\r\n                            } // End if ((fabs(t) <= 0.001*fabs(s - t)) && (mp > omp))\r\n                        } //End if (j >= 2)\r\n\r\n                        // Return if the polynomial value has increased significantly\r\n                        omp = mp;\r\n\r\n                        // Compute t, the next polynomial and the new iterate\r\n                        qk[0] = kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            qk[i] = kv = kv * s + K[i];\r\n                        }\r\n\r\n                        if(Math.abs(kv) > Math.abs(K[nm1]) * 10.0 * DBL_EPSILON) {\r\n                            // Use the scaled form of the recurrence if the value of K at s is non-zero\r\n                            t = -(pv / kv);\r\n                            K[0] = qp[0];\r\n                            for(i = 1; i < N; i++) {\r\n                                K[i] = t * qk[i - 1] + qp[i];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Use unscaled form\r\n                            K[0] = 0.0;\r\n                            for(i = 1; i < N; i++)\r\n                                K[i] = qk[i - 1];\r\n                        }\r\n\r\n                        kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            kv = kv * s + K[i];\r\n                        }\r\n                        t = ((Math.abs(kv) > (Math.abs(K[nm1]) * 10.0 * DBL_EPSILON)) ? -(pv / kv) : 0.0);\r\n                        s += t;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function Fxshfr_ak1(DBL_EPSILON, MDP1, L2, sr, v, K, N, p, NN, qp, u, iPar) {\r\n\r\n                    // Computes up to L2 fixed shift K-polynomials, testing for convergence in the linear or\r\n                    // quadratic case. Initiates one of the variable shift iterations and returns with the\r\n                    // number of zeros found.\r\n                    // L2\tlimit of fixed shift steps\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // NZ\tnumber of zeros found\r\n                    var sdPar = new Object(), // sdPar is a dummy variable for passing the two parameters--a and b--into QuadSD_ak1 by reference\r\n                            calcPar = new Object(),\r\n                            // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --into calcSC_ak1 by reference\r\n\r\n                            qk = new Array(MDP1),\r\n                            svk = new Array(MDP1),\r\n                            a, b, betas, betav, oss, ots, otv, ovv, s, ss, ts, tss, tv, tvv, ui, vi, vv,\r\n                            fflag, i, iFlag = 1, j, spass, stry, tFlag, vpass, vtry;     // Integer variables\r\n\r\n                    iPar.NZ = 0;\r\n                    betav = betas = 0.25;\r\n                    oss = sr;\r\n                    ovv = v;\r\n\r\n                    //Evaluate polynomial by synthetic division\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                    a = sdPar.a;\r\n                    b = sdPar.b;\r\n                    calcPar.h = calcPar.g = calcPar.f = calcPar.e = calcPar.d = calcPar.c = calcPar.a7 = calcPar.a3 = calcPar.a1 = 0.0;\r\n                    tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                    for(j = 0; j < L2; j++) {\r\n                        fflag = 1;\r\n\r\n                        // Calculate next K polynomial and estimate v\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, a, b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                        // Use sdPar for passing in uu and vv instead of defining a brand-new variable.\r\n                        // sdPar.a = ui, sdPar.b = vi\r\n                        newest_ak1(tFlag, sdPar, a, calcPar.a1, calcPar.a3, calcPar.a7, b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vv = vi = sdPar.b;\r\n\r\n                        // Estimate s\r\n                        ss = ((K[N - 1] != 0.0) ? -(p[N] / K[N - 1]) : 0.0);\r\n                        ts = tv = 1.0;\r\n\r\n                        if((j != 0) && (tFlag != 3)) {\r\n                            // Compute relative measures of convergence of s and v sequences\r\n                            tv = ((vv != 0.0) ? Math.abs((vv - ovv) / vv) : tv);\r\n                            ts = ((ss != 0.0) ? Math.abs((ss - oss) / ss) : ts);\r\n\r\n                            // If decreasing, multiply the two most recent convergence measures\r\n                            tvv = ((tv < otv) ? tv * otv : 1.0);\r\n                            tss = ((ts < ots) ? ts * ots : 1.0);\r\n\r\n                            // Compare with convergence criteria\r\n                            vpass = ((tvv < betav) ? 1 : 0);\r\n                            spass = ((tss < betas) ? 1 : 0);\r\n\r\n                            if((spass) || (vpass)) {\r\n\r\n                                // At least one sequence has passed the convergence test.\r\n                                // Store variables before iterating\r\n\r\n                                for(i = 0; i < N; i++) {\r\n                                    svk[i] = K[i];\r\n                                }\r\n                                s = ss;\r\n\r\n                                // Choose iteration according to the fastest converging sequence\r\n\r\n                                stry = vtry = 0;\r\n\r\n                                for(; ; ) {\r\n                                    if((fflag && ((fflag = 0) == 0)) && ((spass) && (!vpass || (tss < tvv)))) {\r\n                                        ;// Do nothing. Provides a quick \"short circuit\".\r\n                                    }\r\n                                    else {\r\n                                        QuadIT_ak1(DBL_EPSILON, N, iPar, ui, vi, qp, NN, sdPar, p, qk, calcPar, K);\r\n                                        a = sdPar.a;\r\n                                        b = sdPar.b;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Quadratic iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        iFlag = vtry = 1;\r\n                                        betav *= 0.25;\r\n\r\n                                        // Try linear iteration if it has not been tried and the s sequence is converging\r\n                                        if(stry || (!spass)) {\r\n                                            iFlag = 0;\r\n                                        }\r\n                                        else {\r\n                                            for(i = 0; i < N; i++)\r\n                                                K[i] = svk[i];\r\n                                        }\r\n                                    }\r\n                                    //fflag = 0;\r\n                                    if(iFlag != 0) {\r\n                                        // Use sdPar for passing in s instead of defining a brand-new variable.\r\n                                        // sdPar.a = s\r\n                                        sdPar.a = s;\r\n                                        iFlag = RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk);\r\n                                        s = sdPar.a;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Linear iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        stry = 1;\r\n                                        betas *= 0.25;\r\n\r\n                                        if(iFlag != 0) {\r\n                                            // If linear iteration signals an almost double real zero, attempt quadratic iteration\r\n                                            ui = -(s + s);\r\n                                            vi = s * s;\r\n                                            continue;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    // Restore variables\r\n                                    for(i = 0; i < N; i++)\r\n                                        K[i] = svk[i];\r\n\r\n                                    // Try quadratic iteration if it has not been tried and the v sequence is converging\r\n                                    if(!vpass || vtry)\r\n                                        break;\t\t// Break out of infinite for loop\r\n\r\n                                }\r\n\r\n                                // Re-compute qp and scalar values to continue the second stage\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                a = sdPar.a;\r\n                                b = sdPar.b;\r\n\r\n                                tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n                            }\r\n                        }\r\n                        ovv = vv;\r\n                        oss = ss;\r\n                        otv = tv;\r\n                        ots = ts;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function rpSolve(degPar, p, zeror, zeroi) {\r\n                    var N = degPar.Degree,\r\n                            RADFAC = 3.14159265358979323846 / 180, // Degrees-to-radians conversion factor = PI/180\r\n                            LB2 = Math.LN2, // Dummy variable to avoid re-calculating this value in loop below\r\n                            MDP1 = degPar.Degree + 1,\r\n                            K = new Array(MDP1),\r\n                            pt = new Array(MDP1),\r\n                            qp = new Array(MDP1),\r\n                            temp = new Array(MDP1),\r\n                            // qPar is a dummy variable for passing the four parameters--sr, si, lr, and li--by reference\r\n                            qPar = new Object(),\r\n                            // Fxshfr_Par is a dummy variable for passing parameters by reference : NZ, lzi, lzr, szi, szr);\r\n                            Fxshfr_Par = new Object(),\r\n                            bnd, DBL_EPSILON, df, dx, factor, ff, moduli_max, moduli_min, sc, x, xm,\r\n                            aa, bb, cc, sr, t, u, xxx,\r\n                            j, jj, l, NM1, NN, zerok;// Integer variables\r\n\r\n                    // Calculate the machine epsilon and store in the variable DBL_EPSILON.\r\n                    // To calculate this value, just use existing variables rather than create new ones that will be used only for this code block\r\n                    aa = 1.0;\r\n                    do {\r\n                        DBL_EPSILON = aa;\r\n                        aa /= 2;\r\n                        bb = 1.0 + aa;\r\n                    }\r\n                    while(bb > 1.0);\r\n\r\n                    var LO = Number.MIN_VALUE / DBL_EPSILON,\r\n                            cosr = Math.cos(94.0 * RADFAC), // = -0.069756474\r\n                            sinr = Math.sin(94.0 * RADFAC), // = 0.99756405\r\n                            xx = Math.sqrt(0.5), // = 0.70710678\r\n                            yy = -xx;\r\n\r\n                    Fxshfr_Par.NZ = j = 0;\r\n                    Fxshfr_Par.szr = Fxshfr_Par.szi = Fxshfr_Par.lzr = Fxshfr_Par.lzi = 0.0;\r\n\r\n                    // Remove zeros at the origin, if any\r\n                    while(p[N] == 0) {\r\n                        zeror[j] = zeroi[j] = 0;\r\n                        N--;\r\n                        j++;\r\n                    }\r\n                    NN = N + 1;\r\n\r\n                    // >>>>> Begin Main Loop <<<<<\r\n                    while(N >= 1) { // Main loop\r\n                        // Start the algorithm for one zero\r\n                        if(N <= 2) {\r\n                            // Calculate the final zero or pair of zeros\r\n                            if(N < 2) {\r\n                                zeror[degPar.Degree - 1] = -(p[1] / p[0]);\r\n                                zeroi[degPar.Degree - 1] = 0;\r\n                            }\r\n                            else {\r\n                                qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                                Quad_ak1(p[0], p[1], p[2], qPar);\r\n                                zeror[degPar.Degree - 2] = qPar.sr;\r\n                                zeroi[degPar.Degree - 2] = qPar.si;\r\n                                zeror[degPar.Degree - 1] = qPar.lr;\r\n                                zeroi[degPar.Degree - 1] = qPar.li;\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        // Find the largest and smallest moduli of the coefficients\r\n                        moduli_max = 0.0;\r\n                        moduli_min = Number.MAX_VALUE;\r\n\r\n                        for(i = 0; i < NN; i++) {\r\n                            x = Math.abs(p[i]);\r\n                            if(x > moduli_max)\r\n                                moduli_max = x;\r\n                            if((x != 0) && (x < moduli_min))\r\n                                moduli_min = x;\r\n                        }\r\n\r\n                        // Scale if there are large or very small coefficients\r\n                        // Computes a scale factor to multiply the coefficients of the polynomial. The scaling\r\n                        // is done to avoid overflow and to avoid undetected underflow interfering with the\r\n                        // convergence criterion.\r\n                        // The factor is a power of the base.\r\n                        sc = LO / moduli_min;\r\n\r\n                        if(((sc <= 1.0) && (moduli_max >= 10)) || ((sc > 1.0) && (Number.MAX_VALUE / sc >= moduli_max))) {\r\n                            sc = ((sc == 0) ? Number.MIN_VALUE : sc);\r\n                            l = Math.floor(Math.log(sc) / LB2 + 0.5);\r\n                            factor = Math.pow(2.0, l);\r\n                            if(factor != 1.0) {\r\n                                for(i = 0; i < NN; i++)\r\n                                    p[i] *= factor;\r\n                            }\r\n                        }\r\n\r\n                        // Compute lower bound on moduli of zeros\r\n                        for(var i = 0; i < NN; i++)\r\n                            pt[i] = Math.abs(p[i]);\r\n                        pt[N] = -(pt[N]);\r\n                        NM1 = N - 1;\r\n\r\n                        // Compute upper estimate of bound\r\n                        x = Math.exp((Math.log(-pt[N]) - Math.log(pt[0])) / N);\r\n\r\n                        if(pt[NM1] != 0) {\r\n                            // If Newton step at the origin is better, use it\r\n                            xm = -pt[N] / pt[NM1];\r\n                            x = ((xm < x) ? xm : x);\r\n                        }\r\n\r\n                        // Chop the interval (0, x) until ff <= 0\r\n                        xm = x;\r\n                        do {\r\n                            x = xm;\r\n                            xm = 0.1 * x;\r\n                            ff = pt[0];\r\n                            for(var i = 1; i < NN; i++) {\r\n                                ff = ff * xm + pt[i];\r\n                            }\r\n                        }\r\n                        while(ff > 0); // End do-while loop\r\n\r\n                        dx = x;\r\n                        // Do Newton iteration until x converges to two decimal places\r\n\r\n                        do {\r\n                            df = ff = pt[0];\r\n                            for(var i = 1; i < N; i++) {\r\n                                ff = x * ff + pt[i];\r\n                                df = x * df + ff;\r\n                            } // End for i\r\n                            ff = x * ff + pt[N];\r\n                            dx = ff / df;\r\n                            x -= dx;\r\n                        }\r\n                        while(Math.abs(dx / x) > 0.005); // End do-while loop\r\n\r\n                        bnd = x;\r\n\r\n                        // Compute the derivative as the initial K polynomial and do 5 steps with no shift\r\n                        for(var i = 1; i < N; i++)\r\n                            K[i] = (N - i) * p[i] / N;\r\n                        K[0] = p[0];\r\n                        aa = p[N];\r\n                        bb = p[NM1];\r\n                        zerok = ((K[NM1] == 0) ? 1 : 0);\r\n\r\n                        for(jj = 0; jj < 5; jj++) {\r\n                            cc = K[NM1];\r\n                            if(zerok) {\r\n                                // Use unscaled form of recurrence\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = K[j - 1];\r\n                                } // End for i\r\n                                K[0] = 0;\r\n                                zerok = ((K[NM1] == 0) ? 1 : 0);\r\n                            }\r\n                            else {\r\n                                // Used scaled form of recurrence if value of K at 0 is nonzero\r\n                                t = -aa / cc;\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = t * K[j - 1] + p[j];\r\n                                } // End for i\r\n                                K[0] = p[0];\r\n                                zerok = ((Math.abs(K[NM1]) <= Math.abs(bb) * DBL_EPSILON * 10.0) ? 1 : 0);\r\n                            }\r\n                        }\r\n\r\n                        // Save K for restarts with new shifts\r\n                        for(var i = 0; i < N; i++)\r\n                            temp[i] = K[i];\r\n\r\n                        // Loop to select the quadratic corresponding to each new shift\r\n                        for(jj = 1; jj <= 20; jj++) {\r\n\r\n                            // Quadratic corresponds to a double shift to a non-real point and its\r\n                            // complex conjugate. The point has modulus BND and amplitude rotated\r\n                            // by 94 degrees from the previous shift.\r\n\r\n                            xxx = -(sinr * yy) + cosr * xx;\r\n                            yy = sinr * xx + cosr * yy;\r\n                            xx = xxx;\r\n                            sr = bnd * xx;\r\n                            u = -(2.0 * sr);\r\n\r\n                            // Second stage calculation, fixed quadratic\r\n                            Fxshfr_ak1(DBL_EPSILON, MDP1, 20 * jj, sr, bnd, K, N, p, NN, qp, u, Fxshfr_Par);\r\n\r\n                            if(Fxshfr_Par.NZ != 0) {\r\n                                // The second stage jumps directly to one of the third stage iterations and\r\n                                // returns here if successful. Deflate the polynomial, store the zero or\r\n                                // zeros, and return to the main algorithm.\r\n                                j = degPar.Degree - N;\r\n                                zeror[j] = Fxshfr_Par.szr;\r\n                                zeroi[j] = Fxshfr_Par.szi;\r\n                                NN = NN - Fxshfr_Par.NZ;\r\n                                N = NN - 1;\r\n                                for(var i = 0; i < NN; i++)\r\n                                    p[i] = qp[i];\r\n                                if(Fxshfr_Par.NZ != 1) {\r\n                                    zeror[j + 1] = Fxshfr_Par.lzr;\r\n                                    zeroi[j + 1] = Fxshfr_Par.lzi;\r\n                                }\r\n                                break;\r\n                            }\r\n                            else {\r\n                                // If the iteration is unsuccessful, another quadratic is chosen after restoring K\r\n                                for(var i = 0; i < N; i++) {\r\n                                    K[i] = temp[i];\r\n                                }\r\n                            }\r\n                        }\r\n                        // Return with failure if no convergence with 20 shifts\r\n                        if(jj > 20) {\r\n                            degPar.Degree -= N;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // >>>>> End Main Loop <<<<<\r\n                    return;\r\n                }\r\n                //--> End Jenkins-Traub\r\n                rpSolve(degreePar, p, zeror, zeroi);\r\n\r\n                var l = zeroi.length;\r\n                //format the output\r\n                for(i = 0; i < l; i++) {\r\n                    // We round the imaginary part to avoid having something crazy like 5.67e-16.\r\n                    var img = round(zeroi[i], decp + 8),\r\n                            real = round(zeror[i], decp + 8);\r\n                    // Did the rounding pay off? If the rounding did nothing more than chop off a few digits then no.\r\n                    // If the rounding results in a a number at least 3 digits shorter we'll keep it else we'll keep \r\n                    // the original otherwise the rounding was worth it.\r\n                    real = decp - String(real).length > 2 ? real : zeror[i];\r\n                    var sign = img < 0 ? '-' : '';\r\n\r\n                    // Remove the zeroes\r\n                    if(real === 0) {\r\n                        real = '';\r\n                    }\r\n                    if(img === 0) {\r\n                        img = '';\r\n                    }\r\n\r\n                    // Remove 1 as the multiplier and discard imaginary part if there isn't one.\r\n                    img = Math.abs(img) === 1 ? sign + 'i' : (img ? img + '*i' : '');\r\n\r\n                    var num = (real && img) ? real + '+' + img : real + img;\r\n                    zeror[i] = num.replace(/\\+\\-/g, '-');\r\n                }\r\n                return zeror;\r\n            }\r\n        },\r\n        roots: function (symbol) {\r\n\r\n            if(symbol.isConstant(true, true)) {\r\n                return core.Utils.nroots(symbol);\r\n            }\r\n            var roots = __.proots(symbol).map(function (x) {\r\n                return _.parse(x);\r\n            });\r\n            return core.Vector.fromArray(roots);\r\n        },\r\n        froot: function (f, guess, dx) {\r\n            var newtonraph = function (xn) {\r\n                var mesh = 1e-12,\r\n                        // If the derivative was already provided then don't recalculate.\r\n                        df = dx ? dx : core.Utils.build(core.Calculus.diff(f.clone())),\r\n                        // If the function was passed in as a function then don't recalculate.\r\n                        fn = f instanceof Function ? f : core.Utils.build(f),\r\n                        max = 10000,\r\n                        done = false,\r\n                        safety = 0;\r\n                while(!done) {\r\n                    var x = xn - (fn(xn) / df(xn));\r\n                    //absolute values for both x & xn ensures that we indeed have the radius    \r\n                    var r = Math.abs(x) - Math.abs(xn),\r\n                            delta = Math.abs(r);\r\n                    xn = x;\r\n\r\n                    if(delta < mesh)\r\n                        done = true;\r\n                    else if(safety > max) {\r\n                        xn = null;\r\n                        done = true;\r\n                    }\r\n\r\n                    safety++;\r\n                }\r\n                return xn;\r\n            };\r\n            return newtonraph(Number(guess));\r\n        },\r\n        quad: function (a, b, c) {\r\n            var q = function (a, b, c, sign) {\r\n                return _.parse('-(' + b + '+' + sign + '*sqrt((' + b + ')^2-4*(' + a + ')*(' + c + ')))/(2*' + a + ')');\r\n            };\r\n            return [q(a, b, c, 1), q(a, b, c, -1)];\r\n        },\r\n        sumProd: function (a, b) {\r\n            return __.quad(-b, a, -1).map(function (x) {\r\n                return x.invert();\r\n            });\r\n        },\r\n        coeffs: function (symbol, wrt, coeffs) {\r\n            wrt = String(wrt);\r\n            symbol = _.expand(symbol);\r\n            coeffs = coeffs || [new Symbol(0)];\r\n            //we cannot get coeffs for group EX\r\n            if(symbol.group === EX && symbol.contains(wrt, true))\r\n                _.error('Unable to get coefficients using expression ' + symbol.toString());\r\n            var vars = variables(symbol);\r\n            if(vars.length === 1 && vars[0] === wrt && !symbol.isImaginary()) {\r\n                var a = new Polynomial(symbol).coeffs.map(function (x) {\r\n                    return new Symbol(x);\r\n                });\r\n\r\n                for(var i = 0, l = a.length; i < l; i++) {\r\n                    var coeff = a[i],\r\n                            e = coeffs[i];\r\n                    if(e)\r\n                        coeff = _.add(e, coeff);\r\n                    coeffs[i] = coeff; //transfer it all over\r\n                }\r\n            }\r\n            else {\r\n                if(!wrt)\r\n                    _.error('Polynomial contains more than one variable. Please specify which variable is to be used!');\r\n                //if the variable isn't part of this polynomial then we're looking at x^0\r\n\r\n                if(vars.indexOf(wrt) === -1) {\r\n                    coeffs[0] = _.add(symbol, coeffs[0]);\r\n                }\r\n                else {\r\n                    coeffs = coeffs || [new Symbol(0)];\r\n                    if(symbol.group === CB) {\r\n                        var s = symbol.symbols[wrt];\r\n                        if(!s)\r\n                            _.error('Expression is not a polynomial!');\r\n                        var p = Number(s.power);\r\n                        coeff = _.divide(symbol.clone(), s.clone());\r\n                        if(coeff.contains(wrt, true) || p < 0 || !isInt(p))\r\n                            _.error('Expression is not a polynomial!');\r\n                        var e = coeffs[p];\r\n                        if(e)\r\n                            coeff = _.add(e, coeff);\r\n                        coeffs[p] = coeff;\r\n                    }\r\n                    else if(symbol.group === CP) {\r\n                        symbol.each(function (x) {\r\n                            __.coeffs(x.clone(), wrt, coeffs);\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            //fill holes\r\n            for(var i = 0, l = coeffs.length; i < l; i++)\r\n                if(typeof coeffs[i] === 'undefined')\r\n                    coeffs[i] = new Symbol(0);\r\n\r\n            return coeffs;\r\n        },\r\n        /**\r\n         * Get's all the powers of a particular polynomial including the denominators. The denominators powers\r\n         * are returned as negative. All remaining polynomials are returned as zero order polynomials.\r\n         * for example polyPowers(x^2+1/x+y+t) will return [ '-1', 0, '2' ]\r\n         * @param {Symbol} e\r\n         * @param {String} for_variable\r\n         * @param {Array} powers\r\n         * @returns {Array} An array of the powers\r\n         */\r\n        //assumes you've already verified that it's a polynomial\r\n        polyPowers: function (e, for_variable, powers) {\r\n            powers = powers || [];\r\n            var g = g = e.group;\r\n            if(g === PL && for_variable === e.value) {\r\n                powers = powers.concat(keys(e.symbols));\r\n            }\r\n            else if(g === CP) {\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s];\r\n                    var g = symbol.group, v = symbol.value;\r\n                    if(g === S && for_variable === v)\r\n                        powers.push(symbol.power);\r\n                    else if(g === PL || g === CP)\r\n                        powers = __.polyPowers(symbol, for_variable, powers);\r\n                    else if(g === CB && symbol.contains(for_variable)) {\r\n                        var t = symbol.symbols[for_variable];\r\n                        if(t)\r\n                            powers.push((t.power));\r\n                    }\r\n                    else if(g === N || for_variable !== v)\r\n                        powers.push(0);\r\n                }\r\n            }\r\n            else if(g === CB && e.contains(for_variable)) {\r\n                powers.push(core.Utils.decompose_fn(e, for_variable, true).x.power);\r\n            }\r\n            return core.Utils.arrayUnique(powers).sort();\r\n        },\r\n        //The factor object\r\n        Factor: {\r\n            //splits the symbol in symbol and constant\r\n            split: function (symbol) {\r\n                var c = new Symbol(1); //the constants part\r\n                var s = new Symbol(1); //the symbolic part\r\n                __.Factor.factor(symbol, new Factors()).each(function (x) {\r\n                    var t = _.parse(x);\r\n                    if(x.isConstant(true)) {\r\n                        c = _.multiply(c, t);\r\n                    }\r\n                    else {\r\n                        s = _.multiply(s, t);\r\n                    }\r\n                });\r\n                return [c, s];\r\n            },\r\n            mix: function (o, include_negatives) {\r\n                var factors = keys(o);\r\n                var l = factors.length;\r\n                var m = [];//create a row which we'r going to be mixing\r\n                for(var i = 0; i < l; i++) {\r\n                    var factor = factors[i],\r\n                            p = o[factor];\r\n                    var ll = m.length;\r\n                    for(var j = 0; j < ll; j++) {\r\n                        var t = m[j] * factor;\r\n                        m.push(t);\r\n                        if(include_negatives)\r\n                            m.push(-t);\r\n                    }\r\n\r\n                    for(var j = 1; j <= p; j++)\r\n                        m.push(Math.pow(factor, j));\r\n                }\r\n                return m;\r\n            },\r\n            //TODO: this method is to replace common factoring\r\n            common: function (symbol, factors) {\r\n                try {\r\n                    if(symbol.group === CP) {\r\n                        //this may have the unfortunate side effect of expanding and factoring again\r\n                        //to only end up with the same result. \r\n                        //TODO: try to avoid this\r\n                        //collect the symbols and sort to have the longest first. Thinking is that the longest terms \r\n                        //has to contain the variable in order for it to be factorable\r\n                        var symbols = _.expand(symbol.clone(), true).collectSymbols(null, null, function (a, b) {\r\n                            return (b.length || 1) - (a.length || 1);\r\n                        });\r\n\r\n                        var map = {}; //create a map of common factors\r\n                        var coeffs = [];\r\n                        for(var i = 0; i < symbols.length; i++) {\r\n                            var sym = symbols[i];\r\n                            coeffs.push(sym.multiplier.clone());\r\n                            sym.each(function (x) {\r\n                                var p = Number(x.power);\r\n                                //This check exits since we have a symbolic power.\r\n                                //For the future... think about removing this check and modify for symbolic powers\r\n                                if(isNaN(p))\r\n                                    throw new Error('exiting');\r\n                                //loop through the symbols and lump together common terms\r\n                                if(x.value in map) {\r\n                                    if(p < map[x.value][0])\r\n                                        map[x.value][0] = p;\r\n                                    map[x.value][1].push(x);\r\n                                }\r\n                                else\r\n                                    map[x.value] = [p, [x]];\r\n                            });\r\n                        }\r\n                        //the factor\r\n                        var factor = new Symbol(1);\r\n                        for(var x in map) {\r\n                            //if this factor is found in all terms since the length of \r\n                            //matching variable terms matches the number of original terms\r\n                            if(map[x][1].length === symbols.length) {\r\n                                //generate a symbol and multiply into the factor\r\n                                factor = _.multiply(factor, _.pow(new Symbol(x), new Symbol(map[x][0])));\r\n                            }\r\n                        }\r\n                        //get coefficient factor\r\n                        var c = core.Math2.QGCD.apply(null, coeffs);\r\n\r\n                        if(!c.equals(1)) {\r\n                            factors.add(new Symbol(c));\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbols[i].multiplier = symbols[i].multiplier.divide(c);\r\n                            }\r\n                        }\r\n\r\n                        //if we actuall found any factors\r\n                        if(!factor.equals(1)) {\r\n                            factors.add(factor);\r\n                            symbol = new Symbol(0);\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbol = _.add(symbol, _.divide(symbols[i], factor.clone()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            zeroes: function (symbol, factors) {\r\n                var exit = function () {\r\n                    throw new core.exceptions.ValueLimitExceededError('Exiting');\r\n                };\r\n                try {\r\n                    var vars, term, sum, p, e;\r\n                    symbol = _.expand(symbol.clone());\r\n                    e = symbol.toString();\r\n                    vars = variables(symbol);\r\n\r\n                    sum = new Symbol(0);\r\n\r\n                    var terms = [];\r\n                    var powers = [];\r\n\r\n                    //start setting each variable to zero\r\n                    for(var i = 0, l = vars.length; i < vars.length; i++) {\r\n                        var subs = {};\r\n                        //we want to create a subs object with all but the current variable set to zero\r\n                        for(var j = 0; j < l; j++)\r\n                            if(i !== j) //make sure we're not looking at the same variable\r\n                                subs[vars[j]] = 0;\r\n                        term = _.parse(e, subs);\r\n                        var tp = term.power;\r\n                        //the temporary power has to be an integer as well\r\n                        if(!isInt(tp))\r\n                            exit();\r\n                        terms.push(term);\r\n                        powers.push(term.power);\r\n                    }\r\n\r\n                    //get the gcd. This will be the p in (a^n+b^m)^p\r\n                    //if the gcd equals 1 meaning n = m then we need a tie breakder\r\n                    if(core.Utils.allSame(powers)) {\r\n                        //get p given x number of terms\r\n                        var n_terms = symbol.length;\r\n                        //the number of zeroes determines\r\n                        var n_zeroes = terms.length;\r\n                        if(n_zeroes === 2) {\r\n                            p = new Frac(powers[0] / (n_terms - 1));\r\n                        }\r\n                        if(n_zeroes === 3) {\r\n                            p = new Frac(powers[0] / Math.round((Math.sqrt(8 * n_terms - 1) - 3) / 2));\r\n                        }\r\n                        /*\r\n                         //get the lowest possible power\r\n                         //e.g. given b^4+2*a^2*b^2+a^4, the power we're looking for would be 2\r\n                         symbol.each(function(x) {\r\n                         if(x.group === CB)\r\n                         x.each(function(y) {\r\n                         if(!p || y.power.lessThan(p))\r\n                         //p = Number(y.power);\r\n                         p = y.power;\r\n                         });\r\n                         else if(!p || x.power.lessThan(p))\r\n                         //p = Number(x.power);\r\n                         p = x.power;\r\n                         });\r\n                         */\r\n                    }\r\n                    else\r\n                        //p is just the gcd of the powers\r\n                        p = core.Math2.QGCD.apply(null, powers);\r\n\r\n                    //if we don't have an integer then exit\r\n                    if(!isInt(p))\r\n                        exit();\r\n\r\n                    //build the factor\r\n                    for(var i = 0; i < terms.length; i++) {\r\n                        var t = terms[i];\r\n                        var n = t.power.clone().divide(p);\r\n                        t.multiplier = new Frac(Math.pow(t.multiplier, 1 / n));\r\n                        t.power = p.clone();\r\n                        sum = _.add(sum, t);\r\n                    }\r\n\r\n                    //by now we have the factor of zeroes. We'll know if we got it right because \r\n                    //we'll get a remainder of zero each time we divide by it\r\n                    if(sum.group !== CP)\r\n                        return symbol; //nothing to do\r\n\r\n                    while(true) {\r\n                        var d = __.div(symbol.clone(), sum.clone());\r\n                        if(d[1].equals(0)) {\r\n                            symbol = d[0];\r\n                            factors.add(sum.clone());\r\n                            if(symbol.equals(1)) //we've reached 1 so done.\r\n                                break;\r\n                        }\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                catch(e) {\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            },\r\n            factor: function (symbol, factors) {\r\n                // Don't try to factor constants\r\n                if(symbol.isConstant()) {\r\n                    return core.Math2.factor(symbol);\r\n                }\r\n\r\n                var _symbol = _.parse(symbol);\r\n                var retval = __.Factor._factor(_symbol, factors);\r\n                if(retval.equals(symbol)) {\r\n                    return retval;\r\n                }\r\n\r\n                if(retval.group === CB) {\r\n                    var t = new Symbol(1);\r\n                    var p = _.parse(retval.power);\r\n                    //store the multiplier and strip it\r\n                    var m = _.parse(retval.multiplier);\r\n\r\n                    retval.toUnitMultiplier();\r\n\r\n                    /* \r\n                     * NOTE: for sign issues with factor START DEBUGGING HERE\r\n                     */\r\n                    //move the sign to t\r\n                    if(retval.multiplier.lessThan(0)) {\r\n                        t.negate();\r\n                        retval.negate();\r\n                    }\r\n\r\n                    retval.each(function (x) {\r\n                        // Related to #566. Since the symbol's group may not have been properly\r\n                        // updated, it's easier to just parse the symbol and have the parser \r\n                        // do the update for us.\r\n                        var factored = _.parse(__.Factor._factor(x));\r\n\r\n                        if(factored.group === CB) {\r\n                            // Include the multiplier\r\n                            m = _.multiply(m, Symbol.create(factored.multiplier));\r\n                            factored.each(function (y) {\r\n                                var _factored = _.parse(__.Factor._factor(y));\r\n                                t = _.multiply(t, _factored);\r\n                                if(_factored.group === CB) {\r\n                                    m = _.multiply(m, Symbol.create(_factored.multiplier));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            t = _.multiply(t, factored);\r\n                        }\r\n                    });\r\n\r\n                    //put back the multiplier and power\r\n                    retval = _.pow(_.multiply(m, t), p);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            quadFactor: function (symbol, factors) {\r\n                if(symbol.isPoly() && __.degree(symbol.equals(2))) {\r\n                    //We've  already checked that we're dealing with a polynomial\r\n                    var v = core.Utils.variables(symbol)[0]; //get the variable\r\n                    var coeffs = __.coeffs(symbol, v);\r\n                    //factor the lead coefficient\r\n                    var cf = __.Factor._factor(coeffs[2].clone());\r\n                    //check if we have factors\r\n                    if(cf.group === CB) {\r\n                        var symbols = cf.collectSymbols();\r\n                        //if the factors are greater than 2 we're done so exit\r\n                        if(symbols.length > 2)\r\n                            return symbol;\r\n                        //if we have two factors then attempt to factor the polynomial\r\n                        //let the factors be f1 and f1\r\n                        //let the factors be (ax+b)(cx+d)\r\n                        //let the coefficients be c1x^2+c2x+c3\r\n                        //then a(x1)+c(x2)=c2 and x1*x2=c3\r\n                        //we can solve for x1 and x2\r\n                        var c = _.multiply(_.parse(coeffs[0]), _.parse(symbols[0]));\r\n                        var b = _.parse(coeffs[1]).negate();\r\n                        var a = _.parse(symbols[1]);\r\n                        //solve the system\r\n                        var root = __.quad(a, b, c).filter(function (x) {\r\n                            if(core.Utils.isInt(x))\r\n                                return x;\r\n                        });\r\n                        //if we have one root then find the other one by dividing the constant\r\n                        if(root.length === 1) {\r\n                            var root1 = root[0];\r\n                            var root2 = _.divide(coeffs[0], _.parse(root1));\r\n                            if(core.Utils.isInt(root2)) {\r\n                                //we found them both\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[1], v, root2)));\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[0], v, root1)));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            cubeFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var symbols = symbol.collectSymbols();\r\n                    // The symbol should be in the form of a^3+-b^3. The length\r\n                    // should therefore only be two. If it's any different from this\r\n                    // then we're done\r\n                    if(symbols.length === 2) {\r\n                        // Store the signs and then strip them from the symbols\r\n                        var sign_a = symbols[0].sign();\r\n                        var a = symbols[0].clone().abs();\r\n                        var sign_b = symbols[1].sign();\r\n                        var b = symbols[1].clone().abs();\r\n                        // Check if they're cube\r\n                        if(a.isCube() && b.isCube()) {\r\n                            // Keep the negative sign on the right, meaning b is always negative.\r\n                            if(sign_a < sign_b) {\r\n                                // Swap the signs and then the values\r\n                                [sign_a, sign_b] = [sign_b, sign_a];\r\n                                [a, b] = [b, a];\r\n                            }\r\n\r\n                            // Get teh roots\r\n                            var m_root_a = _.parse(a.getNth(3));\r\n                            var m_root_b = _.parse(b.getNth(3));\r\n\r\n                            // Remove the cube for both\r\n                            var x = _.multiply(_.expand(_.pow(a.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_a);\r\n                            var y = _.multiply(_.expand(_.pow(b.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_b);\r\n\r\n                            if(sign_a === 1 && sign_b === -1) {\r\n                                // Apply difference of cubes rule\r\n                                factors.add(_.parse(format('(({0})-({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2+({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                            else if(sign_a === 1 && sign_b === 1) {\r\n                                // Apply sum of cubes rule\r\n                                factors.add(_.parse(format('(({0})+({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2-({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            _factor: function (symbol, factors) {\r\n                var g = symbol.group;\r\n                //some items cannot be factored any further so return those right away\r\n                if(symbol.group === FN) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.group === S && arg.isSimple()) {\r\n                        return symbol;\r\n                    }\r\n                }\r\n                else if(symbol.group === S && symbol.isSimple()) {\r\n                    return symbol;\r\n                }\r\n\r\n                // Expand the symbol to get it in a predictable form. If this step\r\n                // is skipped some factors are missed.\r\n                //if(symbol.group === CP && !(even(symbol.power) && symbol.multiplier.lessThan(0))) {\r\n                if(symbol.group === CP) {\r\n                    symbol.distributeMultiplier(true);\r\n                    var t = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        if((x.group === CP && x.power.greaterThan(1) || x.group === CB))\r\n                            x = _.expand(x);\r\n                        t = _.add(t, x);\r\n                    });\r\n                    t.power = symbol.power;\r\n\r\n                    symbol = t;\r\n                }\r\n\r\n                if(symbol.group === FN && symbol.fname !== 'sqrt') {\r\n                    symbol = core.Utils.evaluate(symbol);\r\n                }\r\n\r\n                //make a copy of the symbol to return if something goes wrong\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    if(symbol.group === CB) {\r\n                        var p = _.parse(symbol.power);\r\n\r\n                        var den_array, num_array, den, num, dfact, nfact;\r\n                        //grab the denominator and strip the multiplier and power. Store them in an array\r\n                        den_array = __.Simplify.strip(symbol.getDenom());\r\n                        num_array = __.Simplify.strip(symbol.getNum());\r\n\r\n                        den = den_array.pop();\r\n                        num = num_array.pop();\r\n\r\n                        //if the numerator equals the symbol then we've hit the simplest form and then we're done\r\n                        if(num.equals(symbol)) {\r\n                            return symbol;\r\n                        }\r\n                        nfact = __.Factor.factor(num);\r\n                        dfact = __.Factor.factor(den);\r\n\r\n                        var n = __.Simplify.unstrip(num_array, nfact);\r\n                        var d = __.Simplify.unstrip(den_array, dfact);\r\n\r\n                        var retval = _.divide(n, d);\r\n\r\n                        return retval;\r\n                    }\r\n                    if(symbol.group === S) {\r\n                        return symbol; //absolutely nothing to do\r\n                    }\r\n\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol.equals(1))\r\n                            return symbol.clone();\r\n                        var ret = core.Math2.factor(symbol);\r\n                        return ret;\r\n                    }\r\n\r\n                    var p = symbol.power.clone();\r\n\r\n                    if(isInt(p) && !(p.lessThan(0) && symbol.group === FN)) {\r\n                        var sign = p.sign();\r\n                        symbol.toLinear();\r\n                        factors = factors || new Factors();\r\n                        var map = {};\r\n                        symbol = _.parse(core.Utils.subFunctions(symbol, map));\r\n                        if(keys(map).length > 0) { //it might have functions\r\n                            factors.preAdd = function (factor) {\r\n                                var ret = _.parse(factor, core.Utils.getFunctionsSubs(map));\r\n                                return ret;\r\n                            };\r\n                        }\r\n\r\n                        //strip the power\r\n                        if(!symbol.isLinear()) {\r\n                            factors.pFactor = symbol.power.toString();\r\n                            symbol.toLinear();\r\n                        }\r\n\r\n                        var vars = variables(symbol);\r\n                        //bypass for imaginary. TODO: find a better solution\r\n                        if(symbol.isImaginary()) {\r\n                            vars.push(core.Settings.IMAGINARY);\r\n                        }\r\n                        var multiVar = vars.length > 1;\r\n\r\n                        //minor optimization. Seems to cut factor time by half in some cases.\r\n                        if(multiVar) {\r\n                            var all_S = true, all_unit = true;\r\n                            symbol.each(function (x) {\r\n                                if(x.group !== S)\r\n                                    all_S = false;\r\n                                if(!x.multiplier.equals(1))\r\n                                    all_unit = false;\r\n                            });\r\n\r\n                            if(all_S && all_unit) {\r\n                                return _.pow(_.parse(symbol, core.Utils.getFunctionsSubs(map)), _.parse(p));\r\n                            }\r\n                        }\r\n\r\n                        //factor the coefficients\r\n                        var coeff_factors = new Factors();\r\n\r\n                        symbol = __.Factor.coeffFactor(symbol, coeff_factors);\r\n\r\n                        coeff_factors.each(function (x) {\r\n                            // If the factor was negative but was within a square then it becomes positive\r\n                            if(even(p) && x.lessThan(0)) {\r\n                                x.negate();\r\n                            }\r\n\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        //factor the power\r\n                        var power_factors = new Factors();\r\n                        symbol = __.Factor.powerFactor(symbol, power_factors);\r\n                        power_factors.each(function (x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        if(!multiVar) {\r\n                            //pass in vars[0] for safety\r\n                            var v = vars[0];\r\n\r\n                            symbol = __.Factor.squareFree(symbol, factors, v);\r\n\r\n                            var t_factors = new Factors();\r\n\r\n                            symbol = __.Factor.trialAndError(symbol, t_factors, v);\r\n\r\n                            //generate a symbol based off the last factors\r\n                            var tf_symbol = t_factors.toSymbol();\r\n                            //if nothing was factored then return the factors\r\n                            if(tf_symbol.equals(untouched)) {\r\n                                return tf_symbol;\r\n                            }\r\n\r\n                            for(var x in t_factors.factors) {\r\n                                //store the current factor in t_factor\r\n                                var t_factor = t_factors.factors[x];\r\n                                factors.add(_.pow(t_factor, _.parse(p)));\r\n                            }\r\n                            //if we still don't have a factor and it's quadratic then let's just do a quad factor\r\n                            if(symbol.equals(untouched)) {\r\n                                symbol = __.Factor.quadFactor(symbol, factors);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            // Try sum and difference of cubes\r\n                            symbol = __.Factor.cubeFactor(symbol, factors);\r\n\r\n                            symbol = __.Factor.mfactor(symbol, factors);\r\n\r\n                            //put back the sign of power\r\n                            factors.each(function (x) {\r\n                                if(sign < 0)\r\n                                    x.power.negate();\r\n                            });\r\n                        }\r\n\r\n                        //last minute clean up\r\n                        symbol = _.parse(symbol, core.Utils.getFunctionsSubs(map));\r\n                        \r\n                        var addPower = factors.length === 1;\r\n                        \r\n                        factors.add(_.pow(symbol, _.parse(p)));\r\n\r\n                        var retval = factors.toSymbol();\r\n                        \r\n                        // We may have only factored out the symbol itself so we end up with a factor of one \r\n                        // where the power needs to be placed back\r\n                        // e.g. factor((2*y+p)^2). Here we end up having a factor of 1 remaining and a p of 2.\r\n                        if(addPower && symbol.equals(1) && retval.isLinear()) {\r\n                            retval = _.pow(retval, _.parse(p));\r\n                        }\r\n                        \r\n                        return retval;\r\n                    }\r\n\r\n                    return symbol;\r\n                }\r\n                catch(e) {\r\n                    //no need to stop the show because something went wrong :). Just return the unfactored.\r\n                    return untouched;\r\n                }\r\n            },\r\n            reduce: function (symbol, factors) {\r\n                if(symbol.group === CP && symbol.length === 2) {\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return b.multiplier - a.multiplier;\r\n                    });\r\n                    if(symbols[0].power.equals(symbols[1].power)) {\r\n                        //x^n-a^n\r\n                        var n = _.parse(symbols[0].power),\r\n                                a = symbols[0].clone().toLinear(),\r\n                                b = symbols[1].clone().toLinear();\r\n\r\n                        //apply rule: (a-b)*sum(a^(n-i)*b^(i-1),1,n)\r\n                        factors.add(_.add(a.clone(), b.clone()));\r\n                        //flip the sign\r\n                        b.negate();\r\n                        //turn n into a number\r\n                        var nn = Number(n);\r\n                        //the remainder\r\n                        var result = new Symbol(0);\r\n                        for(var i = 1; i <= nn; i++) {\r\n                            var aa = _.pow(a.clone(), _.subtract(n.clone(), new Symbol(i))),\r\n                                    bb = _.pow(b.clone(), _.subtract(new Symbol(i), new Symbol(1)));\r\n                            result = _.add(result, _.multiply(aa, bb));\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Makes Symbol square free\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @@param {String} variable The variable which is being factored \r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            squareFree: function (symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S)\r\n                    return symbol;\r\n\r\n                var poly = new Polynomial(symbol, variable);\r\n                var sqfr = poly.squareFree();\r\n                var p = sqfr[2];\r\n                //if we found a square then the p entry in the array will be non-unit\r\n                if(p !== 1) {\r\n                    //make sure the remainder doesn't have factors\r\n                    var t = sqfr[1].toSymbol();\r\n                    t.power = t.power.multiply(new Frac(p));\r\n                    //send the factor to be fatored to be sure it's completely factored\r\n                    factors.add(__.Factor.factor(t));\r\n\r\n                    var retval = __.Factor.squareFree(sqfr[0].toSymbol(), factors);\r\n\r\n                    return retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Factors the powers such that the lowest power is a constant\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            powerFactor: function (symbol, factors) {\r\n                //only PL need apply\r\n                if(symbol.group !== PL || symbol.previousGroup === EX)\r\n                    return symbol;\r\n                var k = keys(symbol.symbols);\r\n                //we expect only numeric powers so return all else\r\n                if(!core.Utils.allNumeric(k))\r\n                    return symbol;\r\n\r\n                var d = core.Utils.arrayMin(k);\r\n                var retval = new Symbol(0);\r\n                var q = _.parse(symbol.value + '^' + d);\r\n                symbol.each(function (x) {\r\n                    x = _.divide(x, q.clone());\r\n                    retval = _.add(retval, x);\r\n                });\r\n\r\n                factors.add(q);\r\n                return retval;\r\n            },\r\n            /**\r\n             * Removes GCD from coefficients\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @returns {Symbol}\r\n             */\r\n            coeffFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var gcd = core.Math2.QGCD.apply(null, symbol.coeffs());\r\n\r\n                    if(!gcd.equals(1)) {\r\n                        symbol.each(function (x) {\r\n                            if(x.isComposite()) {\r\n                                x.each(function (y) {\r\n                                    y.multiplier = y.multiplier.divide(gcd);\r\n                                });\r\n                            }\r\n                            else\r\n                                x.multiplier = x.multiplier.divide(gcd);\r\n                        });\r\n                        symbol.updateHash();\r\n                    }\r\n                    else {\r\n                        // TODO: This should probably go to the prototype\r\n                        var power = function (symbol) {\r\n                            var p;\r\n                            if(symbol.group === CB) {\r\n                                p = 0;\r\n                                symbol.each(function (x) {\r\n                                    p += x.power;\r\n                                });\r\n                            }\r\n                            else {\r\n                                p = Number(symbol.power);\r\n                            }\r\n                            return p;\r\n                        };\r\n                        // Factor out negatives from the lead term\r\n                        var terms = symbol.collectSymbols(null, null, null, true).sort(function (a, b) {\r\n                            // Push constants to the back\r\n                            if(a.isConstant(true))\r\n                                return 1;\r\n                            return b.power - a.power;\r\n                        });\r\n\r\n                        var LT = terms[0];\r\n\r\n                        // Check if the LT is indeed the greatest\r\n                        if(power(LT) > power(terms[1]) || terms[1].isConstant(true)) {\r\n                            if(LT.multiplier.lessThan(0)) {\r\n                                // Although the symbol should always be linear at this point, remove the negative for squares\r\n                                // to be safe.\r\n                                factors.add(new Symbol(-1));\r\n\r\n                                symbol.each(function (x) {\r\n                                    x.negate();\r\n                                }, true);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(factors) {\r\n                        factors.add(new Symbol(gcd));\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * The name says it all :)\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @@param {String} variable \r\n             * @returns {Symbol}\r\n             */\r\n            trialAndError: function (symbol, factors, variable) {\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    // At temp holder for the factors. If all goes well then\r\n                    // they'll be moved to the actual factors.\r\n                    var factor_array = [];\r\n\r\n                    if(symbol.isConstant() || symbol.group === S)\r\n                        return symbol;\r\n                    var poly = new Polynomial(symbol, variable),\r\n                            cnst = poly.coeffs[0],\r\n                            cfactors = core.Math2.ifactor(cnst),\r\n                            roots = __.proots(symbol);\r\n                    for(var i = 0; i < roots.length; i++) {\r\n                        var r = roots[i],\r\n                                p = 1;\r\n                        if(!isNaN(r)) { //if it's a number\r\n                            for(var x in cfactors) {\r\n                                //check it's raised to a power\r\n                                var n = core.Utils.round(Math.log(x) / Math.log(Math.abs(r)), 8);\r\n                                if(isInt(n)) {\r\n                                    r = x; //x must be the root since n gave us a whole\r\n                                    p = n;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            var root = new Frac(r),\r\n                                    terms = [new Frac(root.num).negate()];\r\n                            terms[p] = new Frac(root.den);\r\n                            //convert to Frac. The den is coeff of LT and the num is coeff of constant\r\n                            var div = Polynomial.fromArray(terms, poly.variable).fill(),\r\n                                    t = poly.divide(div);\r\n                            if(t[1].equalsNumber(0)) { //if it's zero we have a root and divide it out\r\n                                poly = t[0];\r\n                                // factors.add(div.toSymbol());\r\n                                factor_array.push(div.toSymbol());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(!poly.equalsNumber(1)) {\r\n                        poly = __.Factor.search(poly, factors);\r\n                    }\r\n\r\n                    // Move the factors over since all went well.\r\n                    factor_array.forEach(function (x) {\r\n                        factors.add(x);\r\n                    });\r\n\r\n                    return poly.toSymbol();\r\n                }\r\n                catch(e) {\r\n                    return untouched;\r\n                }\r\n            },\r\n            search: function (poly, factors, base) {\r\n                base = base || 10; //I like 10 because numbers exhibit similar behaviours at 10\r\n                var v = poly.variable; //the polynmial variable name\r\n                /**\r\n                 * Attempt to remove a root by division given a number by first creating\r\n                 * a polynomial fromt he given information\r\n                 * @param {int} c1 - coeffient for the constant\r\n                 * @param {int} c2 - coefficient for the LT\r\n                 * @param {int} n - the number to be used to construct the polynomial\r\n                 * @param {int} p - the power at which to create the polynomial\r\n                 * @returns {null|Polynomial} - returns polynomial if successful otherwise null\r\n                 */\r\n                var check = function (c1, c2, n, p) {\r\n                    var candidate = Polynomial.fit(c1, c2, n, base, p, v);\r\n                    if(candidate && candidate.coeffs.length > 1) {\r\n                        var t = poly.divide(candidate);\r\n                        if(t[1].equalsNumber(0)) {\r\n                            factors.add(candidate.toSymbol());\r\n                            return [t[0], candidate];\r\n                        }\r\n                    }\r\n                    return null;\r\n                };\r\n                var cnst = poly.coeffs[0];\r\n                var cfactors = core.Math2.ifactor(cnst);\r\n                var lc = poly.lc();\r\n                var ltfactors = core.Math2.ifactor(lc);\r\n                var subbed = poly.sub(base);\r\n                var isubbed = core.Math2.ifactor(subbed);\r\n                var nfactors = __.Factor.mix(isubbed, subbed < 0);\r\n                var cp = Math.ceil(poly.coeffs.length / 2);\r\n                var lc_is_neg = lc.lessThan(0);\r\n                var cnst_is_neg = cnst.lessThan(0);\r\n                ltfactors['1'] = 1;\r\n                cfactors['1'] = 1;\r\n                while(cp--) {\r\n                    for(var x in ltfactors) {\r\n                        for(var y in cfactors) {\r\n                            for(var i = 0; i < nfactors.length; i++) {\r\n                                var factor_found = check(x, y, nfactors[i], cp);\r\n                                if(factor_found) {\r\n                                    poly = factor_found[0];\r\n                                    if(!core.Utils.isPrime(poly.sub(base)))\r\n                                        poly = __.Factor.search(poly, factors);\r\n                                    return poly;\r\n                                }\r\n                                else if(!factor_found) {\r\n                                    if(lc_is_neg && cnst_is_neg)\r\n                                        factor_found = check(-x, -y, nfactors[i], cp);\r\n                                    else if(lc_is_neg)\r\n                                        factor_found = check(-x, y, nfactors[i], cp); //check a negative lc\r\n                                    else if(cnst_is_neg)\r\n                                        factor_found = check(x, -y, nfactors[i], cp); //check a negative constant\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return poly;\r\n            },\r\n            /**\r\n             * Equivalent of square free factor for multivariate polynomials\r\n             * @param {type} symbol\r\n             * @param {type} factors\r\n             * @returns {AlgebraL#18.Factor.mSqfrFactor.symbol|Array|AlgebraL#18.__.Factor.mSqfrFactor.d}\r\n             */\r\n            mSqfrFactor: function (symbol, factors) {\r\n                if(symbol.group !== FN) {\r\n                    var vars = variables(symbol).reverse();\r\n\r\n                    // Loop through all the variable and remove the partial derivatives\r\n                    for(var i = 0; i < vars.length; i++) {\r\n                        do {\r\n                            if(vars[i] === symbol.value) {\r\n                                //the derivative tells us nothing since this symbol is already the factor\r\n                                factors.add(symbol);\r\n                                symbol = new Symbol(1);\r\n                                continue;\r\n                            }\r\n\r\n                            var diff = core.Calculus.diff(symbol, vars[i]);\r\n\r\n                            var d = __.Factor.coeffFactor(diff);\r\n\r\n                            if(d.equals(0))\r\n                                break;\r\n\r\n                            //trial division to see if factors have whole numbers. \r\n                            //This can be optimized by stopping as soon as can_divide is false\r\n                            //this will also need utilize big number at some point\r\n                            var can_divide = true;\r\n                            if(d.isConstant() && symbol.isComposite()) {\r\n                                //check the coefficients\r\n\r\n                                symbol.each(function (x) {\r\n                                    if(x.multiplier % d !== 0)\r\n                                        can_divide = false;\r\n                                }, true);\r\n                            }\r\n\r\n                            //if we can divide then do so\r\n                            if(can_divide) {\r\n\r\n                                var div = __.div(symbol, d.clone()),\r\n                                        is_factor = div[1].equals(0);\r\n                                \r\n                                // Break infinite loop for factoring e^t*x-1\r\n                                if((symbol.equals(div[0]) && div[1].equals(0))) {\r\n                                    break;\r\n                                }\r\n                                \r\n                                if(div[0].isConstant()) {\r\n                                    factors.add(div[0]);\r\n                                    break;\r\n                                }\r\n                                \r\n                            }\r\n                            else\r\n                                is_factor = false;\r\n\r\n                            if(is_factor) {\r\n                                factors.add(div[0]);\r\n                                symbol = d;\r\n                            }\r\n                        }\r\n                        while(is_factor)\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //difference of squares factorization\r\n            sqdiff: function (symbol, factors) {\r\n                if(symbol.isConstant('all')) {\r\n                    // Nothing to do\r\n                    return symbol;\r\n                }\r\n\r\n                try {\r\n                    var remove_square = function (x) {\r\n                        return core.Utils.block('POSITIVE_MULTIPLIERS', function () {\r\n                            return Symbol.unwrapPARENS(math.sqrt(math.abs(x)));\r\n                        }, true);\r\n                    };\r\n                    var separated = core.Utils.separate(symbol.clone());\r\n\r\n                    var obj_array = [];\r\n\r\n                    //get the unique variables\r\n                    for(var x in separated) {\r\n                        if(x !== 'constants') {\r\n                            obj_array.push(separated[x]);\r\n                        }\r\n                    }\r\n                    obj_array.sort(function (a, b) {\r\n                        return b.power - a.power;\r\n                    });\r\n\r\n                    //if we have the same number of variables as unique variables then we can apply the difference of squares\r\n                    if(obj_array.length === 2) {\r\n                        var a, b;\r\n                        a = obj_array.pop();\r\n                        b = obj_array.pop();\r\n\r\n                        if(even(a.power) && even(b.power)\r\n                                && a.sign() === b.sign()\r\n                                && a.group === S && b.group === S) {\r\n                            throw new Error('Unable to factor');\r\n                        }\r\n                        ;\r\n\r\n                        if(a.isComposite() && b.power.equals(2)) {\r\n                            //remove the square from b\r\n                            b = remove_square(b);\r\n                            var f = __.Factor.factor(_.add(a, separated.constants));\r\n                            if(f.power.equals(2)) {\r\n                                f.toLinear();\r\n                                factors.add(_.subtract(f.clone(), b.clone()));\r\n                                factors.add(_.add(f, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            a = a.powSimp();\r\n                            b = b.powSimp();\r\n\r\n                            if((a.group === S || a.fname === '') && a.power.equals(2) && (b.group === S || b.fname === '') && b.power.equals(2) && !separated.constants) {\r\n                                if(a.multiplier.lessThan(0)) {\r\n                                    var t = b;\r\n                                    b = a;\r\n                                    a = t;\r\n                                }\r\n                                if(a.multiplier.greaterThan(0)) {\r\n                                    a = remove_square(a);\r\n                                    b = remove_square(b);\r\n                                }\r\n\r\n                                factors.add(_.subtract(a.clone(), b.clone()));\r\n                                factors.add(_.add(a, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //factoring for multivariate\r\n            mfactor: function (symbol, factors) {\r\n\r\n                if(symbol.group === FN) {\r\n                    if(symbol.fname === 'sqrt') {\r\n                        var factors2 = new Factors(),\r\n                                arg = __.Factor.common(symbol.args[0].clone(), factors2);\r\n                        arg = __.Factor.coeffFactor(arg, factors2);\r\n                        symbol = _.multiply(_.symfunction('sqrt', [arg]), _.parse(symbol.multiplier));\r\n                        factors2.each(function (x) {\r\n                            symbol = _.multiply(symbol, _.parse(core.Utils.format('sqrt({0})', x)));\r\n                        });\r\n                    }\r\n                    else\r\n                        factors.add(symbol);\r\n                }\r\n                else {\r\n\r\n                    //square free factorization\r\n                    symbol = __.Factor.mSqfrFactor(symbol, factors);\r\n\r\n                    //try factor out common factors\r\n                    //symbol = __.Factor.common(symbol, factors);\r\n\r\n                    var vars = variables(symbol),\r\n                            symbols = symbol.collectSymbols().map(function (x) {\r\n                        return Symbol.unwrapSQRT(x);\r\n                    }),\r\n                            sorted = {},\r\n                            maxes = {},\r\n                            l = vars.length, n = symbols.length;\r\n                    //take all the variables in the symbol and organize by variable name\r\n                    //e.g. a^2+a^2+b*a -> {a: {a^3, a^2, b*a}, b: {b*a}}\r\n\r\n                    for(var i = 0; i < l; i++) {\r\n                        var v = vars[i];\r\n                        sorted[v] = new Symbol(0);\r\n                        for(var j = 0; j < n; j++) {\r\n                            var s = symbols[j];\r\n                            if(s.contains(v)) {\r\n                                var p = s.value === v ? s.power.toDecimal() : s.symbols[v].power.toDecimal();\r\n                                if(!maxes[v] || p < maxes[v])\r\n                                    maxes[v] = p;\r\n                                sorted[v] = _.add(sorted[v], s.clone());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for(var x in sorted) {\r\n                        var r = _.parse(x + '^' + maxes[x]);\r\n                        var div = _.divide(sorted[x], r);\r\n                        var new_factor = _.expand(div);\r\n\r\n                        if(new_factor.equals(1))\r\n                            break; //why divide by one. Just move \r\n                        var divided = __.div(symbol.clone(), new_factor);\r\n\r\n                        if(divided[0].equals(0)) {\r\n                            //cant factor anymore\r\n                            break;\r\n                        }\r\n\r\n                        // We potentially ended up with fractional coefficients when the\r\n                        // trial division was performed. We need to remove \r\n                        // This check will more then likely become superfluous with improvements\r\n                        // to polynomial division\r\n                        if(divided[1].equals(0)) {\r\n                            var has_fractions = false;\r\n\r\n                            divided[0].each(function (x) {\r\n                                if(!isInt(x.multiplier)) {\r\n                                    has_fractions = true;\r\n                                }\r\n                            });\r\n\r\n                            // The factor isn't really a factor and needs to be put back\r\n                            if(has_fractions) {\r\n                                divided[1] = _.expand(_.multiply(divided[1], new_factor));\r\n                                // Since the new factor is not just one, we exit.\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        var neg_numeric_factor = isInt(new_factor) && new_factor.lessThan(0);\r\n\r\n                        if(divided[1].equals(0) && !neg_numeric_factor) { //we found at least one factor\r\n\r\n                            //factors.add(new_factor);\r\n                            var d = __.div(symbol.clone(), divided[0].clone());\r\n                            var r = d[0];\r\n\r\n                            // Nothing left to do since we didn't get a reduction\r\n                            if(r.equals(0)) {\r\n                                return symbol;\r\n                            }\r\n\r\n                            symbol = d[1];\r\n                            //we don't want to just flip the sign. If the remainder is -1 then we accomplished nothing\r\n                            //and we just return the symbol;\r\n                            //If r equals zero then there's nothing left to do so we're done\r\n\r\n                            if(r.equals(-1) && !symbol.equals(0))\r\n                                return symbol;\r\n\r\n                            var factor = divided[0];\r\n\r\n                            if(symbol.equals(factor)) {\r\n                                var rem = __.Factor.reduce(factor, factors);\r\n\r\n                                if(!symbol.equals(rem))\r\n                                    return __.Factor.mfactor(rem, factors);\r\n\r\n                                return rem;\r\n                            }\r\n                            else {\r\n                                factors.add(factor);\r\n                                //if the remainder of the symbol is zero then we're done. TODO: Rethink this logic a bit.\r\n                                if(symbol.equals(0))\r\n                                    return r;\r\n                            }\r\n\r\n                            if(r.isConstant('all')) {\r\n                                factors.add(r);\r\n                                return r;\r\n                            }\r\n\r\n                            return __.Factor.mfactor(r, factors);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                //difference of squares factorization\r\n                symbol = __.Factor.sqdiff(symbol, factors);\r\n\r\n                //factors by fishing for zeroes\r\n                symbol = __.Factor.zeroes(symbol, factors);\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a set of \"equations\" is linear. \r\n         * @param {type} set\r\n         * @returns {Boolean}\r\n         */\r\n        allLinear: function (set) {\r\n            var l = set.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(!__.isLinear(set[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /*\r\n         * Checks to see if the \"equation\" is linear\r\n         * @param {Symbol} e\r\n         * @returns {boolean}\r\n         */\r\n        isLinear: function (e) {\r\n            var status = false, g = e.group;\r\n            if(g === PL || g === CP) {\r\n                status = true;\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s], sg = symbol.group;\r\n                    if(sg === FN || sg === EX) {\r\n                        status = false;\r\n                    }\r\n                    if(sg === CB) {\r\n                        //needs further checking since it might be imaginary\r\n                        status = variables(symbol).length === 1;\r\n                    }\r\n                    else {\r\n                        if(sg === PL || sg === CP)\r\n                            status = __.isLinear(symbol);\r\n                        else {\r\n                            if(symbol.group !== N && symbol.power.toString() !== '1') {\r\n                                status = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(g === S && e.power === 1)\r\n                status = true;\r\n            return status;\r\n        },\r\n        gcd: function () {\r\n            var args;\r\n            if(arguments.length === 1 && arguments[0] instanceof core.Vector)\r\n                args = arguments[0].elements;\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //short-circuit early\r\n            if(args.length === 0)\r\n                return new Symbol(1);\r\n            else if(args.length === 1)\r\n                return args[0];\r\n\r\n            var appeared = [], evaluate = false;\r\n            for(var i = 0; i < args.length; i++) {\r\n                if(args[i].group === FN && args[i].fname === 'gcd')\r\n                {\r\n                    //compress gcd(a,gcd(b,c)) into gcd(a,b,c)\r\n                    args = args.concat(arguments[i].args);\r\n                    //do not keep gcd in args\r\n                    args.splice(i, 1);\r\n                }\r\n                else\r\n                {\r\n                    //Look if there are any common variables such that\r\n                    //gcd(a,b) => gcd(a,b); gcd(a,a) => a\r\n                    var vars = variables(args[i]);\r\n                    if(core.Utils.haveIntersection(vars, appeared))\r\n                    {\r\n                        //Ok, there are common variables\r\n                        evaluate = true;\r\n                        break;\r\n                    }\r\n                    else\r\n                        appeared = appeared.concat(vars);\r\n                }\r\n            }\r\n\r\n            //appeared.length is 0 when all arguments are group N\r\n            if(evaluate || appeared.length === 0) {\r\n                //TODO: distribute exponent so that (a^-1*b^-1)^-1 => a*b\r\n                if(args.every(function (symbol) {\r\n                    return symbol.getDenom().equals(1)\r\n                })) {\r\n                    var aggregate = args[0];\r\n\r\n                    for(var i = 1; i < args.length; i++) {\r\n                        aggregate = __.gcd_(args[i], aggregate);\r\n                    }\r\n                    return aggregate;\r\n                }\r\n                else {\r\n                    //gcd_ cannot handle denominators correctly\r\n                    return _.divide(__.gcd.apply(null, args.map(function (symbol) {\r\n                        return symbol.getNum();\r\n                    })),\r\n                            __.lcm.apply(null, args.map(function (symbol) {\r\n                                return symbol.getDenom();\r\n                            })));\r\n                }\r\n            }\r\n            else\r\n                return _.symfunction('gcd', args);\r\n        },\r\n        gcd_: function (a, b) {\r\n            if(a.group === FN || a.group === P)\r\n                a = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(a);\r\n                });\r\n\r\n            if(b.group === FN)\r\n                b = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(b);\r\n                });\r\n\r\n            if(a.isConstant() && b.isConstant()) {\r\n                // return core.Math2.QGCD(new Frac(+a), new Frac(+b));\r\n                return new Symbol(core.Math2.QGCD(new Frac(+a), new Frac(+b)));\r\n            }\r\n\r\n            var den = _.multiply(a.getDenom() || new Symbol(1), b.getDenom() || new Symbol(1)).invert();\r\n            a = _.multiply(a.clone(), den.clone());\r\n            b = _.multiply(b.clone(), den.clone());\r\n\r\n            //feels counter intuitive but it works. Issue #123 (nerdamer(\"gcd(x+y,(x+y)^2)\"))\r\n            a = _.expand(a);\r\n            b = _.expand(b);\r\n\r\n            if(a.group === CB || b.group === CB) {\r\n                var q = _.divide(a.clone(), b.clone()); //get the quotient\r\n                var t = _.multiply(b.clone(), q.getDenom().invert());//multiply by the denominator\r\n                //if they have a common factor then the result will not equal one \r\n                if(!t.equals(1))\r\n                    return t;\r\n            }\r\n\r\n            //just take the gcd of each component when either of them is in group EX\r\n            if(a.group === EX || b.group === EX)\r\n            {\r\n                var gcd_m = new Symbol(core.Math2.GCD(a.multiplier, b.multiplier));\r\n                var gcd_v = __.gcd_(a.value === CONST_HASH ? new Symbol(1) : _.parse(a.value), b.value === CONST_HASH ? new Symbol(1) : _.parse(b.value));\r\n                var gcd_p = __.gcd_(_.parse(a.power), _.parse(b.power));\r\n                return _.multiply(gcd_m, _.pow(gcd_v, gcd_p));\r\n            }\r\n\r\n            if(a.length < b.length) { //swap'm\r\n                var t = a;\r\n                a = b;\r\n                b = t;\r\n            }\r\n            var vars_a = variables(a), vars_b = variables(b);\r\n            if((vars_a.length === vars_b.length && vars_a.length === 1 && vars_a[0] === vars_b[0])\r\n                    || vars_a.length === 1 && vars_b.length === 0\r\n                    || vars_a.length === 0 && vars_b.length === 1) {\r\n                a = new Polynomial(a);\r\n                b = new Polynomial(b);\r\n                return _.divide(a.gcd(b).toSymbol(), den);\r\n            }\r\n            else {\r\n                //get the gcd of the multipiers\r\n                //get rid of gcd in coeffs\r\n                var multipliers = [];\r\n                a.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                b.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n\r\n                var T;\r\n                while(!b.equals(0)) {\r\n                    var t = b.clone();\r\n                    a = a.clone();\r\n                    T = __.div(a, t);\r\n\r\n                    b = T[1];\r\n                    if(T[0].equals(0)) {\r\n                        //return _.multiply(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), b);\r\n                        return _.divide(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), den);\r\n                    }\r\n                    a = t;\r\n                }\r\n\r\n                var gcd = core.Math2.QGCD.apply(undefined, multipliers);\r\n\r\n                if(!gcd.equals(1)) {\r\n                    a.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(gcd);\r\n                    });\r\n                }\r\n\r\n                //return symbolic function for gcd in indeterminate form\r\n                if(a.equals(1) && !a.isConstant() && !b.isConstant())\r\n                    return _.divide(_.symfunction('gcd', arguments), den);\r\n\r\n                return _.divide(a, den);\r\n            }\r\n        },\r\n        lcm: function () {\r\n            //https://math.stackexchange.com/a/319310\r\n            //generalization of the 2-variable formula of lcm\r\n\r\n            var args;\r\n            if(arguments.length === 1)\r\n                if(arguments[0] instanceof core.Vector)\r\n                    args = arguments[0].elements;\r\n                else\r\n                    _.error('lcm expects either 1 vector or 2 or more arguments');\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //product of all arguments\r\n            //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            var numer = args.reduce(function (prev, curr) {\r\n                return _.multiply(prev, curr.clone())\r\n            }, new Symbol(1));\r\n\r\n            //gcd of complementary terms\r\n            var denom_args =\r\n                    //https://stackoverflow.com/a/18223072\r\n                //take all complementary terms, e.g.\r\n                //[a,b,c] => [a*b, b*c, a*c]\r\n                //[a,b,c,d] => [a*b*c, a*b*d, a*c*d, b*c*d]\r\n                (function (input, size) {\r\n                        size = Number(size);\r\n                        var results = [], result, mask, i, total = Math.pow(2, input.length);\r\n                        for(mask = size; mask < total; mask++) {\r\n                            result = [];\r\n                            i = input.length - 1;\r\n\r\n                            do {\r\n                                if((mask & (1 << i)) !== 0) {\r\n                                    result.push(input[i]);\r\n                                }\r\n                            }\r\n                            while(i--);\r\n\r\n                            if(result.length === size) {\r\n                                results.push(result);\r\n                            }\r\n                        }\r\n                        return results;\r\n                        //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n                    })(arguments, arguments.length - 1).map(function (x) {\r\n                return x.reduce(function (prev, curr) {\r\n                    return _.multiply(prev, curr.clone())\r\n                }, new Symbol(1))\r\n            });\r\n\r\n            var denom;\r\n            //don't eat the gcd term if all arguments are symbols\r\n            if(args.every(function (x) {\r\n                return core.Utils.isVariableSymbol(x)\r\n            }))\r\n                denom = _.symfunction('gcd', core.Utils.arrayUnique(denom_args));\r\n            else\r\n                denom = __.gcd.apply(null, denom_args);\r\n            //divide product of all arguments by gcd of complementary terms\r\n            var div = _.divide(numer, denom);\r\n            return div;\r\n        },\r\n        /**\r\n         * Divides one expression by another\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Array}\r\n         */\r\n        divide: function (symbol1, symbol2) {\r\n            var result, remainder, factored, den;\r\n            factored = core.Algebra.Factor.factor(symbol1.clone());\r\n            den = factored.getDenom();\r\n            if(!den.isConstant('all')) {\r\n                symbol1 = _.expand(Symbol.unwrapPARENS(_.multiply(factored, den.clone())));\r\n            }\r\n            else\r\n                //reset the denominator since we're not dividing by it anymore\r\n                den = new Symbol(1);\r\n            result = __.div(symbol1, symbol2);\r\n            remainder = _.divide(result[1], symbol2);\r\n            return _.divide(_.add(result[0], remainder), den);\r\n        },\r\n        div: function (symbol1, symbol2) {\r\n            // If all else fails then assume that division failed with\r\n            // a remainder of zero and the original quotient\r\n            var fail = [new Symbol(0), symbol1.clone()];\r\n\r\n            try {\r\n\r\n                // Division by constants\r\n                if(symbol2.isConstant('all')) {\r\n                    symbol1.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(symbol2.multiplier);\r\n                    });\r\n                    return [symbol1, new Symbol(0)];\r\n                }\r\n                // So that factorized symbols don't affect the result\r\n                symbol1 = _.expand(symbol1);\r\n                symbol2 = _.expand(symbol2);\r\n                // Special case. May need revisiting\r\n                if(symbol1.group === S && symbol2.group === CP) {\r\n                    var x = symbol1.value;\r\n                    var f = core.Utils.decompose_fn(symbol2.clone(), x, true);\r\n                    if(symbol1.isLinear() && f.x && f.x.isLinear() && symbol2.isLinear()) {\r\n                        var k = Symbol.create(symbol1.multiplier);\r\n                        return [_.divide(k.clone(), f.a.clone()), _.divide(_.multiply(k, f.b), f.a).negate()];\r\n                    }\r\n                }\r\n                if(symbol1.group === S && symbol2.group === S) {\r\n                    var r = _.divide(symbol1.clone(), symbol2.clone());\r\n                    if(r.isConstant()) //we have a whole\r\n                        return [r, new Symbol(0)];\r\n                    return [new Symbol(0), symbol1.clone()];\r\n                }\r\n                var symbol1_has_func = symbol1.hasFunc(),\r\n                        symbol2_has_func = symbol2.hasFunc(),\r\n                        parse_funcs = false;\r\n\r\n                //substitute out functions so we can treat them as regular variables\r\n                if(symbol1_has_func || symbol2_has_func) {\r\n                    parse_funcs = true;\r\n                    var map = {},\r\n                            symbol1 = _.parse(core.Utils.subFunctions(symbol1, map)),\r\n                            symbol2 = _.parse(core.Utils.subFunctions(symbol2, map)),\r\n                            subs = core.Utils.getFunctionsSubs(map);\r\n                }\r\n                //get a list of the variables\r\n                var vars = core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),\r\n                        quot, rem;\r\n\r\n                //treat imaginary numbers as variables\r\n                if(symbol1.isImaginary() || symbol2.isImaginary()) {\r\n                    vars.push(core.Settings.IMAGINARY);\r\n                }\r\n\r\n                if(vars.length === 1) {\r\n                    var q = new Polynomial(symbol1).divide(new Polynomial(symbol2));\r\n                    quot = q[0].toSymbol();\r\n                    rem = q[1].toSymbol();\r\n                }\r\n                else {\r\n                    vars.push(CONST_HASH); //this is for the numbers\r\n                    var reconvert = function (arr) {\r\n                        var symbol = new Symbol(0);\r\n                        for(var i = 0; i < arr.length; i++) {\r\n                            var x = arr[i].toSymbol();\r\n                            symbol = _.add(symbol, x);\r\n                        }\r\n                        return symbol;\r\n                    };\r\n\r\n                    // Silly Martin. This is why you document. I don't remember now\r\n                    var get_unique_max = function (term, any) {\r\n                        var max = Math.max.apply(null, term.terms),\r\n                                count = 0, idx;\r\n\r\n                        if(!any) {\r\n                            for(var i = 0; i < term.terms.length; i++) {\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    count++;\r\n                                }\r\n                                if(count > 1)\r\n                                    return;\r\n                            }\r\n                        }\r\n                        if(any) {\r\n                            for(i = 0; i < term.terms.length; i++)\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    break;\r\n                                }\r\n                        }\r\n                        return [max, idx, term];\r\n                    };\r\n\r\n                    // Tries to find an LT in the dividend that will satisfy division\r\n                    var get_det = function (s, lookat) {\r\n                        lookat = lookat || 0;\r\n                        var det = s[lookat], l = s.length;\r\n                        if(!det)\r\n                            return;\r\n                        //eliminate the first term if it doesn't apply\r\n                        var umax = get_unique_max(det);\r\n                        for(var i = lookat + 1; i < l; i++) {\r\n                            var term = s[i],\r\n                                    is_equal = det.sum.equals(term.sum);\r\n                            if(!is_equal && umax) {\r\n                                break;\r\n                            }\r\n                            if(is_equal) {\r\n                                // Check the differences of their maxes. The one with the biggest difference governs\r\n                                // e.g. x^2*y^3 vs x^2*y^3 is unclear but this isn't the case in x*y and x^2\r\n                                var max1, max2, idx1, idx2, l2 = det.terms.length;\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var item1 = det.terms[j], item2 = term.terms[j];\r\n                                    if(typeof max1 === 'undefined' || item1.greaterThan(max1)) {\r\n                                        max1 = item1;\r\n                                        idx1 = j;\r\n                                    }\r\n                                    if(typeof max2 === 'undefined' || item2.greaterThan(max2)) {\r\n                                        max2 = item2;\r\n                                        idx2 = j;\r\n                                    }\r\n                                }\r\n                                //check their differences\r\n                                var d1 = max1.subtract(term.terms[idx1]),\r\n                                        d2 = max2.subtract(det.terms[idx2]);\r\n                                if(d2 > d1) {\r\n                                    umax = [max2, idx2, term];\r\n                                    break;\r\n                                }\r\n                                if(d1 > d2) {\r\n                                    umax = [max1, idx1, det];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                //check if it's a suitable pick to determine the order\r\n                                umax = get_unique_max(term);\r\n                                //if(umax) return umax;\r\n                                if(umax)\r\n                                    break;\r\n                            }\r\n                            umax = get_unique_max(term); //calculate a new unique max\r\n                        }\r\n\r\n                        //if still no umax then any will do since we have a tie\r\n                        if(!umax)\r\n                            return get_unique_max(s[0], true);\r\n                        var e, idx;\r\n                        for(var i = 0; i < s2.length; i++) {\r\n                            var cterm = s2[i].terms;\r\n                            //confirm that this is a good match for the denominator\r\n                            idx = umax[1];\r\n                            if(idx === cterm.length - 1)\r\n                                return;\r\n                            e = cterm[idx];\r\n                            if(!e.equals(0))\r\n                                break;\r\n                        }\r\n                        if(e.equals(0))\r\n                            return get_det(s, ++lookat); //look at the next term\r\n\r\n                        return umax;\r\n                    };\r\n\r\n                    var t_map = core.Utils.toMapObj(vars);\r\n                    var init_sort = function (a, b) {\r\n                        return b.sum.subtract(a.sum);\r\n                    };\r\n                    var is_larger = function (a, b) {\r\n                        if(!a || !b)\r\n                            return false; //it's empty so...\r\n                        for(var i = 0; i < a.terms.length; i++) {\r\n                            if(a.terms[i].lessThan(b.terms[i]))\r\n                                return false;\r\n                        }\r\n                        return true;\r\n                    };\r\n\r\n                    var s1 = symbol1.tBase(t_map).sort(init_sort),\r\n                            s2 = symbol2.tBase(t_map).sort(init_sort);\r\n                    var target = is_larger(s1[0], s2[0]) && s1[0].count > s2[0].count ? s2 : s1; //since the num is already larger than we can get the det from denom\r\n                    var det = get_det(target);//we'll begin by assuming that this will let us know which term \r\n                    var quotient = [];\r\n                    if(det) {\r\n                        var lead_var = det[1];\r\n                        var can_divide = function (a, b) {\r\n                            if(a[0].sum.equals(b[0].sum))\r\n                                return a.length >= b.length;\r\n                            return true;\r\n                        };\r\n\r\n                        var try_better_lead_var = function (s1, s2, lead_var) {\r\n                            var checked = [];\r\n                            for(var i = 0; i < s1.length; i++) {\r\n                                var t = s1[i];\r\n                                for(var j = 0; j < t.terms.length; j++) {\r\n                                    var cf = checked[j], tt = t.terms[j];\r\n                                    if(i === 0)\r\n                                        checked[j] = tt; //add the terms for the first one\r\n                                    else if(cf && !cf.equals(tt))\r\n                                        checked[j] = undefined;\r\n                                }\r\n                            }\r\n                            for(var i = 0; i < checked.length; i++) {\r\n                                var t = checked[i];\r\n                                if(t && !t.equals(0))\r\n                                    return i;\r\n                            }\r\n                            return lead_var;\r\n                        };\r\n                        var sf = function (a, b) {\r\n                            var l1 = a.len(), l2 = b.len();\r\n                            var blv = b.terms[lead_var], alv = a.terms[lead_var];\r\n                            if(l2 > l1 && blv.greaterThan(alv))\r\n                                return l2 - l1;\r\n                            return blv.subtract(alv);\r\n                        };\r\n\r\n                        //check to see if there's a better lead_var\r\n                        lead_var = try_better_lead_var(s1, s2, lead_var);\r\n                        //reorder both according to the max power\r\n                        s1.sort(sf); //sort them both according to the leading variable power\r\n                        s2.sort(sf);\r\n\r\n                        //try to adjust if den is larger\r\n                        var fdt = s2[0], fnt = s1[0];\r\n\r\n                        var den = new MVTerm(new Frac(1), [], fnt.map);\r\n                        if(fdt.sum.greaterThan(fnt.sum) && fnt.len() > 1) {\r\n                            for(var i = 0; i < fnt.terms.length; i++) {\r\n                                var d = fdt.terms[i].subtract(fnt.terms[i]);\r\n                                if(!d.equals(0)) {\r\n                                    var nd = d.add(new Frac(1));\r\n                                    den.terms[i] = d;\r\n                                    for(var j = 0; j < s1.length; j++) {\r\n                                        s1[j].terms[i] = s1[j].terms[i].add(nd);\r\n                                    }\r\n                                }\r\n                                else\r\n                                    den.terms[i] = new Frac(0);\r\n                            }\r\n                        }\r\n\r\n                        var dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                        var safety = 0;\r\n                        var max = 200;\r\n\r\n                        while(dividend_larger && can_divide(s1, s2)) {\r\n                            if(safety++ > max) {\r\n                                throw new core.exceptions.InfiniteLoopError('Unable to compute!');\r\n                            }\r\n\r\n                            var q = s1[0].divide(s2[0]);\r\n\r\n                            quotient.push(q); //add what's divided to the quotient\r\n                            s1.shift();//the first one is guaranteed to be gone so remove from dividend\r\n                            for(var i = 1; i < s2.length; i++) { //loop through the denominator\r\n                                var t = s2[i].multiply(q).generateImage(),\r\n                                        l2 = s1.length;\r\n                                //if we're subtracting from 0\r\n                                if(l2 === 0) {\r\n                                    t.coeff = t.coeff.neg();\r\n                                    s1.push(t);\r\n                                    s1.sort(sf);\r\n                                }\r\n\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var cur = s1[j];\r\n                                    if(cur.getImg() === t.getImg()) {\r\n                                        cur.coeff = cur.coeff.subtract(t.coeff);\r\n                                        if(cur.coeff.equals(0)) {\r\n                                            core.Utils.remove(s1, j);\r\n                                            j--; //adjust the iterator\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    if(j === l2 - 1) {\r\n                                        t.coeff = t.coeff.neg();\r\n                                        s1.push(t);\r\n                                        s1.sort(sf);\r\n                                    }\r\n                                }\r\n                            }\r\n                            dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                            if(!dividend_larger && s1.length >= s2.length) {\r\n                                //One more try since there might be a terms that is larger than the LT of the divisor\r\n                                for(var i = 1; i < s1.length; i++) {\r\n                                    dividend_larger = is_larger(s1[i], s2[0]);\r\n                                    if(dividend_larger) {\r\n                                        //take it from its current position and move it to the front\r\n                                        s1.unshift(core.Utils.remove(s1, i));\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    quot = reconvert(quotient);\r\n                    rem = reconvert(s1);\r\n\r\n                    if(typeof den !== 'undefined') {\r\n                        den = den.toSymbol();\r\n                        quot = _.divide(quot, den.clone());\r\n                        rem = _.divide(rem, den);\r\n                    }\r\n                }\r\n\r\n                //put back the functions\r\n                if(parse_funcs) {\r\n                    quot = _.parse(quot.text(), subs);\r\n                    rem = _.parse(rem.text(), subs);\r\n                }\r\n\r\n                return [quot, rem];\r\n            }\r\n            catch(e) {\r\n                return fail;\r\n            }\r\n\r\n        },\r\n        line: function (v1, v2, x) {\r\n            if(core.Utils.isArray(v1))\r\n                v1 = core.Utils.convertToVector(v1);\r\n            if(core.Utils.isArray(v2))\r\n                v2 = core.Utils.convertToVector(v2);\r\n            x = _.parse(x || 'x');\r\n            if(!core.Utils.isVector(v1) || !core.Utils.isVector(v2))\r\n                _.error('Line expects a vector! Received \"' + v1 + '\" & \"' + v2 + '\"');\r\n            var dx = _.subtract(v2.e(1).clone(), v1.e(1).clone()),\r\n                    dy = _.subtract(v2.e(2).clone(), v1.e(2).clone()),\r\n                    m = _.divide(dy, dx),\r\n                    a = _.multiply(x, m.clone()),\r\n                    b = _.multiply(v1.e(1).clone(), m);\r\n            return _.add(_.subtract(a, b), v1.e(2).clone());\r\n        },\r\n        PartFrac: {\r\n            createTemplate: function (den, denom_factors, f_array, v) {\r\n                //clean up the denominator function by factors so it reduces nicely\r\n                den = __.Factor.factor(den);\r\n\r\n                //clean up factors. This is so inefficient but factors are wrapped in parens for safety\r\n                den.each(function (x, key) {\r\n                    if(x.group === FN && x.fname === '' && x.args[0].group === S) {\r\n                        var y = x.args[0];\r\n                        if(this.symbols) {\r\n                            delete this.symbols[key];\r\n                            this.symbols[y.value] = y;\r\n                        }\r\n                        else {\r\n                            den = x.args[0];\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var factors, factors_vec, f, p, deg, degrees, m;\r\n                factors = denom_factors.collectFactors();\r\n                factors_vec = []; //a vector for the template\r\n                degrees = [];\r\n                m = new Symbol(1);\r\n\r\n                for(var i = 0; i < factors.length; i++) { //loop through the factors\r\n                    var factor = Symbol.unwrapPARENS(factors[i]);\r\n                    //if in he for P^n where P is polynomial and n = integer\r\n                    if(factor.power.greaterThan(1)) {\r\n                        p = Number(factor.power);\r\n                        f = factor.clone().toLinear(); //remove the power so we have only the function\r\n                        deg = Number(__.degree(f, v)); //get the degree of f\r\n                        //expand the factor\r\n                        for(var j = 0; j < p; j++) {\r\n                            var efactor = _.pow(f.clone(), new Symbol(j + 1));\r\n                            f_array.push(efactor.clone());\r\n                            var d = _.divide(den.clone(), efactor.clone());\r\n                            degrees.push(deg);\r\n                            factors_vec.push(d);\r\n                        }\r\n                    }\r\n                    /*\r\n                     Possible bug.\r\n                     Removed: causes 1/(20+24*x+4*x^2) to result in (-1/64)*(5+x)^(-1)+(1/64)*(1+x)^(-1)\r\n                     else if(factor.isConstant('all')) {\r\n                     m = _.multiply(m, factor);\r\n                     }\r\n                     */\r\n                    else {\r\n                        //get the degree of the factor so we tack it on tot he factor. This should probably be an array\r\n                        //but for now we note it on the symbol\r\n                        deg = Number(__.degree(factor, v));\r\n                        f_array.push(factor);\r\n                        var d = _.divide(den.clone(), factor.clone());\r\n                        d = _.expand(Symbol.unwrapPARENS(d));\r\n                        degrees.push(deg);\r\n                        factors_vec.push(d);\r\n                    }\r\n                }\r\n                //put back the constant\r\n                f_array = f_array.map(function (x) {\r\n                    return _.multiply(x, m.clone());\r\n                });\r\n                return [f_array, factors_vec, degrees];\r\n            },\r\n            partfrac: function (symbol, v, as_array) {\r\n\r\n                var vars = variables(symbol);\r\n\r\n                v = v || _.parse(vars[0]); //make wrt optional and assume first variable\r\n                try {\r\n                    var num, den, factors, tfactors, ofactors, nterms, degrees,\r\n                            dterms, max, M, c, powers, div, r, factors_vec, ks,\r\n                            template, tfactors;\r\n                    num = _.expand(symbol.getNum());\r\n                    den = _.expand(symbol.getDenom().toUnitMultiplier());\r\n                    //move the entire multipier to the numerator\r\n                    num.multiplier = symbol.multiplier;\r\n                    //we only have a meaningful change if n factors > 1. This means that\r\n                    //the returned group will be a CB\r\n                    //collect the terms wrt the x\r\n                    nterms = num.groupTerms(v);\r\n                    //divide out wholes if top is larger\r\n                    if(Number(__.degree(num, v)) >= Number(__.degree(den, v))) {\r\n                        div = __.div(num.clone(), _.expand(den.clone()));\r\n                        r = div[0]; //remove the wholes\r\n                        num = div[1]; //work with the remainder\r\n                        nterms = num.groupTerms(v); //recalculate the nterms\r\n                    }\r\n                    else\r\n                        r = new Symbol(0);\r\n\r\n                    if(Number(__.degree(den, v)) === 1) {\r\n                        var q = _.divide(num, den);\r\n                        if(as_array)\r\n                            return [r, q];\r\n                        return _.add(r, q);\r\n                    }\r\n                    //first factor the denominator. This means that the strength of this\r\n                    //algorithm depends on how well we can factor the denominator. \r\n                    ofactors = __.Factor.factor(den);\r\n                    //create the template. This method will create the template for solving \r\n                    //the partial fractions. So given x/(x-1)^2 the template creates A/(x-1)+B/(x-1)^2\r\n                    template = __.PartFrac.createTemplate(den.clone(), ofactors, [], v);\r\n                    tfactors = template[0]; //grab the factors\r\n                    factors_vec = template[1]; //grab the factor vectors\r\n                    degrees = template[2]; //grab the degrees\r\n                    //make note of the powers of each term\r\n                    powers = [nterms.length];\r\n                    //create the dterms vector\r\n                    dterms = [];\r\n                    factors = [];\r\n                    ks = [];\r\n                    var factor, deg;\r\n                    factors_vec.map(function (x, idx) {\r\n                        factor = tfactors[idx];\r\n                        deg = degrees[idx];\r\n                        for(var i = 0; i < deg; i++) {\r\n                            factors.push(factor.clone());\r\n                            var k = Symbol.create(v, i);\r\n                            var t = _.expand(_.multiply(x, k.clone())).groupTerms(v);\r\n                            //make a note of the power which corresponds to the length of the array\r\n                            var p = t.length;\r\n                            powers.push(p);\r\n                            dterms.push(t);\r\n                            ks.push(k.clone());\r\n                        }\r\n                    });\r\n                    //get the max power\r\n                    max = core.Utils.arrayMax(powers);\r\n\r\n                    //fill the holes and create a matrix\r\n                    c = new core.Matrix(core.Utils.fillHoles(nterms, max)).transpose();\r\n                    //for each of the factors we do the same\r\n                    M = new core.Matrix();\r\n                    for(var i = 0; i < dterms.length; i++) {\r\n                        M.elements.push(core.Utils.fillHoles(dterms[i], max));\r\n                    }\r\n\r\n                    //solve the system of equations\r\n                    var partials = _.multiply(M.transpose().invert(), c);\r\n                    //the results are backwards to reverse it\r\n                    //partials.elements.reverse();\r\n                    //convert it all back\r\n                    var retval = as_array ? [r] : r;\r\n                    partials.each(function (e, i) {\r\n                        var term = _.multiply(ks[i], _.divide(e, factors[i]));\r\n                        if(as_array)\r\n                            retval.push(term);\r\n                        else\r\n                            retval = _.add(retval, term);\r\n                    });\r\n\r\n                    //done\r\n                    return retval;\r\n                }\r\n                catch(e) {\r\n                    //try to group symbols\r\n                    try {\r\n                        if(symbol.isComposite()) {\r\n                            //group denominators\r\n                            var denominators = {};\r\n\r\n                            symbol.each(function (x) {\r\n                                var d = x.getDenom();\r\n                                var n = x.getNum();\r\n                                var e = denominators[d];\r\n                                denominators[d] = e ? _.add(e, n) : n;\r\n                            });\r\n\r\n                            var t = new Symbol(0);\r\n\r\n                            for(var x in denominators) {\r\n                                t = _.add(t, _.divide(denominators[x], _.parse(x)));\r\n                            }\r\n\r\n                            symbol = t;\r\n                        }\r\n                    }\r\n                    catch(e2) {\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        degree: function (symbol, v, o) {\r\n            o = o || {\r\n                nd: [], //numeric\r\n                sd: [], //symbolic\r\n                depth: 0 //call depth\r\n            };\r\n\r\n            if(!v) {\r\n                var vars = variables(symbol);\r\n                //The user must specify the variable for multivariate\r\n                if(vars.length > 1)\r\n                    throw new Error('You must specify the variable for multivariate polynomials!');\r\n                //if it's empty then we're dealing with a constant\r\n                if(vars.length === 0)\r\n                    return new Symbol(0);\r\n                //assume the variable for univariate\r\n                v = _.parse(vars[0]);\r\n            }\r\n\r\n            //store the group\r\n            var g = symbol.group;\r\n            //we're going to trust the user and assume no EX. Calling isPoly \r\n            //would eliminate this but no sense in checking twice. \r\n            if(symbol.isComposite()) {\r\n                symbol = symbol.clone();\r\n                symbol.distributeExponent();\r\n                symbol.each(function (x) {\r\n                    o.depth++; //mark a depth increase\r\n                    __.degree(x, v, o);\r\n                    o.depth--; //we're back\r\n                });\r\n            }\r\n            else if(symbol.group === CB) {\r\n                symbol.each(function (x) {\r\n                    o.depth++;\r\n                    __.degree(x, v, o);\r\n                    o.depth++;\r\n                });\r\n            }\r\n            else if(g === EX && symbol.value === v.value) {\r\n                o.sd.push(symbol.power.clone());\r\n            }\r\n            else if(g === S && symbol.value === v.value) {\r\n                o.nd.push(_.parse(symbol.power));\r\n            }\r\n            else\r\n                o.nd.push(new Symbol(0));\r\n\r\n            //get the max out of the array\r\n            var deg = o.nd.length > 0 ? core.Utils.arrayMax(o.nd) : undefined;\r\n\r\n            if(o.depth === 0 && o.sd.length > 0) {\r\n                if(deg !== undefined)\r\n                    o.sd.unshift(deg);\r\n                return _.symfunction('max', o.sd);\r\n            }\r\n            if(!core.Utils.isSymbol(deg))\r\n                deg = _.parse(deg);\r\n            //return the degree\r\n            return deg;\r\n        },\r\n        /**\r\n         * Attempts to complete the square of a polynomial\r\n         * @param {type} symbol\r\n         * @param {type} v\r\n         * @param {type} raw\r\n         * @throws {Error} \r\n         * @returns {Object|Symbol[]}\r\n         */\r\n        sqComplete: function (symbol, v, raw) {\r\n            if(!core.Utils.isSymbol(v))\r\n                v = _.parse(v);\r\n            var stop = function (msg) {\r\n                msg = msg || 'Stopping';\r\n                throw new core.exceptions.ValueLimitExceededError(msg);\r\n            };\r\n            //if not CP then nothing to do\r\n            if(!symbol.isPoly(true))\r\n                stop('Must be a polynomial!');\r\n\r\n            //declare vars\r\n            var deg, a, b, c, d, e, coeffs, sign, br, sym, sqrt_a;\r\n\r\n            br = core.Utils.inBrackets;\r\n            //make a copy\r\n            symbol = symbol.clone();\r\n            deg = core.Algebra.degree(symbol, v); //get the degree of polynomial\r\n            //must be in form ax^2 +/- bx +/- c\r\n            if(!deg.equals(2))\r\n                stop('Cannot complete square for degree ' + deg);\r\n            //get the coeffs\r\n            coeffs = core.Algebra.coeffs(symbol, v);\r\n            a = coeffs[2];\r\n            //store the sign\r\n            sign = coeffs[1].sign();\r\n            //divide the linear term by two and square it\r\n            b = _.divide(coeffs[1], new Symbol(2));\r\n            //add the difference to the constant\r\n            c = _.pow(b.clone(), new Symbol(2));\r\n            if(raw)\r\n                return [a, b, d];\r\n            sqrt_a = math.sqrt(a);\r\n            e = _.divide(math.sqrt(c), sqrt_a.clone());\r\n            //calculate d which is the constant\r\n            d = _.subtract(coeffs[0], _.pow(e.clone(), new Symbol(2)));\r\n            //compute the square part\r\n            sym = _.parse(br(sqrt_a.clone() + '*' + v + (sign < 0 ? '-' : '+') + e));\r\n            return {\r\n                a: sym,\r\n                c: d,\r\n                f: _.add(_.pow(sym.clone(), new Symbol(2)), d.clone())\r\n            };\r\n        },\r\n        Simplify: {\r\n            strip: function (symbol) {\r\n                var c = _.parse(symbol.multiplier);\r\n                symbol.toUnitMultiplier();\r\n                var p = _.parse(symbol.power);\r\n                symbol.toLinear();\r\n                return [c, p, symbol];\r\n            },\r\n            unstrip: function (cp, symbol) {\r\n                var c = cp[0];\r\n                var p = cp[1];\r\n                return _.multiply(c, _.pow(symbol, p));\r\n            },\r\n            complexSimp: function (num, den) {\r\n                var ac, bd, bc, ad, cd, r1, r2, i1, i2;\r\n                r1 = num.realpart();\r\n                i1 = num.imagpart();\r\n                r2 = den.realpart();\r\n                i2 = den.imagpart();\r\n                //apply complex arithmatic rule\r\n                ac = _.multiply(r1.clone(), r2.clone());\r\n                bd = _.multiply(i1.clone(), i2.clone());\r\n                bc = _.multiply(r2.clone(), i1);\r\n                ad = _.multiply(r1, i2.clone());\r\n                cd = _.add(_.pow(r2, new Symbol(2)), _.pow(i2, new Symbol(2)));\r\n\r\n                return _.divide(_.add(_.add(ac, bd), _.multiply(_.subtract(bc, ad), Symbol.imaginary())), cd);\r\n            },\r\n            trigSimp: function (symbol) {\r\n                if(symbol.containsFunction(['cos', 'sin', 'tan'])) {\r\n                    symbol = symbol.clone();\r\n                    //remove power and multiplier\r\n                    var sym_array = __.Simplify.strip(symbol);\r\n                    symbol = sym_array.pop();\r\n                    //the default return value is the symbol\r\n                    var retval = symbol.clone();\r\n\r\n                    //rewrite the symbol\r\n                    if(symbol.group === CP) {\r\n                        var sym = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            //rewrite the function\r\n                            var tr = __.Simplify.trigSimp(x.fnTransform());\r\n                            sym = _.add(sym, tr);\r\n                        }, true);\r\n\r\n                        //put back the power and multiplier and return\r\n                        retval = _.pow(_.multiply(new Symbol(symbol.multiplier), sym), new Symbol(symbol.power));\r\n                    }\r\n                    else if(symbol.group === CB) {\r\n\r\n                        var n = symbol.getNum();\r\n                        var d = symbol.getDenom();\r\n\r\n                        //try for tangent\r\n                        if(n.fname === 'sin' && d.fname === 'cos' && n.args[0].equals(d.args[0]) && n.power.equals(d.power)) {\r\n                            retval = _.parse(core.Utils.format('({0})*({1})*tan({2})^({3})', d.multiplier, n.multiplier, n.args[0], n.power));\r\n                        }\r\n                        if(retval.group === CB) {\r\n                            var t = new Symbol(1);\r\n                            retval.each(function (x) {\r\n                                if(x.fname === 'tan') {\r\n                                    x = _.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})', x.multiplier, __.Simplify.simplify(x.args[0]), x.power));\r\n                                }\r\n                                t = _.multiply(t, x);\r\n                            });\r\n                            retval = t;\r\n                        }\r\n                    }\r\n\r\n\r\n                    retval = __.Simplify.unstrip(sym_array, retval).distributeMultiplier();\r\n\r\n                    symbol = retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            fracSimp: function (symbol) {\r\n                //try a quick simplify of imaginary numbers\r\n                var den = symbol.getDenom();\r\n                var num = symbol.getNum();\r\n\r\n                if(num.isImaginary() && den.isImaginary())\r\n                    symbol = __.Simplify.complexSimp(num, den);\r\n\r\n                if(symbol.isComposite()) {\r\n                    if(symbol.power > 1) {\r\n                        symbol = _.expand(symbol);\r\n                    }\r\n\r\n                    var symbols = symbol.collectSymbols();\r\n                    //assumption 1.\r\n                    //since it's a composite, it has a length of at least 1\r\n                    var retval, a, b, d1, d2, n1, n2, s, x, y, c, den, num;\r\n                    a = symbols.pop(); //grab the first symbol\r\n                    //loop through each term and make denominator common\r\n                    while(symbols.length) {\r\n                        b = symbols.pop(); //grab the second symbol\r\n                        d1 = _.parse(a.getDenom());\r\n                        d2 = _.parse(b.getDenom());\r\n                        n1 = a.getNum();\r\n                        n2 = b.getNum();\r\n                        c = _.multiply(d1.clone(), d2.clone());\r\n                        x = _.multiply(n1, d2);\r\n                        y = _.multiply(n2, d1);\r\n                        s = _.add(x, y);\r\n                        a = _.divide(s, c);\r\n                    }\r\n                    den = _.expand(a.getDenom());\r\n                    num = _.expand(a.getNum());\r\n                    //simplify imaginary\r\n                    if(num.isImaginary() && den.isImaginary()) {\r\n                        retval = __.Simplify.complexSimp(num, den);\r\n                    }\r\n                    else {\r\n                        retval = _.divide(num, den);\r\n                    }\r\n\r\n                    //we've already hit the simplest form so return that\r\n                    if(retval.equals(symbol)) {\r\n                        return symbol;\r\n                    }\r\n\r\n                    //otherwise simplify it some more\r\n                    return __.Simplify.simplify(retval);\r\n                }\r\n                return symbol;\r\n            },\r\n            ratSimp: function (symbol) {\r\n                if(symbol.group === CB) {\r\n                    var den = symbol.getDenom();\r\n                    var num = symbol.getNum().distributeMultiplier();\r\n                    var d = __.Simplify.fracSimp(den);\r\n                    var n = __.Simplify.fracSimp(num);\r\n                    symbol = _.divide(n, d);\r\n                }\r\n                return symbol;\r\n            },\r\n            sqrtSimp: function (symbol, sym_array) {\r\n                var retval;\r\n                if(symbol.isSQRT()) {\r\n                    var factored = __.Factor.factor(symbol.args[0].clone());\r\n                    var m = _.parse(factored.multiplier);\r\n                    var sign = m.sign();\r\n\r\n                    var retval = _.sqrt(m.abs());\r\n                    var arg;\r\n\r\n                    if(isInt(retval)) {\r\n\r\n                        if(factored.group === CB) {\r\n                            var rem = new Symbol(1);\r\n\r\n                            factored.each(function (x) {\r\n                                if(x.group === N) {\r\n                                    var trial = _.sqrt(x.clone());\r\n\r\n                                    // Multiply back sqrt if it's an integer otherwise just put back the number\r\n                                    if(isInt(trial)) {\r\n                                        retval = _.multiply(retval, trial);\r\n                                    }\r\n                                    else {\r\n                                        rem = _.multiply(rem, x);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    rem = _.multiply(rem, x);\r\n                                }\r\n\r\n                            });\r\n                            var t = _.multiply(rem, _.parse(sign));\r\n                            arg = _.sqrt(t.clone());\r\n\r\n                            // Expand if it's imaginary\r\n                            if(arg.isImaginary) {\r\n                                arg = _.sqrt(_.expand(t.clone()));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Strip the multiplier\r\n                            arg = _.sqrt(factored.clone().toUnitMultiplier());\r\n                        }\r\n                        return _.multiply(retval, arg);\r\n\r\n                    }\r\n\r\n                }\r\n                else if(symbol.isComposite() && symbol.isLinear()) {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, __.Simplify.sqrtSimp(x));\r\n                    }, true);\r\n                    // Put back the multiplier\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    retval = _.parse(symbol.multiplier);\r\n                    symbol.each(function (x) {\r\n                        var simp = __.Simplify.sqrtSimp(x);\r\n                        retval = _.multiply(retval, simp);\r\n\r\n                    }, true);\r\n                    // Put back the power\r\n                    retval = _.pow(retval, _.parse(symbol.power));\r\n                }\r\n\r\n                return retval ? retval : _.parse(symbol);\r\n            },\r\n            /**\r\n             * Unused. The goal is to substitute out patterns but it currently doesn't work.\r\n             * @param {Symbol} symbol\r\n             * @return {Array} The symbol and the matched patterns\r\n             */\r\n            patternSub: function (symbol) {\r\n                var patterns = {};\r\n\r\n                var has_CP = function (symbol) {\r\n                    var found = false;\r\n                    symbol.each(function (x) {\r\n                        if(x.group === CP) {\r\n                            found = true;\r\n                        }\r\n                        else if(x.symbols) {\r\n                            found = has_CP(x);\r\n                        }\r\n                    });\r\n\r\n                    return found;\r\n                };\r\n\r\n                var collect = function (sym) {\r\n                    // We loop through each symbol looking for anything in the simplest\r\n                    // form of ax+byz+...\r\n                    sym.each(function (x) {\r\n                        // Items of group N,P,S, need to apply\r\n                        if(!x.symbols && x.group !== FN) {\r\n                            return;\r\n                        }\r\n\r\n                        // Check to see if it has any symbols of group CP\r\n                        // Get the patterns in that symbol instead if it has anything of group CP\r\n                        if(has_CP(x)) {\r\n                            collect(x);\r\n                        }\r\n                        else {\r\n                            if(!patterns[x.value]) {\r\n                                var u = core.Utils.getU(symbol);\r\n                                // Get a u value and mark it for subsitution\r\n                                patterns[x.value] = u;\r\n                                symbol = symbol.sub(x.value, u);\r\n                            }\r\n                        }\r\n                    }, true);\r\n                };\r\n\r\n                // Collect a list of patterns\r\n                collect(symbol);\r\n\r\n                return [symbol, patterns];\r\n            },\r\n            simplify: function (symbol) {\r\n                //remove the multiplier to make calculation easier;\r\n                var sym_array = __.Simplify.strip(symbol);\r\n                symbol = sym_array.pop();\r\n                //remove gcd from denominator\r\n                symbol = __.Simplify.fracSimp(symbol);\r\n                //nothing more to do\r\n                if(symbol.isConstant() || symbol.group === core.groups.S) {\r\n                    sym_array.push(symbol);\r\n                    var ret = __.Simplify.unstrip(sym_array, symbol);\r\n                    return ret;\r\n                }\r\n\r\n                //var patterns;\r\n\r\n                var simplified = symbol.clone(); //make a copy\r\n\r\n                //[simplified, patterns] = __.Simplify.patternSub(symbol);\r\n\r\n                // Simplify sqrt within the symbol\r\n//                simplified = __.Simplify.sqrtSimp(simplified, sym_array);\r\n\r\n                // Try trig simplificatons e.g. cos(x)^2+sin(x)^2\r\n                simplified = __.Simplify.trigSimp(simplified);\r\n\r\n                // Simplify common denominators\r\n                simplified = __.Simplify.ratSimp(simplified);\r\n\r\n                // First go for the \"cheapest\" simplification which may eliminate \r\n                // your problems right away. factor -> evaluate. Remember\r\n                // that there's no need to expand since factor already does that\r\n\r\n                simplified = __.Factor.factor(simplified);\r\n\r\n                //If the simplfied is a sum then we can make a few more simplifications\r\n                //e.g. simplify(1/(x-1)+1/(1-x)) as per issue #431\r\n                if(simplified.group === core.groups.CP && simplified.isLinear()) {\r\n                    var m = simplified.multiplier.clone();\r\n                    simplified.toUnitMultiplier(); //strip the multiplier\r\n                    var r = new Symbol(0);\r\n                    //return the sum of simplifications\r\n                    simplified.each(function (x) {\r\n                        var s = __.Simplify.simplify(x);\r\n                        r = _.add(r, s);\r\n                    });\r\n                    simplified = r;\r\n                    //put back the multiplier\r\n                    r.multiplier = r.multiplier.multiply(m);\r\n                }\r\n\r\n                //place back multiplier and return\r\n                var retval = __.Simplify.unstrip(sym_array, simplified);\r\n\r\n                // Back substitute\r\n                /*\r\n                 for(var x in patterns) {\r\n                 retval = retval.sub(patterns[x], x);\r\n                 }\r\n                 */\r\n\r\n                return retval;\r\n            }\r\n        },\r\n\r\n        Classes: {\r\n            Polynomial: Polynomial,\r\n            Factors: Factors,\r\n            MVTerm: MVTerm\r\n        }\r\n    };\r\n\r\n    // Add a link to simplify\r\n    core.Expression.prototype.simplify = function () {\r\n        return __.Simplify.simplify(this.symbol);\r\n    };\r\n\r\n    nerdamer.useAlgebraDiv = function () {\r\n        var divide = __.divideFn = _.divide;\r\n        var calls = 0; //keep track of how many calls were made\r\n        _.divide = function (a, b) {\r\n            calls++;\r\n            var ans;\r\n            if(calls === 1) //check if this is the first call. If it is use algebra divide\r\n                ans = core.Algebra.divide(a, b);\r\n            else //otherwise use parser divide\r\n                ans = divide(a, b);\r\n            calls = 0; //reset the number of calls back to none\r\n            return ans;\r\n        };\r\n    };\r\n\r\n    nerdamer.useParserDiv = function () {\r\n        if(__.divideFn)\r\n            _.divide = __.divideFn;\r\n        delete __.divideFn;\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'factor',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Factor.factor;\r\n            }\r\n        },\r\n        {\r\n            name: 'simplify',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Simplify.simplify;\r\n            }\r\n        },\r\n        {\r\n            name: 'gcd',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.gcd;\r\n            }\r\n        },\r\n        {\r\n            name: 'lcm',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.lcm;\r\n            }\r\n        },\r\n        {\r\n            name: 'roots',\r\n            visible: true,\r\n            numargs: -1,\r\n            build: function () {\r\n                return __.roots;\r\n            }\r\n        },\r\n        {\r\n            name: 'divide',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.divide;\r\n            }\r\n        },\r\n        {\r\n            name: 'div',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.div;\r\n            }\r\n        },\r\n        {\r\n            name: 'partfrac',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.PartFrac.partfrac;\r\n            }\r\n        },\r\n        {\r\n            name: 'deg',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.degree;\r\n            }\r\n        },\r\n        {\r\n            name: 'coeffs',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function () {\r\n                    var coeffs = __.coeffs.apply(__, arguments);\r\n                    return new core.Vector(coeffs);\r\n                };\r\n                return f;\r\n            }\r\n        },\r\n        {\r\n            name: 'line',\r\n            visible: true,\r\n            numargs: [2, 3],\r\n            build: function () {\r\n                return __.line;\r\n            }\r\n        },\r\n        {\r\n            name: 'sqcomp',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function (x, v) {\r\n                    try {\r\n                        v = v || variables(x)[0];\r\n                        var sq = __.sqComplete(x.clone(), v);\r\n                        return sq.f;\r\n                    }\r\n                    catch(e) {\r\n                        return x;\r\n                    }\r\n                };\r\n                return f;\r\n            }\r\n        }\r\n    ]);\r\n    nerdamer.updateAPI();\r\n})();", "/* global module */\r\n\r\n/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\nif((typeof module) !== 'undefined' && typeof nerdamer === 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Algebra.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            Frac = core.Frac,\r\n            Settings = core.Settings,\r\n            isSymbol = core.Utils.isSymbol,\r\n            FN = core.groups.FN,\r\n            Symbol = core.Symbol,\r\n            text = core.Utils.text,\r\n            inBrackets = core.Utils.inBrackets,\r\n            isInt = core.Utils.isInt,\r\n            format = core.Utils.format,\r\n            even = core.Utils.even,\r\n            evaluate = core.Utils.evaluate,\r\n            N = core.groups.N,\r\n            S = core.groups.S,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            EX = core.groups.EX,\r\n            P = core.groups.P,\r\n            LOG = Settings.LOG,\r\n            EXP = 'exp',\r\n            ABS = 'abs',\r\n            SQRT = 'sqrt',\r\n            SIN = 'sin',\r\n            COS = 'cos',\r\n            TAN = 'tan',\r\n            SEC = 'sec',\r\n            CSC = 'csc',\r\n            COT = 'cot',\r\n            ASIN = 'asin',\r\n            ACOS = 'acos',\r\n            ATAN = 'atan',\r\n            ASEC = 'asec',\r\n            ACSC = 'acsc',\r\n            ACOT = 'acot',\r\n            SINH = 'sinh',\r\n            COSH = 'cosh',\r\n            TANH = 'tanh',\r\n            CSCH = 'csch',\r\n            SECH = 'sech',\r\n            COTH = 'coth',\r\n            ASECH = 'asech',\r\n            ACSCH = 'acsch',\r\n            ACOTH = 'acoth';\r\n\r\n    //custom errors\r\n    function NoIntegralFound(msg) {\r\n        this.message = msg || \"\";\r\n    }\r\n    NoIntegralFound.prototype = new Error();\r\n\r\n    //Preparations\r\n    Symbol.prototype.hasIntegral = function () {\r\n        return this.containsFunction('integrate');\r\n    };\r\n    //transforms a function\r\n    Symbol.prototype.fnTransform = function () {\r\n        if(this.group !== FN)\r\n            return this;\r\n        var retval, a = this.args[0];\r\n        var m = new Symbol(this.multiplier);\r\n        var sym = this.clone().toUnitMultiplier();\r\n        if(this.isLinear()) {\r\n            switch(this.fname) {\r\n                case SINH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('(e^({0})+e^(-({0})))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))', a));\r\n                    break;\r\n                case TAN:\r\n                    retval = _.parse(format('sin({0})/cos({0})', a));\r\n                    break;\r\n                case CSC:\r\n                    retval = _.parse(format('1/sin({0})', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('1/cos({0})', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.power.equals(2)) {\r\n            switch(this.fname) {\r\n                case SIN:\r\n                    retval = _.parse(format('1/2-cos(2*({0}))/2', a));\r\n                    break;\r\n                case COS:\r\n                    retval = _.parse(format('1/2+cos(2*({0}))/2', a));\r\n                    break;\r\n                case TAN:\r\n                    //retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))', a));\r\n                    retval = _.parse(format('sin({0})^2/cos({0})^2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case SINH:\r\n                    retval = _.parse(format('-1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.fname === SEC) {\r\n            retval = _.parse(format('1/cos({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === CSC) {\r\n            retval = _.parse(format('1/sin({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === TAN) {\r\n            if(this.power.lessThan(0)) {\r\n                retval = _.parse(format('cos({0})^(-({1}))/sin({0})^({1})', this.args[0], this.power.negate()));\r\n            }\r\n            else {\r\n                retval = _.parse(format('sin({0})^({1})/cos({0})^({1})', this.args[0], this.power));\r\n            }\r\n        }\r\n        else if(this.fname === SIN && this.power.lessThan(0)) {\r\n            retval = _.parse(format('csc({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === COS && this.power.lessThan(0)) {\r\n            retval = _.parse(format('sec({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === SIN && this.power.equals(3)) {\r\n            retval = _.parse(format('(3*sin({0})-sin(3*({0})))/4', this.args[0]));\r\n        }\r\n        else if(this.fname === COS && this.power.equals(3)) {\r\n            retval = _.parse(format('(cos(3*({0}))+3*cos({0}))/4', this.args[0]));\r\n        }\r\n        //cos(a*x)^(2*n) or sin(a*x)^(2*n)\r\n        else if((this.fname === COS || this.fname === SIN) && even(this.power)) {\r\n            var n = this.power / 2;\r\n            //convert to a double angle\r\n            var double_angle = _.pow(this.clone().toLinear(), _.parse(2)).fnTransform();\r\n            //raise to the n and expand\r\n            var transformed = _.expand(_.pow(double_angle, _.parse(n)));\r\n\r\n            retval = new Symbol(0);\r\n\r\n            transformed.each(function (s) {\r\n                var t = s.fnTransform();\r\n                retval = _.add(retval, t);\r\n            }, true);\r\n        }\r\n        else\r\n            retval = sym;\r\n\r\n        return _.multiply(retval, m);\r\n    };\r\n\r\n    Symbol.prototype.hasTrig = function () {\r\n        if(this.isConstant(true) || this.group === S)\r\n            return false;\r\n        if(this.fname && (core.Utils.in_trig(this.fname) || core.Utils.in_inverse_trig(this.fname)))\r\n            return true;\r\n        if(this.symbols) {\r\n            for(var x in this.symbols)\r\n                if(this.symbols[x].hasTrig())\r\n                    return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    core.Expression.prototype.hasIntegral = function () {\r\n        return this.symbol.hasIntegral();\r\n    };\r\n    /**\r\n     * Attempts to rewrite a symbol under one common denominator\r\n     * @param {Symbol} symbol \r\n     */\r\n    core.Utils.toCommonDenominator = function (symbol) {\r\n        //transform x/a+x -> (ax+x)/a\r\n        if(symbol.isComposite() && symbol.isLinear()) {\r\n            var m = new Symbol(symbol.multiplier);\r\n            var denominator = new Symbol(1);\r\n            var numerator = new Symbol(0);\r\n            symbol.each(function (x) {\r\n                denominator = _.multiply(denominator, x.getDenom());\r\n            }, true);\r\n\r\n            //remove the denomitor in each term\r\n            symbol.each(function (x) {\r\n                var num = x.getNum();\r\n                var den = x.getDenom();\r\n                var factor = _.multiply(num, _.divide(denominator.clone(), den));\r\n                numerator = _.add(numerator, factor);\r\n            });\r\n            var retval = _.multiply(m, core.Algebra.divide(_.expand(numerator), _.expand(denominator)));\r\n            return retval;\r\n        }\r\n        return symbol;\r\n    };\r\n    //A function to check if a function name is an inverse trig function\r\n    core.Utils.in_inverse_trig = function (x) {\r\n        var inv_trig_fns = [ASIN, ACOS, ATAN, ACSC, ASEC, ACOT];\r\n        return inv_trig_fns.indexOf(x) !== -1;\r\n    };\r\n    //A function to check if a function name is a trig function\r\n    core.Utils.in_trig = function (x) {\r\n        var trig_fns = [COS, SIN, TAN, SEC, CSC, COT];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    core.Utils.in_htrig = function (x) {\r\n        var trig_fns = [SINH, COSH, TANH, ACSCH, ASECH, ACOTH];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    // Matrix functions\r\n    core.Matrix.jacobian = function (eqns, vars) {\r\n        var jacobian = new core.Matrix();\r\n        //get the variables if not supplied\r\n        if(!vars) {\r\n            vars = core.Utils.arrayGetVariables(eqns);\r\n        }\r\n\r\n        vars.forEach(function (v, i) {\r\n            eqns.forEach(function (eq, j) {\r\n                var e = core.Calculus.diff(eq.clone(), v);\r\n                jacobian.set(j, i, e);\r\n            });\r\n        });\r\n\r\n        return jacobian;\r\n    };\r\n\r\n    core.Matrix.prototype.max = function () {\r\n        var max = new Symbol(0);\r\n        this.each(function (x) {\r\n            var e = x.abs();\r\n            if(e.gt(max))\r\n                max = e;\r\n        });\r\n        return max;\r\n    };\r\n\r\n    core.Matrix.cMatrix = function (value, vars) {\r\n        var m = new core.Matrix();\r\n        //make an initial guess\r\n        vars.forEach(function (v, i) {\r\n            m.set(i, 0, _.parse(value));\r\n        });\r\n        return m;\r\n    };\r\n\r\n    var all_functions = core.Utils.all_functions = function (arr) {\r\n        for(var i = 0, l = arr.length; i < l; i++)\r\n            if(arr[i].group !== FN)\r\n                return false;\r\n        return true;\r\n    },\r\n            cosAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2', a, b));\r\n            },\r\n            cosAsinAtransform = core.Utils.cosAsinAtranform = function (symbol1, symbol2) {\r\n                //TODO: temporary fix for integrate(e^x*sin(x)*cos(x)^2).\r\n                //we technically know how to do this transform but more is needed for correct output\r\n                if(Number(symbol2.power) !== 1)\r\n                    return _.multiply(symbol1, symbol2);\r\n                var a;\r\n                a = symbol1.args[0];\r\n                return _.parse(format('(sin(2*({0})))/2', a));\r\n            },\r\n            sinAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2', a, b));\r\n            },\r\n            trigTransform = core.Utils.trigTransform = function (arr) {\r\n                var map = {}, symbol, t,\r\n                        retval = new Symbol(1);\r\n                for(var i = 0, l = arr.length; i < l; i++) {\r\n                    symbol = arr[i];\r\n\r\n                    if(symbol.group === FN) {\r\n                        var fname = symbol.fname;\r\n\r\n                        if(fname === COS && map[SIN]) {\r\n\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[SIN]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[SIN]);\r\n                            }\r\n                            delete map[SIN];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[COS]) {\r\n                            if(map[COS].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[COS]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[COS]);\r\n                            }\r\n                            delete map[COS];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[SIN]) {\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = sinAsinBtransform(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n                            else {\r\n                                //This should actually be redundant code but let's put just in case\r\n                                t = _.multiply(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n\r\n                            retval = t;\r\n                        }\r\n                        else {\r\n                            map[fname] = symbol;\r\n                        }\r\n                    }\r\n                    else\r\n                        retval = _.multiply(retval, symbol);\r\n                }\r\n\r\n                //put back the remaining functions\r\n                for(var x in map)\r\n                    retval = _.multiply(retval, map[x]);\r\n\r\n                return retval;\r\n\r\n            };\r\n\r\n    core.Settings.integration_depth = 10;\r\n\r\n    core.Settings.max_lim_depth = 10;\r\n\r\n    var __ = core.Calculus = {\r\n\r\n        version: '1.4.6',\r\n\r\n        sum: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                start = Number(start);\r\n                end = Number(end);\r\n                retval = core.Utils.block(modifier, function () {\r\n                    var f = fn.text(),\r\n                            subs = {'~': true}, //lock subs. Is this even being used?\r\n                            retval = new core.Symbol(0);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        var ans = _.parse(f, subs);\r\n                        retval = _.add(retval, ans);\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('sum', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        product: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                retval = core.Utils.block(modifier, function () {\r\n                    start = Number(start);\r\n                    end = Number(end.multiplier);\r\n\r\n                    var f = fn.text(),\r\n                            subs = {},\r\n                            retval = new core.Symbol(1);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        retval = _.multiply(retval, _.parse(f, subs));\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('product', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        diff: function (symbol, wrt, nth) {\r\n            if(core.Utils.isVector(symbol)) {\r\n                var vector = new core.Vector([]);\r\n                symbol.each(function (x) {\r\n                    vector.elements.push(__.diff(x, wrt, nth));\r\n                });\r\n                return vector;\r\n            }\r\n            else if(core.Utils.isMatrix(symbol)) {\r\n                var matrix = new core.Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    matrix.set(i, j, __.diff(x, wrt, nth));\r\n                });\r\n                return matrix;\r\n            }\r\n\r\n            var d = isSymbol(wrt) ? wrt.text() : wrt;\r\n            //the nth derivative\r\n            nth = isSymbol(nth) ? nth.multiplier : nth || 1;\r\n\r\n            if(d === undefined)\r\n                d = core.Utils.variables(symbol)[0];\r\n\r\n            //unwrap sqrt\r\n            if(symbol.group === FN && symbol.fname === SQRT) {\r\n                var s = symbol.args[0],\r\n                        sp = symbol.power.clone();\r\n                //these groups go to zero anyway so why waste time?\r\n                if(s.group !== N || s.group !== P) {\r\n                    s.power = isSymbol(s.power) ? _.multiply(s.power, _.multiply(new Symbol(1 / 2)), sp) : s.power.multiply(new Frac(0.5)).multiply(sp);\r\n                    s.multiplier = s.multiplier.multiply(symbol.multiplier);\r\n                }\r\n\r\n                symbol = s;\r\n            }\r\n\r\n            if(symbol.group === FN && !isSymbol(symbol.power)) {\r\n                var a = derive(_.parse(symbol));\r\n                var b = __.diff(symbol.args[0].clone(), d);\r\n                symbol = _.multiply(a, b);//chain rule\r\n            }\r\n            else {\r\n                symbol = derive(symbol);\r\n            }\r\n\r\n            if(nth > 1) {\r\n                nth--;\r\n                symbol = __.diff(symbol, wrt, nth);\r\n            }\r\n\r\n            return symbol;\r\n\r\n            // Equivalent to \"derivative of the outside\".\r\n            function polydiff(symbol) {\r\n                if(symbol.value === d || symbol.contains(d, true)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(symbol.power);\r\n                    symbol.power = symbol.power.subtract(new Frac(1));\r\n                    if(symbol.power.equals(0)) {\r\n                        symbol = Symbol(symbol.multiplier);\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            }\r\n            \r\n            function derive(symbol) {\r\n                var g = symbol.group, a, b, cp;\r\n\r\n                if(g === N || g === S && symbol.value !== d || g === P) {\r\n                    symbol = Symbol(0);\r\n                }\r\n                else if(g === S) {\r\n                    symbol = polydiff(symbol);\r\n                }\r\n                else if(g === CB) {\r\n                    var m = symbol.multiplier.clone();\r\n                    symbol.toUnitMultiplier();\r\n                    var retval = _.multiply(product_rule(symbol), polydiff(symbol));\r\n                    retval.multiplier = retval.multiplier.multiply(m);\r\n                    return retval;\r\n                }\r\n                else if(g === FN && symbol.power.equals(1)) {\r\n                    // Table of known derivatives\r\n                    switch(symbol.fname) {\r\n                        case LOG:\r\n                            cp = symbol.clone();\r\n                            symbol = symbol.args[0].clone();//get the arguments\r\n                            symbol.power = symbol.power.negate();\r\n                            symbol.multiplier = cp.multiplier.divide(symbol.multiplier);\r\n                            break;\r\n                        case COS:\r\n                            //cos -> -sin\r\n                            symbol.fname = SIN;\r\n                            symbol.multiplier.negate();\r\n                            break;\r\n                        case SIN:\r\n                            //sin -> cos\r\n                            symbol.fname = COS;\r\n                            break;\r\n                        case TAN:\r\n                            //tan -> sec^2\r\n                            symbol.fname = SEC;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SEC:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, TAN);\r\n                            break;\r\n                        case CSC:\r\n                            symbol = qdiff(symbol, '-cot');\r\n                            break;\r\n                        case COT:\r\n                            symbol.fname = CSC;\r\n                            symbol.multiplier.negate();\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case ASIN:\r\n                            symbol = _.parse('(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ACOS:\r\n                            symbol = _.parse('-(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ATAN:\r\n                            symbol = _.parse('(1+(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ABS:\r\n                            m = symbol.multiplier.clone();\r\n                            symbol.toUnitMultiplier();\r\n                            //depending on the complexity of the symbol it's easier to just parse it into a new symbol\r\n                            //this should really be readdressed soon\r\n                            b = symbol.args[0].clone();\r\n                            b.toUnitMultiplier();\r\n                            symbol = _.parse(inBrackets(text(symbol.args[0])) + '/abs' + inBrackets(text(b)));\r\n                            symbol.multiplier = m;\r\n                            break;\r\n                        case 'parens':\r\n                            //see product rule: f'.g goes to zero since f' will return zero. This way we only get back\r\n                            //1*g'\r\n                            symbol = Symbol(1);\r\n                            break;\r\n                        case 'cosh':\r\n                            //cosh -> -sinh\r\n                            symbol.fname = 'sinh';\r\n                            break;\r\n                        case 'sinh':\r\n                            //sinh -> cosh\r\n                            symbol.fname = 'cosh';\r\n                            break;\r\n                        case TANH:\r\n                            //tanh -> sech^2\r\n                            symbol.fname = SECH;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SECH:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, '-tanh');\r\n                            break;\r\n                        case CSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-coth(' + arg + ')*csch(' + arg + ')');\r\n                            break;\r\n                        case COTH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-csch(' + arg + ')^2');\r\n                            break;\r\n                        case 'asinh':\r\n                            symbol = _.parse('(sqrt(1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'acosh':\r\n                            symbol = _.parse('(sqrt(-1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'atanh':\r\n                            symbol = _.parse('(1-(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ASECH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2-1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOTH:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2-1)');\r\n                            break;\r\n                        case ACSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2+1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ASEC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACSC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOT:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2+1)');\r\n                            break;\r\n                        case 'S':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('sin((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'C':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('cos((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'Si':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sin(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Shi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sinh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ci':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cos(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Chi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cosh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ei':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('e^(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Li':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('1/' + Settings.LOG + '(' + arg + ')');\r\n                            break;\r\n                        case 'erf':\r\n                            symbol = _.parse('(2*e^(-(' + symbol.args[0] + ')^2))/sqrt(pi)');\r\n                            break;\r\n                        case 'atan2':\r\n                            var x_ = String(symbol.args[0]),\r\n                                    y_ = String(symbol.args[1]);\r\n                            symbol = _.parse('(' + y_ + ')/((' + y_ + ')^2+(' + x_ + ')^2)');\r\n                            break;\r\n                        case 'sign':\r\n                            symbol = new Symbol(0);\r\n                            break;\r\n                        case 'sinc':\r\n                            symbol = _.parse(format('(({0})*cos({0})-sin({0}))*({0})^(-2)', symbol.args[0]));\r\n                            break;\r\n                        case Settings.LOG10:\r\n                            symbol = _.parse('1/((' + symbol.args[0] + ')*' + Settings.LOG + '(10))');\r\n                            break;\r\n                        default:\r\n                            symbol = _.symfunction('diff', [symbol, wrt]);\r\n                    }\r\n                }\r\n                else if(g === EX || g === FN && isSymbol(symbol.power)) {\r\n                    var value;\r\n                    if(g === EX) {\r\n                        value = symbol.value;\r\n                    }\r\n                    else if(g === FN && symbol.contains(d)) {\r\n                        value = symbol.fname + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    else {\r\n                        value = symbol.value + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    a = _.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone());\r\n                    b = __.diff(_.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone()), d);\r\n                    symbol = _.multiply(symbol, b);\r\n                }\r\n                else if(g === FN && !symbol.power.equals(1)) {\r\n                    b = symbol.clone();\r\n                    b.toLinear();\r\n                    b.toUnitMultiplier();\r\n                    symbol = _.multiply(polydiff(symbol.clone()), derive(b));\r\n                }\r\n                else if(g === CP || g === PL) {\r\n                    // Note: Do not use `parse` since this puts back the sqrt and causes a bug as in #610. Use clone.\r\n                    var c = symbol.clone();\r\n                    var result = new Symbol(0);\r\n                    for(var x in symbol.symbols) {\r\n                        result = _.add(result, __.diff(symbol.symbols[x].clone(), d));\r\n                    }\r\n                    symbol = _.multiply(polydiff(c), result);\r\n                }\r\n\r\n                symbol.updateHash();\r\n\r\n                return symbol;\r\n            }\r\n            ;\r\n\r\n            function qdiff(symbol, val, altVal) {\r\n                return _.multiply(symbol, _.parse(val + inBrackets(altVal || text(symbol.args[0]))));\r\n            }\r\n            ;\r\n\r\n            function product_rule(symbol) {\r\n                //grab all the symbols within the CB symbol\r\n                var symbols = symbol.collectSymbols(),\r\n                        result = new Symbol(0),\r\n                        l = symbols.length;\r\n                //loop over all the symbols\r\n                for(var i = 0; i < l; i++) {\r\n                    var df = __.diff(symbols[i].clone(), d);\r\n                    for(var j = 0; j < l; j++) {\r\n                        //skip the symbol of which we just pulled the derivative\r\n                        if(i !== j) {\r\n                            //multiply out the remaining symbols\r\n                            df = _.multiply(df, symbols[j].clone());\r\n                        }\r\n                    }\r\n                    //add the derivative to the result\r\n                    result = _.add(result, df);\r\n                }\r\n                return result; //done\r\n            }\r\n            ;\r\n        },\r\n        integration: {\r\n            u_substitution: function (symbols, dx) {\r\n                function try_combo(a, b, f) {\r\n                    var d = __.diff(b, dx);\r\n                    var q = f ? f(a, b) : _.divide(a.clone(), d);\r\n                    if(!q.contains(dx, true))\r\n                        return q;\r\n                    return null;\r\n                }\r\n                function do_fn_sub(fname, arg) {\r\n                    var subbed = __.integrate(_.symfunction(fname, [new Symbol(u)]), u, 0);\r\n                    subbed = subbed.sub(new Symbol(u), arg);\r\n                    subbed.updateHash();\r\n                    return subbed;\r\n                }\r\n\r\n                var a = symbols[0].clone(),\r\n                        b = symbols[1].clone(),\r\n                        g1 = a.group,\r\n                        g2 = b.group,\r\n                        //may cause problems if person is using this already. Will need\r\n                        //to find algorithm for detecting conflict\r\n                        u = '__u__',\r\n                        Q;\r\n                if(g1 === FN && g2 !== FN) {\r\n                    //e.g. 2*x*cos(x^2)\r\n                    var arg = a.args[0];\r\n                    Q = try_combo(b, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(a.fname, arg));\r\n                    Q = try_combo(b, a);\r\n                    if(Q) {\r\n                        return __.integration.poly_integrate(a);\r\n                    }\r\n                }\r\n                else if(g2 === FN && g1 !== FN) {\r\n                    //e.g. 2*(x+1)*cos((x+1)^2\r\n                    var arg = b.args[0];\r\n                    Q = try_combo(a, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(b.fname, arg));\r\n                }\r\n                else if(g1 === FN && g2 === FN) {\r\n                    Q = try_combo(a.clone(), b.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(b.clone(), a.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                }\r\n                else if(g1 === EX && g2 !== EX) {\r\n                    var p = a.power;\r\n                    Q = try_combo(b, p.clone());\r\n                    if(!Q) {\r\n                        //one more try\r\n                        var dc = __.integration.decompose_arg(p.clone(), dx);\r\n                        //consider the possibility of a^x^(n-1)*x^n dx\r\n                        var xp = __.diff(dc[2].clone(), dx);\r\n                        var dc2 = __.integration.decompose_arg(xp.clone(), dx);\r\n                        //if their powers equal, so if dx*p == b\r\n                        if(_.multiply(dc[1], dc2[1]).power.equals(b.power)) {\r\n                            var m = _.divide(dc[0].clone(), dc2[0].clone());\r\n\r\n                            var new_val = _.multiply(m.clone(), _.pow(new Symbol(a.value), _.multiply(dc[0], new Symbol(u))));\r\n                            new_val = _.multiply(new_val, new Symbol(u));\r\n                            return __.integration.by_parts(new_val, u, 0, {}).sub(u, dc[1].clone());\r\n                        }\r\n\r\n                    }\r\n                    var integrated = __.integrate(a.sub(p.clone(), new Symbol(u)), u, 0),\r\n                            retval = _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n\r\n\r\n                    return retval;\r\n                }\r\n                else if(g2 === EX && g1 !== EX) {\r\n                    var p = b.power;\r\n                    Q = try_combo(a, p.clone());\r\n                    var integrated = __.integrate(b.sub(p, new Symbol(u)), u, 0);\r\n                    return _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                }\r\n                else if(a.isComposite() || b.isComposite()) {\r\n                    var f = function (a, b) {\r\n                        var d = __.diff(b, dx);\r\n                        var A = core.Algebra.Factor.factor(a),\r\n                                B = core.Algebra.Factor.factor(d);\r\n                        var q = _.divide(A, B);\r\n                        return q;\r\n                    };\r\n                    var f1 = a.isComposite() ? a.clone().toLinear() : a.clone(),\r\n                            f2 = b.isComposite() ? b.clone().toLinear() : b.clone();\r\n                    Q = try_combo(f1.clone(), f2.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(f2.clone(), f1.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(a), Q);\r\n                }\r\n            },\r\n            //simple integration of a single polynomial x^(n+1)/(n+1)\r\n            poly_integrate: function (x) {\r\n                var p = x.power.toString(),\r\n                        m = x.multiplier.toDecimal(),\r\n                        s = x.toUnitMultiplier().toLinear();\r\n                if(Number(p) === -1) {\r\n                    return _.multiply(new Symbol(m), _.symfunction(LOG, [s]));\r\n                }\r\n                return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)', m, s, p));\r\n            },\r\n            //If we're just spinning wheels we want to stop. This is why we \r\n            //wrap integration in a try catch block and call this to stop.\r\n            stop: function (msg) {\r\n                msg = msg || 'Unable to compute integral!';\r\n                core.Utils.warn(msg);\r\n                throw new NoIntegralFound(msg);\r\n            },\r\n            partial_fraction: function (input, dx, depth, opt) {\r\n                //TODO: This whole thing needs to be rolled into one but for now I'll leave it as two separate parts\r\n                if(!isSymbol(dx))\r\n                    dx = _.parse(dx);\r\n\r\n                var result, partial_fractions;\r\n                result = new Symbol(0);\r\n                partial_fractions = core.Algebra.PartFrac.partfrac(input, dx);\r\n\r\n                if(partial_fractions.group === CB && partial_fractions.isLinear()) {\r\n                    //perform a quick check to make sure that all partial fractions are linear\r\n                    partial_fractions.each(function (x) {\r\n                        if(!x.isLinear())\r\n                            __.integration.stop();\r\n                    });\r\n                    partial_fractions.each(function (x) {\r\n                        result = _.add(result, __.integrate(x, dx, depth, opt));\r\n                    });\r\n                }\r\n                else {\r\n                    result = _.add(result, __.integrate(partial_fractions, dx, depth, opt));\r\n                }\r\n                return result;\r\n            },\r\n            get_udv: function (symbol) {\r\n                var parts = [[/*L*/], [/*I*/], [/*A*/], [/*T*/], [/*E*/]];\r\n                //first we sort them \r\n                var setSymbol = function (x) {\r\n                    var g = x.group;\r\n                    if(g === FN) {\r\n                        var fname = x.fname;\r\n                        if(core.Utils.in_trig(fname) || core.Utils.in_htrig(fname))\r\n                            parts[3].push(x);\r\n                        else if(core.Utils.in_inverse_trig(fname))\r\n                            parts[1].push(x);\r\n                        else if(fname === LOG)\r\n                            parts[0].push(x);\r\n                        else {\r\n                            __.integration.stop();\r\n                        }\r\n                    }\r\n                    else if(g === S || x.isComposite() && x.isLinear() || g === CB && x.isLinear()) {\r\n                        parts[2].push(x);\r\n                    }\r\n                    else if(g === EX || x.isComposite() && !x.isLinear())\r\n                        parts[4].push(x);\r\n                    else\r\n                        __.integration.stop();\r\n                };\r\n\r\n                if(symbol.group === CB)\r\n                    symbol.each(function (x) {\r\n                        setSymbol(Symbol.unwrapSQRT(x, true));\r\n                    });\r\n                else\r\n                    setSymbol(symbol);\r\n                var u, dv = new Symbol(1);\r\n                //compile u and dv\r\n                for(var i = 0; i < 5; i++) {\r\n                    var part = parts[i], t,\r\n                            l = part.length;\r\n                    if(l > 0) {\r\n                        if(l > 1) {\r\n                            t = new Symbol(1);\r\n                            for(var j = 0; j < l; j++)\r\n                                t = _.multiply(t, part[j].clone());\r\n                        }\r\n                        else\r\n                            t = part[0].clone();\r\n\r\n                        if(!u) {\r\n                            u = t;//the first u encountered gets chosen\r\n                            u.multiplier = u.multiplier.multiply(symbol.multiplier); //the first one gets the mutliplier\r\n                        }\r\n                        else\r\n                            dv = _.multiply(dv, t); //everything else belongs to dv\r\n                    }\r\n                }\r\n\r\n                return [u, dv];\r\n            },\r\n\r\n            trig_sub: function (symbol, dx, depth, opt, parts, symbols) {\r\n                parts = parts || __.integration.decompose_arg(symbol.clone().toLinear(), dx);\r\n                var b = parts[3],\r\n                        ax = parts[2],\r\n                        a = parts[0],\r\n                        x = parts[1];\r\n                if(x.power.equals(2) && a.greaterThan(0)) {\r\n                    //use tan(x)\r\n                    var t = core.Utils.getU(symbol), //get an appropriate u\r\n                            u = _.parse(TAN + inBrackets(t)), //u\r\n                            du = _.parse(SEC + inBrackets(t) + '^2'), //du\r\n                            f = _.multiply(symbol.sub(x, u), du);\r\n                    var integral = __.integrate(f, t, depth, opt).sub(u, x);\r\n                    core.Utils.clearU(u);\r\n                    return integral;\r\n                }\r\n            },\r\n\r\n            by_parts: function (symbol, dx, depth, o) {\r\n                o.previous = o.previous || [];\r\n                var udv, u, dv, du, v, vdu, uv, retval, integral_vdu, m, c, vdu_s;\r\n                //first LIATE\r\n                udv = __.integration.get_udv(symbol);\r\n                u = udv[0];\r\n                dv = udv[1];\r\n                du = Symbol.unwrapSQRT(_.expand(__.diff(u.clone(), dx)), true);\r\n                c = du.clone().stripVar(dx);\r\n                //strip any coefficients\r\n                du = _.divide(du, c.clone());\r\n                v = __.integrate(dv.clone(), dx, depth || 0);\r\n                vdu = _.multiply(v.clone(), du);\r\n                vdu_s = vdu.toString();\r\n                //currently only supports e^x*(some trig)\r\n                if(o.previous.indexOf(vdu_s) !== -1 && (core.Utils.in_trig(u.fname)) && dv.isE()) {\r\n                    //We're going to exploit the fact that vdu can never be constant\r\n                    //to work out way out of this cycle. We'll return the length of\r\n                    //the this.previous array until we're back at level one\r\n                    o.is_cyclic = true;\r\n                    //return the integral. \r\n                    return new Symbol(1);\r\n                }\r\n                else\r\n                    o.previous.push(vdu_s);\r\n\r\n                uv = _.multiply(u, v);\r\n                //clear the multiplier so we're dealing with a bare integral\r\n                m = vdu.multiplier.clone();\r\n                vdu.toUnitMultiplier();\r\n                integral_vdu = _.multiply(__.integrate(vdu.clone(), dx, depth, o), c);\r\n                integral_vdu.multiplier = integral_vdu.multiplier.multiply(m);\r\n                retval = _.subtract(uv, integral_vdu);\r\n                //we know that there cannot be constants so they're a holdover from a cyclic integral\r\n                if(o.is_cyclic) {\r\n                    //start popping the previous stack so we know how deep in we are\r\n                    o.previous.pop();\r\n                    if(o.previous.length === 0) {\r\n                        retval = _.expand(retval);\r\n                        var rem = new Symbol(0);\r\n                        retval.each(function (x) {\r\n                            if(!x.contains(dx))\r\n                                rem = _.add(rem, x.clone());\r\n                        });\r\n                        //get the actual uv\r\n                        retval = _.divide(_.subtract(retval, rem.clone()), _.subtract(new Symbol(1), rem));\r\n                    }\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            /*\r\n             * dependents: [Solve, integrate]\r\n             */\r\n            decompose_arg: core.Utils.decompose_fn\r\n        },\r\n        //TODO: nerdamer.integrate('-e^(-a*t)*sin(t)', 't') -> gives incorrect output\r\n        integrate: function (original_symbol, dt, depth, opt) {\r\n            //assume integration wrt independent variable if expression only has one variable\r\n            if(!dt) {\r\n                var vars = core.Utils.variables(original_symbol);\r\n                if(vars.length === 1)\r\n                    dt = vars[0];\r\n                //defaults to x\r\n                dt = dt || 'x';\r\n            }\r\n            //add support for integrating vectors\r\n            if(core.Utils.isVector(original_symbol)) {\r\n                var vector = new core.Vector([]);\r\n                original_symbol.each(function (x) {\r\n                    vector.elements.push(__.integrate(x, dt));\r\n                });\r\n                return vector;\r\n            }\r\n            if(!isNaN(dt))\r\n                _.error('variable expected but received ' + dt);\r\n            //get rid of constants right away\r\n            if(original_symbol.isConstant(true))\r\n                return _.multiply(original_symbol.clone(), _.parse(dt));\r\n\r\n            //configurations options for integral. This is needed for tracking extra options\r\n            //e.g. cyclic integrals or additional settings\r\n            opt = opt || {};\r\n            return core.Utils.block('PARSE2NUMBER', function () {\r\n                //make a note of the original symbol. Set only if undefined\r\n                depth = depth || 0;\r\n                var dx = isSymbol(dt) ? dt.toString() : dt,\r\n                        //we don't want the symbol in sqrt form. x^(1/2) is prefererred\r\n                        symbol = Symbol.unwrapSQRT(original_symbol.clone(), true),\r\n                        g = symbol.group,\r\n                        retval;\r\n\r\n                try {\r\n                    //We stop integration after x amount of recursive calls\r\n                    if(++depth > core.Settings.integration_depth)\r\n                        __.integration.stop('Maximum depth reached. Exiting!');\r\n\r\n                    //constants. We first eliminate anything that doesn't have dx. Everything after this has \r\n                    //to have dx or else it would have been taken care of below\r\n                    if(!symbol.contains(dx, true)) {\r\n                        retval = _.multiply(symbol.clone(), _.parse(dx));\r\n                    }\r\n                    //e.g. 2*x\r\n                    else if(g === S) {\r\n                        retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                    }\r\n                    else if(g === EX) {\r\n                        if(symbol.previousGroup === FN && !(symbol.fname === 'sqrt' || symbol.fname === Settings.PARENTHESIS))\r\n                            __.integration.stop();\r\n                        //check the base\r\n                        if(symbol.contains(dx) && symbol.previousGroup !== FN) {\r\n                            //if the symbol also contains dx then we stop since we currently \r\n                            //don't know what to do with it e.g. x^x\r\n                            if(symbol.power.contains(dx))\r\n                                __.integration.stop();\r\n                            else {\r\n                                var t = __.diff(symbol.clone().toLinear(), dx);\r\n                                if(t.contains(dx))\r\n                                    __.integration.stop();\r\n                                //since at this point it's the base only then we do standard single poly integration\r\n                                //e.g. x^y\r\n                                retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                            }\r\n                        }\r\n                        //e.g. a^x or 9^x\r\n                        else {\r\n                            var a = __.diff(symbol.power.clone(), dx);\r\n                            if(a.contains(dx)) {\r\n                                var aa = a.stripVar(dx),\r\n                                        x = _.divide(a.clone(), aa.clone());\r\n                                if(x.group === S && x.isLinear()) {\r\n                                    aa.multiplier = aa.multiplier.divide(new Frac(2));\r\n                                    return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))', aa, dx, symbol.multiplier));\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            if(symbol.isE()) {\r\n                                if(a.isLinear())\r\n                                    retval = symbol;\r\n                                else {\r\n                                    if(a.isE() && a.power.group === S && a.power.power.equals(1))\r\n                                        retval = _.multiply(_.symfunction('Ei', [symbol.power.clone()]), symbol.power);\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                var d = _.symfunction(LOG, [_.parse(symbol.value)]);\r\n                                retval = _.divide(symbol, d);\r\n                            }\r\n                            retval = _.divide(retval, a);\r\n                        }\r\n                    }\r\n                    else if(symbol.isComposite() && symbol.isLinear()) {\r\n                        var m = _.parse(symbol.multiplier);\r\n                        symbol.toUnitMultiplier();\r\n                        retval = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            retval = _.add(retval, __.integrate(x, dx, depth));\r\n                        });\r\n                        retval = _.multiply(m, retval);\r\n                    }\r\n                    else if(g === CP) {\r\n                        if(symbol.power.greaterThan(1))\r\n                            symbol = _.expand(symbol);\r\n                        if(symbol.power.equals(1)) {\r\n                            retval = new Symbol(0);\r\n                            symbol.each(function (x) {\r\n                                retval = _.add(retval, __.integrate(x, dx, depth));\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            var p = Number(symbol.power),\r\n                                    m = symbol.multiplier.clone();//temporarily remove the multiplier\r\n                            symbol.toUnitMultiplier();\r\n                            var //below we consider the form ax+b\r\n                                    fn = symbol.clone().toLinear(), //get just the pure function without the power\r\n                                    decomp = __.integration.decompose_arg(fn, dx),\r\n                                    //I have no idea why I used bx+a and not ax+b. TODO change this to something that makes sense\r\n                                    b = decomp[3],\r\n                                    ax = decomp[2],\r\n                                    a = decomp[0],\r\n                                    x = decomp[1];\r\n                            if(p === -1 && x.group !== PL && x.power.equals(2)) {\r\n                                var b_is_positive = isInt(b) ? b > 0 : true;\r\n                                //we can now check for atan\r\n                                if(x.group === S && x.power.equals(2) && b_is_positive) {\r\n                                    ////then we have atan\r\n                                    //abs is redundants since the sign appears in both denom and num.\r\n                                    var unwrapAbs = function (s) {\r\n                                        var result = new Symbol(1);\r\n                                        s.each(function (x) {\r\n                                            result = _.multiply(result, x.fname === 'abs' ? x.args[0] : x);\r\n                                        });\r\n                                        return result;\r\n                                    };\r\n                                    var A = a.clone(),\r\n                                            B = b.clone();\r\n                                    A = _.pow(A, new Symbol(1 / 2));\r\n                                    B = _.pow(B, new Symbol(1 / 2));\r\n                                    //unwrap abs\r\n\r\n                                    var d = _.multiply(unwrapAbs(B), unwrapAbs(A)),\r\n                                            f = _.symfunction(ATAN, [_.divide(_.multiply(a, x.toLinear()), d.clone())]);\r\n                                    retval = _.divide(f, d);\r\n                                }\r\n                                else if(x.group === S && x.isLinear()) {\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                }\r\n                                else {\r\n                                    //1/(x^4+1)\r\n                                    if(x.power.equals(4)) {\r\n                                        //https://www.freemathhelp.com/forum/threads/55678-difficult-integration-int-1-(1-x-4)-dx\r\n                                        var A, B, C, D, E, F, f1, f2, f3, f4, L1, L2;\r\n                                        var br = inBrackets;\r\n                                        //apply rule: ax^4+b = (√ax^2+√2∜a∜bx+√b)(√ax^2-√2∜a∜bx+√b)\r\n                                        //get quadratic factors\r\n                                        A = _.parse(SQRT + br(a) + '*' + dx + '^2');\r\n                                        B = _.parse(SQRT + br(2) + '*' + br(a) + '^' + br('1/4') + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        C = _.parse(SQRT + br(b));\r\n                                        f1 = _.add(_.add(A.clone(), B.clone()), C.clone());\r\n                                        f2 = _.add(_.subtract(A, B), C);\r\n                                        //calculate numerators: [D+E, D-E] -> [√2*b^(3/4)+√b∜ax, √2*b^(3/4)-√b∜ax]\r\n                                        D = _.parse(SQRT + br(2) + '*' + br(b) + '^' + br('3/4'));\r\n                                        E = _.parse(SQRT + br(b) + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        //let F = 2b√2∜b\r\n                                        F = _.parse(2 + '*' + br(b) + '*' + SQRT + br(2) + '*' + br(b) + '^' + br('1/4'));\r\n                                        //calculate the factors\r\n                                        L1 = _.divide(_.subtract(D.clone(), E.clone()), _.multiply(F.clone(), f2));\r\n                                        L2 = _.divide(_.add(D, E), _.multiply(F, f1.clone()));\r\n                                        retval = _.add(\r\n                                                __.integrate(L1, dx, depth, opt),\r\n                                                __.integrate(L2, dx, depth, opt)\r\n                                                );\r\n                                    }\r\n                                    else\r\n                                        //let's try partial fractions\r\n                                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                }\r\n                            }\r\n                            else if(p === -1 / 2) {\r\n                                //detect asin and atan\r\n                                if(x.group === S && x.power.equals(2)) {\r\n                                    if(ax.multiplier.lessThan(0) && !b.multiplier.lessThan(0)) {\r\n                                        a.negate();\r\n                                        //it's asin\r\n                                        if(b.isConstant() && a.isConstant()) {\r\n                                            var d = _.symfunction(SQRT, [a.clone()]),\r\n                                                    d2 = _.symfunction(SQRT, [_.multiply(a.clone(), b)]);\r\n                                            retval = _.divide(_.symfunction(ASIN, [_.divide(ax.toLinear(), d2)]), d);\r\n                                        }\r\n                                        //I'm not sure about this one. I'm trusting Wolfram Alpha here\r\n                                        else {\r\n                                            var sqrt_a = _.symfunction(SQRT, [a]),\r\n                                                    sqrt_ax = _.multiply(sqrt_a.clone(), x.clone().toLinear());\r\n                                            retval = _.divide(_.symfunction(ATAN, [_.divide(sqrt_ax, _.symfunction(SQRT, [fn.clone()]))]), sqrt_a);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        /*WHAT HAPPENS HERE???? e.g. integrate(3/sqrt(-a+b*x^2),x) or integrate(3/sqrt(a+b*x^2),x)*/\r\n                                        __.integration.stop();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //This would be a case like 1/(sqrt(1-x^3) or 1/(1-(x+1)^2)\r\n                                    __.integration.stop();\r\n                                }\r\n                            }\r\n                            else if(p === 1/2 && x.power.equals(2) && a.greaterThan(0)) {\r\n                                // TODO: Revisit\r\n                                __.integration.stop();\r\n                            }\r\n                            else {\r\n                                if(x.isLinear() && x.group !== PL)\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                else if(x.power.equals(2) && a.greaterThan(0)) {\r\n                                    var sqa, sqb, aob, bsqi, n, integral, u, v, uv;\r\n                                    //1/(a*x^2+b^2)^n\r\n                                    //strip the value of b so b = 1\r\n                                    sqa = _.parse(SQRT + inBrackets(a)); //strip a so b = 1\r\n                                    sqb = _.parse(SQRT + inBrackets(b));\r\n                                    aob = _.multiply(sqa.clone(), sqb.clone()).invert();\r\n                                    bsqi = _.pow(b, new Symbol(symbol.power));\r\n                                    uv = core.Utils.getU(symbol);\r\n                                    u = _.multiply(aob, x.clone().toLinear());\r\n                                    v = _.parse(ATAN + inBrackets(u));\r\n                                    //the conversion will be 1+tan(x)^2 -> sec(x)^2\r\n                                    //since the denominator is now (sec(x)^2)^n and the numerator is sec(x)^2 \r\n                                    //then the remaining sec will be (n-1)*2;\r\n                                    var n = (Math.abs(symbol.power) - 1) * 2;\r\n                                    //1/sec(x)^n can now be converted to cos(x)^n and we can pull the integral of that\r\n                                    var integral = __.integrate(_.parse(COS + inBrackets(uv) + '^' + n));\r\n                                    core.Utils.clearU(uv);\r\n                                    return _.multiply(integral.sub(uv, v), bsqi);\r\n                                }\r\n                                else {\r\n                                    if(symbol.group !== CB && !symbol.power.lessThan(0)) {\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n                                    else {\r\n                                        var f = symbol.clone().toLinear();\r\n                                        var factored = core.Algebra.Factor.factor(f);\r\n                                        var was_factored = factored.toString() !== f.toString();\r\n                                        if(core.Algebra.degree(f, _.parse(dx)).equals(2) && !was_factored) {\r\n                                            try {\r\n                                                var f1, fx, u, sq;\r\n                                                sq = core.Algebra.sqComplete(f, dx);\r\n                                                u = core.Utils.getU(f);\r\n                                                f1 = sq.f.sub(sq.a, u);\r\n                                                fx = _.pow(f1, _.parse(symbol.power));\r\n                                                retval = __.integrate(fx, u).sub(u, sq.a);\r\n                                            }\r\n                                            catch(e) {\r\n                                                __.integration.stop();\r\n                                            }\r\n                                        }\r\n                                        else\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                    }\r\n                                }\r\n                            }\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === FN) {\r\n                        var arg = symbol.args[0],\r\n                                m = symbol.multiplier.clone();\r\n                        symbol.toUnitMultiplier();\r\n                        var decomp = __.integration.decompose_arg(arg, dx);\r\n                        //easies way I can think of to get the coefficient and to make sure\r\n                        //that the symbol is linear wrt dx. I'm not actually trying to get the \r\n                        //derivative\r\n                        var a = decomp[0],\r\n                                x = decomp[1],\r\n                                fname = symbol.fname;\r\n                        //log is a special case that can be handled with integration by parts\r\n                        if(fname === LOG || (fname === ASIN || fname === ACOS || fname === ATAN && x.isLinear())) {\r\n                            /*integration by parts */\r\n                            var p = symbol.power.toString();\r\n                            if(isInt(p))\r\n                                depth = depth - p; //it needs more room to find the integral\r\n\r\n                            if(!arg.isComposite())\r\n                                retval = _.multiply(_.parse(m), __.integration.by_parts(symbol, dx, depth, opt));\r\n                            else {\r\n                                //integral u du\r\n                                var u = core.Utils.getU(symbol);\r\n                                var f = _.pow(_.parse(LOG + inBrackets(u)), new Symbol(p));\r\n                                var du = __.diff(arg, dx);\r\n                                var u_du = _.multiply(f, du);\r\n                                var integral = __.integrate(u_du, u, depth, opt);\r\n                                retval = _.multiply(_.parse(m), integral.sub(u, arg));\r\n                            }\r\n\r\n                        }\r\n                        else if(fname === TAN && symbol.power.lessThan(0)) {\r\n                            //convert to cotangent\r\n                            var sym = symbol.clone();\r\n                            sym.power.negate();\r\n                            sym.fname = COT;\r\n                            return _.multiply(_.parse(m), __.integrate(sym, dx, depth));\r\n                        }\r\n                        else {\r\n                            if(!a.contains(dx, true) && symbol.isLinear()) { //perform a deep search for safety\r\n                                //first handle the special cases \r\n                                if(fname === ABS) {\r\n                                    //REVISIT **TODO**\r\n                                    var x = _.divide(arg.clone(), a.clone());\r\n                                    if(x.group === S && !x.power.lessThan(0)) {\r\n                                        if(core.Utils.even(x.power)) {\r\n                                            retval = __.integrate(arg, dx, depth);\r\n                                        }\r\n                                        else {\r\n                                            var integrated = __.integrate(x, dx, depth);\r\n                                            integrated.power = integrated.power.subtract(new Frac(1));\r\n                                            retval = _.multiply(_.multiply(_.symfunction(ABS, [x.toLinear()]), integrated), a);\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                                else {\r\n                                    var ag = symbol.args[0].group,\r\n                                            decomposed = __.integration.decompose_arg(arg, dx);\r\n\r\n                                    if(!(ag === CP || ag === S || ag === CB) || !decomposed[1].power.equals(1) || arg.hasFunc())\r\n                                        __.integration.stop();\r\n                                    /**TODO**/ //ASIN, ACOS, ATAN\r\n                                    switch(fname) {\r\n                                        case COS:\r\n                                            retval = _.symfunction(SIN, [arg]);\r\n                                            break;\r\n                                        case SIN:\r\n                                            retval = _.symfunction(COS, [arg]);\r\n                                            retval.negate();\r\n                                            break;\r\n                                        case TAN:\r\n                                            retval = _.parse(format(Settings.LOG + '(sec({0}))', arg));\r\n                                            break;\r\n                                        case SEC:\r\n                                            retval = _.parse(format(Settings.LOG + '(tan({0})+sec({0}))', arg));\r\n                                            break;\r\n                                        case CSC:\r\n                                            retval = _.parse(format('-' + Settings.LOG + '(csc({0})+cot({0}))', arg));\r\n                                            break;\r\n                                        case COT:\r\n                                            retval = _.parse(format(Settings.LOG + '(sin({0}))', arg));\r\n                                            break;\r\n                                        case SINH:\r\n                                            retval = _.symfunction(COSH, [arg]);\r\n                                            break;\r\n                                        case COSH:\r\n                                            retval = _.symfunction(SINH, [arg]);\r\n                                            break;\r\n                                        case TANH:\r\n                                            retval = _.parse(format(Settings.LOG + '(cosh({0}))', arg));\r\n                                            break;\r\n                                        case ASEC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOT:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //inverse htrig\r\n                                        case ASECH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSCH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOTH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //end inverse htrig\r\n                                            //htrigh\r\n                                        case SECH:\r\n                                            retval = _.parse(format('atan(sinh({0}))', arg));\r\n                                            break;\r\n                                        case CSCH:\r\n                                            retval = _.parse(format(Settings.LOG + '(tanh(({0})/2))', arg));\r\n                                            break;\r\n                                        case COTH:\r\n                                            retval = _.parse(format(Settings.LOG + '(sinh({0}))', arg));\r\n                                            break;\r\n                                            //end htrig\r\n                                        case EXP:\r\n                                            retval = __.integrate(_.parse(format('e^({0})', arg)), dx, depth);\r\n                                            break;\r\n                                        case 'S':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)', a_, b_, x));\r\n                                            break;\r\n                                        case 'C':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)', a_, b_, x_));\r\n                                            break;\r\n                                        case 'erf':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            retval = _.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))', a_, x_, arg));\r\n                                            break;\r\n                                        case 'sign':\r\n                                            retval = _.multiply(symbol.clone(), arg.clone());\r\n                                            break;\r\n                                        default:\r\n                                            __.integration.stop();\r\n                                    }\r\n\r\n                                    retval = _.divide(retval, a);\r\n                                }\r\n                            }\r\n                            else if(x.isLinear()) {\r\n                                if(fname === COS || fname === SIN) {\r\n                                    var p = Number(symbol.power);\r\n                                    //check to see if it's negative and then just transform it to sec or csc\r\n                                    if(p < 0) {\r\n                                        symbol.fname = fname === SIN ? CSC : SEC;\r\n                                        symbol.invert().updateHash();\r\n                                        retval = __.integrate(symbol, dx, depth);\r\n                                    }\r\n                                    else {\r\n                                        var arg = symbol.args[0],\r\n                                                rd = symbol.clone(), //cos^(n-1)\r\n                                                rd2 = symbol.clone(), //cos^(n-2)\r\n                                                q = new Symbol((p - 1) / p), //\r\n                                                na = _.multiply(a.clone(), new Symbol(p)).invert(); //1/(n*a)\r\n                                        rd.power = rd.power.subtract(new Frac(1));\r\n                                        rd2.power = rd2.power.subtract(new Frac(2));\r\n\r\n                                        var t = _.symfunction(fname === COS ? SIN : COS, [arg.clone()]);\r\n                                        if(fname === SIN)\r\n                                            t.negate();\r\n                                        retval = _.add(_.multiply(_.multiply(na, rd), t), _.multiply(q, __.integrate(_.parse(rd2), dx, depth)));\r\n                                    }\r\n                                }\r\n                                //tan(x)^n or cot(x)^n\r\n                                else if(fname === TAN || fname === COT) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    if(symbol.args[0].isLinear(dx)) {\r\n                                        var n = symbol.power.subtract(new Frac(1)).toString(),\r\n                                                r = symbol.clone().toUnitMultiplier(),\r\n                                                w = _.parse(format((fname === COT ? '-' : '') + '1/({2}*{0})*{3}({1})^({0})', n, arg, a, fname));\r\n                                        r.power = r.power.subtract(new Frac(2));\r\n                                        if(r.power.equals(0))\r\n                                            r = _.parse(r);\r\n                                        retval = _.subtract(w, __.integrate(r, dx, depth));\r\n                                    }\r\n                                }\r\n                                //sec(x)^n or csc(x)^n\r\n                                else if(fname === SEC || fname === CSC) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    var n1 = symbol.power.subtract(new Frac(1)).toString(),\r\n                                            n2 = symbol.power.subtract(new Frac(2)).toString(),\r\n                                            f2 = fname === SEC ? TAN : COT,\r\n                                            r = symbol.clone().toUnitMultiplier(),\r\n                                            parse_str = format((fname === CSC ? '-' : '') + '1/({0}*{1})*{4}({3})^({2})*{5}({3})', a, n1, n2, arg, fname, f2),\r\n                                            w = _.parse(parse_str);\r\n                                    r.power = r.power.subtract(new Frac(2));\r\n                                    if(r.power.equals(0))\r\n                                        r = _.parse(r);\r\n                                    retval = _.add(w, _.multiply(new Symbol(n2 / n1), __.integrate(r, dx, depth)));\r\n                                }\r\n                                else if((fname === COSH || fname === SINH) && symbol.power.equals(2)) {\r\n                                    retval = __.integrate(symbol.fnTransform(), dx, depth);\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            else\r\n                                __.integration.stop();\r\n\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === PL) {\r\n                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                    }\r\n                    else if(g === CB) {\r\n                        var den = symbol.getDenom();\r\n                        if(den.group === S)\r\n                            symbol = _.expand(symbol);\r\n\r\n                        //separate the coefficient since all we care about are symbols containing dx\r\n                        var coeff = symbol.stripVar(dx);\r\n                        //now get only those that apply\r\n                        var cfsymbol = _.divide(symbol.clone(), coeff.clone()); //a coeff free symbol\r\n                        //peform a correction for stripVar. This is a serious TODO!\r\n                        if(coeff.contains(dx)) {\r\n                            cfsymbol = _.multiply(cfsymbol, coeff);\r\n                            coeff = new Symbol(1);\r\n                        }\r\n\r\n                        //if we only have one symbol left then let's not waste time. Just pull the integral\r\n                        //and let the chips fall where they may\r\n                        if(cfsymbol.group !== CB) {\r\n                            if(cfsymbol.equals(1)) {\r\n                                return __.integrate(_.expand(symbol), dx, depth);\r\n                            }\r\n\r\n                            //only factor for multivariate which are polynomials\r\n                            if(cfsymbol.clone().toLinear().isPoly(true) && core.Utils.variables(cfsymbol).length > 1) {\r\n                                cfsymbol = core.Algebra.Factor.factor(cfsymbol);\r\n                            }\r\n\r\n                            retval = __.integrate(cfsymbol, dx, depth);\r\n                        }\r\n                        else {\r\n                            //we collect the symbols and sort them descending group, descending power, descending alpabethically\r\n                            var symbols = cfsymbol.collectSymbols().sort(function (a, b) {\r\n                                if(a.group === b.group) {\r\n                                    if(Number(a.power) === Number(b.power))\r\n                                        if(a < b)\r\n                                            return 1; //I want sin first\r\n                                        else\r\n                                            return -1;\r\n                                    return b.power - a.power; //descending power\r\n                                }\r\n                                return b.group - a.group; //descending groups\r\n                            }).map(function (x) {\r\n                                var unwrapped = Symbol.unwrapSQRT(x, true);\r\n                                if(unwrapped.fname === EXP) {\r\n                                    return _.parse(format('({1})*e^({0})', unwrapped.args[0], unwrapped.multiplier));\r\n                                }\r\n                                return unwrapped;\r\n                            });\r\n                            var l = symbols.length;\r\n                            if(symbol.power < 0) {\r\n                                if(l === 2) {\r\n                                    return __.integrate(_.expand(symbol), dx, depth, opt);\r\n                                }\r\n                            }\r\n                            //otherwise the denominator is one lumped together symbol \r\n                            else {\r\n                                //generate an image for \r\n                                if(l === 2) {\r\n                                    //try u substitution\r\n                                    try {\r\n                                        retval = __.integration.u_substitution(symbols, dx);\r\n                                    }\r\n                                    catch(e) {/* failed :`(*/\r\n                                        ;\r\n                                    }\r\n\r\n                                    if(!retval) {\r\n                                        //no success with u substitution so let's try known combinations\r\n                                        //are they two functions\r\n                                        var g1 = symbols[0].group,\r\n                                                g2 = symbols[1].group,\r\n                                                sym1 = symbols[0],\r\n                                                sym2 = symbols[1],\r\n                                                fn1 = sym1.fname,\r\n                                                fn2 = sym2.fname;\r\n                                        //reset the symbol minus the coeff\r\n                                        symbol = _.multiply(sym1.clone(), sym2.clone());\r\n                                        if(g1 === FN && g2 === FN) {\r\n                                            if(fn1 === LOG || fn2 === LOG) {\r\n                                                retval = __.integration.by_parts(symbol.clone(), dx, depth, opt);\r\n                                            }\r\n                                            else {\r\n                                                symbols.sort(function (a, b) {\r\n                                                    return b.fname > a.fname;\r\n                                                });\r\n                                                var arg1 = sym1.args[0];\r\n                                                //make sure the arguments are suitable. We don't know how to integrate non-linear arguments\r\n                                                if(!arg1.isLinear() || !(arg1.group === CP || arg1.group === CB || arg1.group === S))\r\n                                                    __.integration.stop();\r\n\r\n                                                var decomp = __.integration.decompose_arg(arg1, dx);\r\n                                                x = decomp[1],\r\n                                                        a = decomp[0];\r\n                                                if(!x.isLinear()) //again... linear arguments only wrt x\r\n                                                    __.integration.stop();\r\n\r\n                                                //they have to have the same arguments and then we have cleared all the check to \r\n                                                //make sure we can integrate FN & FN\r\n                                                var arg2 = sym2.args[0];\r\n                                                //make sure that their argument matches\r\n                                                if(arg1.equals(arg2)) {\r\n                                                    if(fn1 === SIN && fn2 === COS || fn1 === COS && fn2 === SIN) {\r\n                                                        if(sym1.power.lessThan(0))\r\n                                                            __.integration.stop();//we don't know how to handle, sin(x)^n/cos(x)^m where m > n,  yet\r\n                                                        //if it's in the form sin(x)^n*cos(x)^n then we can just return tan(x)^n which we know how to integrate\r\n                                                        if(fn1 === SIN && sym1.power.add(sym2.power).equals(0)) {\r\n                                                            sym1.fname = TAN;\r\n                                                            sym1.updateHash();\r\n                                                            retval = __.integrate(sym1, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            if(even(sym1.power) && fn2 === COS && sym2.power.lessThan(0)) {\r\n                                                                //transform sin^(2*n) to (1-cos^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-cos({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else if(even(sym1.power) && fn2 === SIN && sym2.power.lessThan(0)) {\r\n                                                                //transform cos^(2*n) to (1-sin^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-sin({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else {\r\n                                                                var p1_even = core.Utils.even(sym1.power),\r\n                                                                        p2_even = core.Utils.even(sym2.power);\r\n                                                                retval = new Symbol(0);\r\n                                                                if(!p1_even || !p2_even) {\r\n                                                                    var u, r, trans;\r\n                                                                    //since cos(x) is odd it carries du. If sin was odd then it would be the other way around\r\n                                                                    //know that p1 satifies the odd portion in this case. If p2 did than it would contain r\r\n                                                                    if(!p1_even) {\r\n                                                                        //u = sin(x)\r\n                                                                        u = sym2;\r\n                                                                        r = sym1;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        u = sym1;\r\n                                                                        r = sym2;\r\n                                                                    }\r\n                                                                    //get the sign of du. In this case r carries du as stated before and D(cos(x),x) = -sin(x)\r\n                                                                    var sign = u.fname === COS ? -1 : 1,\r\n                                                                            n = r.power,\r\n                                                                            //remove the du e.g. cos(x)^2*sin(x)^3 dx -> cos(x)^2*sin(x)^2*sin(x). We're left with two \r\n                                                                            //even powers afterwards which can be transformed\r\n                                                                            k = (n - 1) / 2,\r\n                                                                            //make the transformation cos(x)^2 = 1 - sin(x)^2\r\n                                                                            trans = _.parse('(1-' + u.fname + core.Utils.inBrackets(arg1) + '^2)^' + k),\r\n                                                                            sym = _.expand(_.multiply(new Symbol(sign), _.multiply(u.clone(), trans)));\r\n                                                                    //we can now just loop through and integrate each since it's now just a polynomial with functions\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integration.poly_integrate(x.clone()));\r\n                                                                    });\r\n                                                                }\r\n                                                                else {\r\n                                                                    //performs double angle transformation\r\n                                                                    var double_angle = function (symbol) {\r\n                                                                        var p = symbol.power,\r\n                                                                                k = p / 2, e;\r\n                                                                        if(symbol.fname === COS)\r\n                                                                            e = '((1/2)+(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n                                                                        else\r\n                                                                            e = '((1/2)-(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n\r\n                                                                        return _.parse(e);\r\n                                                                    };\r\n                                                                    //they're both even so transform both using double angle identities and we'll just\r\n                                                                    //be able to integrate by the sum of integrals\r\n                                                                    var a = double_angle(sym1),\r\n                                                                            b = double_angle(sym2),\r\n                                                                            t = _.multiply(a, b);\r\n                                                                    var sym = _.expand(t);\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                                    });\r\n                                                                    return _.multiply(retval, coeff);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    //tan(x)*sec(x)^n \r\n                                                    else if(fn1 === SEC && fn2 === TAN && x.isLinear() && sym2.isLinear()) {\r\n                                                        retval = _.parse(format('sec({0})^({1})/({1})', sym1.args[0], sym1.power));\r\n                                                    }\r\n                                                    else if(fn1 === TAN && fn2 === SEC && x.isLinear()) {\r\n                                                        //remaining: tan(x)^3*sec(x)^6\r\n                                                        if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                            retval = _.divide(_.symfunction(SEC, [arg1.clone()]), a);\r\n                                                        }\r\n                                                        else if(even(sym1.power)) {\r\n                                                            var p = Number(sym1.power) / 2;\r\n                                                            //transform tangent\r\n                                                            var t = _.parse(format('(sec({0})^2-1)^({1})', sym1.args[0], p));\r\n                                                            retval = __.integrate(_.expand(_.multiply(t, sym2)), dx, depth);\r\n                                                        }\r\n                                                        else\r\n                                                            __.integration.stop();\r\n                                                    }\r\n                                                    else if(fn1 === SEC && fn2 === COS) {\r\n                                                        sym1.fname = COS;\r\n                                                        sym1.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    else if(fn1 === SIN && fn2 === CSC) {\r\n                                                        sym2.fname = SIN;\r\n                                                        sym2.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    //tan/cos\r\n                                                    else if(fn1 === TAN && (fn2 === COS || fn2 === SIN) && sym2.power.lessThan(0)) {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2);\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                    else {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2.fnTransform());\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                }\r\n                                                //TODO: In progress\r\n                                                else if((fn1 === SIN || fn1 === COS) && (fn2 === SIN || fn2 === COS)) {\r\n\r\n                                                    if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                        //if in the form cos(a*x)*sin(b*x)\r\n                                                        if(sym1.args[0].isLinear() && sym2.args[0].isLinear()) {\r\n                                                            //use identity (sin(b*x+a*x)+sin(b*x-a*x))/2\r\n                                                            var ax, bx;\r\n                                                            if(fn2 === SIN) {\r\n                                                                ax = sym1.args[0];\r\n                                                                bx = sym2.args[0];\r\n                                                            }\r\n                                                            else {\r\n                                                                bx = sym1.args[0];\r\n                                                                ax = sym2.args[0];\r\n                                                            }\r\n\r\n                                                            //make the transformation\r\n                                                            f = _.parse(format('(sin(({1})+({0}))+sin(({1})-({0})))/2', ax.toString(), bx.toString()));\r\n\r\n                                                            //integrate it\r\n                                                            retval = __.integrate(f, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            var transformed = trigTransform(symbols);\r\n                                                            retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        var transformed = new Symbol(1);\r\n                                                        symbols.map(function (sym) {\r\n                                                            var s = sym.fnTransform();\r\n                                                            transformed = _.multiply(transformed, s);\r\n                                                        });\r\n                                                        var t = _.expand(transformed);\r\n\r\n                                                        retval = __.integrate(t, dx, depth);\r\n\r\n                                                        if(retval.hasIntegral()) {\r\n                                                            retval = __.integrate(trigTransform(transformed.collectSymbols()), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    __.integration.stop();\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === FN && g2 === S) {\r\n                                            var sym1_is_linear = sym1.isLinear();\r\n                                            if(sym1.fname === COS && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Ci', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COS && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === COSH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Chi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COSH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SIN && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Si', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SIN && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SINH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Shi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SINH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === LOG && sym2.power.equals(-1)) {\r\n                                                //log(x)^n/x = log(x)^(n+1)/(n+1)\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === 'erf') {\r\n                                                if(sym2.power.equals(1)) {\r\n                                                    var dc = __.integration.decompose_arg(sym1.args[0], dx),\r\n                                                            a_ = dc[0],\r\n                                                            x_ = dc[1],\r\n                                                            arg = sym1.args[0].toString();\r\n                                                    retval = _.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)', a_, x_, arg))\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                //since group S is guaranteed convergence we need not worry about tracking depth of integration\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === EX && g2 === S) {\r\n                                            var x = fn1 === LOG ? __.integration.decompose_arg(sym1.args[0], dx)[1] : null;\r\n                                            if(sym1.isE() && (sym1.power.group === S || sym1.power.group === CB) && sym2.power.equals(-1)) {\r\n                                                retval = _.symfunction('Ei', [sym1.power.clone()]);\r\n                                            }\r\n                                            else if(fn1 === LOG && x.value === sym2.value) {\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                        else if(g1 === PL && g2 === S) {\r\n                                            //first try to reduce the top\r\n                                            if(sym2.value === sym1.value && sym1.power.equals(-1)) {\r\n                                                //find the lowest power in the denominator\r\n                                                var pd = Math.min.apply(null, core.Utils.keys(sym1.symbols));\r\n                                                //get the lowest common value between denominator and numerator\r\n                                                var pc = Math.min(pd, sym2.power);\r\n                                                //reduce both denominator and numerator by that factor\r\n                                                var factor = sym2.clone();\r\n                                                factor.power = new Frac(pc);\r\n                                                sym2 = _.divide(sym2, factor.clone()); //reduce the denominator\r\n                                                var t = new Symbol(0);\r\n                                                sym1.each(function (x) {\r\n                                                    t = _.add(t, _.divide(x.clone(), factor.clone()));\r\n                                                });\r\n                                                t.multiplier = sym1.multiplier;\r\n                                                symbol = _.divide(sym2, t);\r\n                                            }\r\n                                            else {\r\n                                                symbol = _.expand(symbol);\r\n                                            }\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                        }\r\n                                        else if(g1 === CP && g2 === S) {\r\n                                            var f = sym1.clone().toLinear(),\r\n                                                    f_is_linear = core.Algebra.degree(f, _.parse(dx)).equals(1);\r\n                                            //handle cases x^(2*n)/sqrt(1-x^2)\r\n                                            if(sym1.power.equals(-1 / 2)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx);\r\n                                                var a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(isInt(p2) && core.Utils.even(p2) && x.power.equals(2)) {\r\n                                                    //if the substitution \r\n                                                    var c = _.divide(_.multiply(_.pow(b.clone(), new Symbol(2)),\r\n                                                            _.symfunction(SQRT, [_.divide(b.clone(), a.clone())])),\r\n                                                            _.pow(a.clone(), new Symbol(2)));\r\n                                                    c = _.multiply(c, _.symfunction(SQRT, [b]).invert());\r\n                                                    var dummy = _.parse('sin(u)');\r\n                                                    dummy.power = dummy.power.multiply(sym2.power);\r\n                                                    var integral = __.integrate(dummy, 'u', depth);\r\n                                                    var bksub = _.parse(ASIN + '(' + SQRT + '(' + a + '/' + b + ')*' + dx + ')');\r\n                                                    retval = _.multiply(c, integral.sub(new Symbol('u'), bksub));\r\n                                                }\r\n                                                else if(p1 === -1 / 2) {\r\n                                                    var u_transform = function (f, u) {\r\n                                                        var integral = _.parse(__.integrate(f, dx, depth, opt).sub(dx, format(u, dx)));\r\n                                                        if(!integral.hasIntegral())\r\n                                                            return integral;\r\n                                                    }\r\n                                                    if(p2 === -1) {\r\n                                                        retval = u_transform(\r\n                                                                _.expand(_.expand(_.pow(_.multiply(sym1.invert(), sym2.invert()), new Symbol(2)))).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                    else if(p2 === -2) {\r\n                                                        //apply transformation to see if it matches asin(x)\r\n                                                        retval = u_transform(\r\n                                                                _.sqrt(_.expand(_.divide(_.pow(symbol, new Symbol(2)).invert(), _.pow(new Symbol(dx), new Symbol(2))).negate())).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else if(sym1.power.equals(-1) && sym2.isLinear() && f_is_linear) {\r\n                                                retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else if(!sym1.power.lessThan(0) && isInt(sym1.power)) {\r\n                                                //sum of integrals\r\n                                                var expanded = _.expand(sym1);\r\n                                                retval = new Symbol(0);\r\n                                                expanded.each(function (x) {\r\n                                                    if(x.group === PL) {\r\n                                                        x.each(function (y) {\r\n                                                            retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), y), dx, depth));\r\n                                                        });\r\n                                                    }\r\n                                                    else\r\n                                                        retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), x), dx, depth));\r\n                                                });\r\n                                            }\r\n                                            else if(sym1.power.lessThan(-2)) {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                            else if(sym1.power.lessThan(0) && sym2.power.greaterThan(1)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                        a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        fn = sym1.clone().toLinear();\r\n\r\n                                                if(x.group !== PL && x.isLinear()) {\r\n                                                    var p = Number(sym2.power),\r\n                                                            du = '_u_',\r\n                                                            u = new Symbol(du),\r\n                                                            //pull the integral with the subsitution\r\n                                                            U = _.expand(_.divide(_.pow(_.subtract(u.clone(), b.clone()), new Symbol(p)), u.clone())),\r\n                                                            scope = {};\r\n\r\n                                                    //generate a scope for resubbing the symbol\r\n                                                    scope[du] = fn;\r\n                                                    var U2 = _.parse(U, scope);\r\n                                                    retval = __.integrate(U2, dx, 0);\r\n                                                }\r\n                                                else if(sym2.power.greaterThan(x.power) || sym2.power.equals(x.power)) {\r\n\r\n                                                    //factor out coefficients\r\n                                                    var factors = new core.Algebra.Classes.Factors();\r\n                                                    sym1 = core.Algebra.Factor.coeffFactor(sym1.invert(), factors);\r\n                                                    var div = core.Algebra.divide(sym2, sym1);\r\n                                                    //it assumed that the result will be of group CB\r\n                                                    if(div.group !== CB) {\r\n                                                        retval = new Symbol(0);\r\n                                                        div.each(function (t) {\r\n                                                            retval = _.add(retval, __.integrate(t, dx, depth));\r\n                                                        });\r\n                                                        //put back the factors\r\n                                                        factors.each(function (factor) {\r\n                                                            retval = _.divide(retval, factor);\r\n                                                        });\r\n\r\n                                                        retval = _.expand(retval);\r\n                                                    }\r\n                                                    else {\r\n                                                        //try something else\r\n                                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else {\r\n                                                //handle cases such as (1-x^2)^(n/2)*x^(m) where n is odd ___ cracking knuckles... This can get a little hairy \r\n                                                if(sym1.power.den.equals(2)) {\r\n                                                    //assume the function is in the form (a^2-b*x^n)^(m/2)\r\n                                                    var dc = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                            //using the above definition\r\n                                                            a = dc[3], x = dc[1], b = dc[0], bx = dc[2];\r\n                                                    if(x.power.equals(2) && b.lessThan(0)) { //if n is even && b is negative\r\n                                                        //make a equal 1 so we can do a trig sub\r\n                                                        if(!a.equals(1)) { //divide a out of everything\r\n                                                            //move a to the coeff\r\n                                                            coeff = _.multiply(coeff, _.pow(a, new Symbol(2)));\r\n                                                        }\r\n                                                        var u = dx;\r\n                                                        var c = _.divide(_.pow(b.clone().negate(), new Symbol(1 / 2)), _.pow(a, new Symbol(1 / 2))),\r\n                                                                du = _.symfunction(COS, [new Symbol(u)]),\r\n                                                                cosn = _.pow(_.symfunction(COS, [new Symbol(u)]), new Symbol(sym1.power.num)),\r\n                                                                X = _.pow(_.symfunction(SIN, [new Symbol(u)]), new Symbol(sym2.power)),\r\n                                                                val = _.multiply(_.multiply(cosn, du), X),\r\n                                                                integral = __.integrate(val, u, depth);\r\n                                                        //but remember that u = asin(sqrt(b)*a*x)\r\n                                                        retval = integral.sub(u, _.symfunction(ASIN, [_.multiply(new Symbol(dx), c)]));\r\n                                                    }\r\n                                                    else {\r\n                                                        retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else if(f_is_linear) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        else if(sym1.isComposite() && sym2.isComposite()) {\r\n                                            //sum of integrals\r\n                                            retval = new Symbol(0);\r\n                                            if(sym1.power.greaterThan(0) && sym2.power.greaterThan(0)) {\r\n                                                //combine and pull the integral of each\r\n                                                var sym = _.expand(symbol);\r\n                                                sym.each(function (x) {\r\n                                                    retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                }, true);\r\n                                            }\r\n                                            else {\r\n                                                var p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(p1 < 0 && p2 > 0) {\r\n                                                    //swap\r\n                                                    var t = sym1;\r\n                                                    sym1 = sym2;\r\n                                                    sym2 = t;\r\n                                                }\r\n                                                if(p1 === -1 && p2 === -1) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx);\r\n                                                }\r\n                                                else {\r\n                                                    sym1.each(function (x) {\r\n                                                        var k = _.multiply(x, sym2.clone());\r\n                                                        var integral = __.integrate(k, dx, depth);\r\n                                                        retval = _.add(retval, integral);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === CP && symbols[0].power.greaterThan(0)) {\r\n                                            sym1 = _.expand(sym1);\r\n                                            retval = new Symbol(0);\r\n                                            sym1.each(function (x) {\r\n                                                retval = _.add(retval, __.integrate(_.multiply(x, sym2.clone()), dx, depth));\r\n                                            }, true);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === EX && core.Utils.in_htrig(sym1.fname)) {\r\n                                            sym1 = sym1.fnTransform();\r\n                                            retval = __.integrate(_.expand(_.multiply(sym1, sym2)), dx, depth);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === CP || g2 === FN && g1 === CP) {\r\n                                            if(g2 === FN && g1 === CP) {\r\n                                                var t = sym1;\r\n                                                sym1 = sym2;\r\n                                                sym2 = t; //swap\r\n                                            }\r\n                                            var du, sym2_clone, p, q, sa, sb;\r\n                                            du = Symbol.unwrapSQRT(__.diff(sym1.clone(), dx), true);\r\n                                            sym2_clone = Symbol.unwrapSQRT(sym2, true);\r\n                                            if(du.power.equals(sym2_clone.power)) {\r\n                                                p = new Symbol(sym2.power);\r\n                                                sa = du.clone().toLinear();\r\n                                                sb = sym2.clone().toLinear();\r\n                                                q = core.Algebra.divide(sa.toLinear(), sb);\r\n                                                if(q.isConstant()) {\r\n                                                    var nq = _.pow(q, p.negate());\r\n                                                    retval = _.multiply(nq, __.integration.poly_integrate(sym1.clone()));\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            var syma = sym1.clone().toLinear();\r\n                                            var symb = sym2.clone().toLinear();\r\n                                            if(g1 === EX && g2 === EX && sym1.power.contains(dx) && sym2.power.contains(dx)\r\n                                                    && !syma.contains(dx) && !symb.contains(dx)) {\r\n                                                retval = _.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',\r\n                                                        syma.toString(),\r\n                                                        symb.toString(),\r\n                                                        sym1.power.multiplier.toString(),\r\n                                                        sym2.power.multiplier.toString(),\r\n                                                        dx\r\n                                                        ));\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(l === 3 && (symbols[2].group === S && symbols[2].power.lessThan(2) || symbols[0].group === CP)) {\r\n                                    var first = symbols[0];\r\n                                    if(first.group === CP) { //TODO {support higher powers of x in the future}\r\n                                        if(first.power.greaterThan(1))\r\n                                            first = _.expand(first);\r\n                                        var r = _.multiply(symbols[1], symbols[2]);\r\n                                        retval = new Symbol(0);\r\n                                        first.each(function (x) {\r\n                                            var t = _.multiply(x, r.clone());\r\n                                            var intg = __.integrate(t, dx, depth);\r\n                                            retval = _.add(retval, intg);\r\n                                        }, true);\r\n                                    }\r\n                                    else {\r\n                                        //try integration by parts although technically it will never work\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n\r\n                                }\r\n                                else if(all_functions(symbols)) {\r\n                                    var t = new Symbol(1);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        t = _.multiply(t, symbols[i].fnTransform());\r\n                                    }\r\n                                    t = _.expand(t);\r\n                                    retval = __.integrate(t, dx, depth);\r\n                                }\r\n                                else {\r\n                                    //one more go\r\n                                    var transformed = trigTransform(symbols);\r\n                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        retval = _.multiply(retval, coeff);\r\n                    }\r\n                    //if an integral was found then we return it\r\n                    if(retval)\r\n                        return retval;\r\n                }\r\n\r\n                catch(error) {\r\n                    //do nothing if it's a NoIntegralFound error otherwise let it bubble\r\n                    if(!(error instanceof NoIntegralFound || error instanceof core.exceptions.DivisionByZero))\r\n                        throw error;\r\n                }\r\n\r\n                //no symbol found so we return the integral again\r\n                return _.symfunction('integrate', [original_symbol, dt]);\r\n            }, false);\r\n        },\r\n        defint: function (symbol, from, to, dx) {\r\n            dx = dx || 'x'; //make x the default variable of integration\r\n            var get_value = function (integral, vars, point) {\r\n                try {\r\n                    return _.parse(integral, vars);\r\n                }\r\n                catch(e) {\r\n                    //it failed for some reason so return the limit\r\n                    var lim = __.Limit.limit(integral, dx, point);\r\n                    return lim;\r\n                }\r\n            };\r\n\r\n            var vars = core.Utils.variables(symbol),\r\n                    hasTrig = symbol.hasTrig();\r\n            var retval, integral;\r\n\r\n            // Fix #593 - Only assume the first variable if dx is not defined.\r\n            if(vars.length === 1 && !dx)\r\n                dx = vars[0];\r\n\r\n            if(!hasTrig) {\r\n                integral = __.integrate(symbol, dx);\r\n            }\r\n\r\n            if(!hasTrig && !integral.hasIntegral()) {\r\n                var upper = {},\r\n                        lower = {},\r\n                        a, b;\r\n                upper[dx] = to;\r\n                lower[dx] = from;\r\n\r\n                a = get_value(integral, upper, to, dx);\r\n                b = get_value(integral, lower, from, dx);\r\n                retval = _.subtract(a, b);\r\n            }\r\n            else if(vars.length === 1 && from.isConstant() && to.isConstant()) {\r\n\r\n                var f = core.Utils.build(symbol);\r\n                retval = new Symbol(core.Math2.num_integrate(f, Number(from), Number(to)));\r\n            }\r\n            else\r\n                retval = _.symfunction('defint', [symbol, from, to, dx]);\r\n            return retval;\r\n        },\r\n\r\n        Limit: {\r\n            interval: function (start, end) {\r\n                return _.parse(format('[{0}, {1}]', start, end));\r\n            },\r\n            diverges: function () {\r\n                return __.Limit.interval('-Infinity', 'Infinity');\r\n            },\r\n            divide: function (f, g, x, lim, depth) {\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                var fin = f.clone(), gin = g.clone();\r\n\r\n                //But first a little \"cheating\". x/|x| ends up in an infinite loop since the d/dx |x| -> x/|x|\r\n                //To break this loop we simply provide the answer. Keep in mind that currently limit only provides\r\n                //the two-sided limit.\r\n                //Known limit\r\n                if(g.fname === ABS) {\r\n                    var sign = f.sign();\r\n                    var lim_sign = lim.sign();\r\n\r\n                    if(lim.isInfinity)\r\n                        return _.multiply(new Symbol(sign), new Symbol(lim_sign));\r\n\r\n                    else if(lim.equals(0)) {\r\n                        var fm = _.parse(f.multiplier);\r\n                        var gm = _.parse(g.multiplier);\r\n                        return _.divide(_.multiply(fm, __.Limit.interval('-1', '1')), gm);\r\n                    }\r\n                    else {\r\n                        //TODO: Support more limits\r\n                        __.Limit.diverges();\r\n                    }\r\n                }\r\n\r\n                var isInfinity = function (L) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        for(var i = 0; i < L.elements.length; i++)\r\n                            if(!L.elements[i].isInfinity)\r\n                                return false;\r\n                        return true;\r\n                    }\r\n                    return L.isInfinity;\r\n                };\r\n\r\n                var equals = function (L, v) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        return false;\r\n                    }\r\n                    return L.equals(v);\r\n                };\r\n\r\n                var retval;\r\n                do {\r\n                    var lim1 = evaluate(__.Limit.limit(f.clone(), x, lim, depth));\r\n                    var lim2 = evaluate(__.Limit.limit(g.clone(), x, lim, depth));\r\n\r\n                    //if it's in indeterminate form apply L'Hospital's rule\r\n                    var indeterminate = isInfinity(lim1) && isInfinity(lim2) || equals(lim1, 0) && equals(lim2, 0);\r\n                    //pull the derivatives\r\n                    if(indeterminate) {\r\n                        var ft = __.diff(f.clone(), x);\r\n                        var gt = __.diff(g.clone(), x);\r\n\r\n                        var t_symbol = _.expand(_.divide(ft, gt));\r\n                        f = t_symbol.getNum();\r\n                        g = t_symbol.getDenom();\r\n\r\n                    }\r\n                }\r\n                while(indeterminate)\r\n\r\n                //REMEMBER: \r\n                //- 1/cos(x)\r\n                //n/0 is still possible since we only checked for 0/0\r\n                var den_is_zero = lim2.equals(0);\r\n                var p = Number(gin.power);\r\n\r\n                if(lim.isConstant(true) && den_is_zero) {\r\n                    retval = Symbol.infinity(core.Utils.even(p) && lim1.lessThan(0) ? -1 : undefined);\r\n                }\r\n                else if(den_is_zero) {\r\n                    retval = __.Limit.diverges();\r\n                }\r\n                else {\r\n                    retval = _.divide(lim1, lim2);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            rewriteToLog: function (symbol) {\r\n                var p = symbol.power.clone();\r\n                symbol.toLinear();\r\n                return _.pow(new Symbol('e'), _.multiply(p, _.symfunction(Settings.LOG + '', [symbol])));\r\n            },\r\n            getSubbed: function (f, x, lim) {\r\n                var retval;\r\n                //1. rewrite EX with base e\r\n                if(f.group === EX) {\r\n                    f = __.rewriteToLog(f);\r\n                }\r\n                //2. try simple substitution\r\n                try {\r\n                    retval = f.sub(x, lim);\r\n                }\r\n                catch(e) {\r\n                    //Nope. No go, so just return the unsubbed function so we can test the limit instead.\r\n                    retval = f;\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            isInterval: function (limit) {\r\n                return core.Utils.isVector(limit);\r\n            },\r\n            isConvergent: function (limit) {\r\n                //it's not convergent if it lies on the interval -Infinity to Infinity\r\n                if(\r\n                        //It lies on the interval -Infinity to Infinity\r\n                        __.Limit.isInterval(limit) && limit.elements[0].isInfinity && limit.elements[1].isInfinity ||\r\n                        //We weren't able to calculate the limit\r\n                        limit.containsFunction('limit')\r\n                        ) {\r\n                    return false; //Then no\r\n                }\r\n                return true; //It is\r\n            },\r\n            limit: function (symbol, x, lim, depth) {\r\n                //Simplify the symbol\r\n                if(symbol.isLinear() && symbol.isComposite()) {\r\n\r\n                    //Apply sum of limits\r\n                    var limit = new Symbol(0);\r\n                    symbol.each(function (s) {\r\n                        limit = _.add(limit, __.Limit.limit(s, x, lim, depth));\r\n                    }, true);\r\n\r\n                    return limit;\r\n                }\r\n                ;\r\n\r\n                symbol = core.Algebra.Simplify.simplify(symbol);\r\n\r\n                depth = depth || 1;\r\n\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                //store the multiplier\r\n                var m = _.parse(symbol.multiplier);\r\n                //strip the multiplier\r\n                symbol.toUnitMultiplier();\r\n                try {\r\n                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                    var retval;\r\n                    //we try the simplest option first where c is some limit\r\n                    //lim a as x->c = a where c \r\n                    if(symbol.isConstant(true)) {\r\n                        retval = symbol;\r\n                    }\r\n                    else {\r\n                        var point = {};\r\n                        point[x] = lim;\r\n                        //lim x as x->c = c where c\r\n\r\n                        try {\r\n\r\n                            //evaluate the function at the given limit\r\n                            var t = _.parse(symbol.sub(x, lim), point);\r\n\r\n                            //a constant or infinity is known so we're done\r\n                            if(t.isConstant(true) || t.isInfinity)\r\n                                retval = t;\r\n\r\n                        }\r\n                        catch(e) { /*Nothing. Maybe we tried to divide by zero.*/\r\n                        }\r\n                        ;\r\n\r\n                        if(!retval) {\r\n                            //split the symbol in the numerator and the denominator\r\n                            var num = symbol.getNum();\r\n                            var den = symbol.getDenom();\r\n\r\n                            if(den.isConstant(true)) {\r\n                                //We still don't have a limit so we generate tests.\r\n                                if(symbol.group === EX) {\r\n                                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                                    //Speed boost for exponentials by detecting patterns\r\n                                    var f = symbol.clone().toLinear();\r\n                                    var p = symbol.power.clone();\r\n                                    var _num = f.getNum();\r\n                                    var _den = f.getDenom();\r\n                                    var fn = core.Utils.decompose_fn(_den, x, true);\r\n                                    //start detection of pattern (x/(x+1))^x\r\n                                    if(_num.group === S && _num.multiplier.isOne() && fn.ax.group === S && fn.b.isConstant(true) && fn.a.isOne() && fn.b.isConstant(true)) {\r\n                                        retval = _.parse(format('(1/e^({0}))', fn.b));\r\n                                    }\r\n                                    else {\r\n                                        var symbol_ = __.Limit.rewriteToLog(symbol.clone());\r\n                                        //get the base\r\n                                        var pow = symbol_.power.clone();\r\n                                        var base = symbol_.clone().toLinear();\r\n                                        var lim_base = __.Limit.limit(base, x, lim, depth);\r\n                                        var lim_pow = __.Limit.limit(pow, x, lim, depth);\r\n                                        retval = _.pow(lim_base, lim_pow);\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === FN && symbol.args.length === 1) {\r\n                                    var evaluates;\r\n                                    //Squeeze theorem lim f(g(x)) = lim f(lim g))\r\n                                    var arg = __.Limit.limit(symbol.args[0], x, lim, depth);\r\n                                    if(core.Utils.isVector(arg)) {\r\n                                        //get the limit over that interval\r\n                                        retval = arg.map(function (e) {\r\n                                            var clone = symbol.clone();\r\n                                            clone.args[0] = e;\r\n                                            return __.Limit.limit(_.symfunction(symbol.fname, [e]), x, lim, depth);\r\n                                        });\r\n\r\n                                        return _.multiply(m, retval);\r\n                                    }\r\n                                    //if the argument is constant then we're done\r\n                                    else if(arg.isConstant(true)) {\r\n\r\n                                        //double check that it evaluates\r\n                                        var trial = _.symfunction(symbol.fname, [arg]);\r\n                                        //trial evaluation\r\n                                        try {\r\n                                            evaluate(trial);\r\n                                            evaluates = true;\r\n                                        }\r\n                                        catch(e) {\r\n\r\n                                            evaluates = false;\r\n                                        }\r\n                                    }\r\n                                    if(evaluates) {\r\n                                        retval = trial;\r\n                                    }\r\n                                    else {\r\n                                        //if the limit converges. We'll deal with non-convergent ones later\r\n                                        if(__.Limit.isConvergent(arg)) {\r\n                                            if(symbol.fname === LOG) {\r\n                                                switch(arg.toString()) {\r\n                                                    //lim -> 0\r\n                                                    case '0':\r\n                                                        retval = Symbol.infinity().negate();\r\n                                                        break;\r\n                                                    case 'Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                    case '-Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else if((symbol.fname === COS || symbol.fname === SIN) && lim.isInfinity) {\r\n                                                retval = __.Limit.interval(-1, 1);\r\n                                            }\r\n                                            else if((symbol.fname === TAN)) {\r\n                                                var s_arg = symbol.args[0];\r\n                                                var n = s_arg.getNum();\r\n                                                var d = s_arg.getDenom();\r\n                                                var pi = n.toUnitMultiplier();\r\n                                                if(lim.isInfinity || pi.equals('pi') && d.equals(2)) {\r\n                                                    retval = divergent();\r\n                                                }\r\n                                            }\r\n                                            else if(symbol.fname === Settings.FACTORIAL) {\r\n                                                if(arg.isInfinity)\r\n                                                    return Symbol.infinity();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === S) {\r\n                                    if(symbol.power > 0)\r\n                                        //these functions always converge to the limit\r\n                                        return _.parse(symbol, point);\r\n                                    else {\r\n                                        //we're dealing with 1/x^n but remember that infinity has already been dealt\r\n                                        //with by substitution\r\n                                        if(core.Utils.even(symbol.power)) {\r\n                                            //even powers converge to infinity\r\n                                            retval = Symbol.infinity();\r\n                                        }\r\n                                        else {\r\n                                            //odd ones don't\r\n                                            retval = __.Limit.diverges();\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === CB) {\r\n\r\n                                    var lim1, lim2;\r\n                                    //loop through all the symbols\r\n                                    //thus => lim f*g*h = lim (f*g)*h = (lim f*g)*(lim h)\r\n                                    //symbols of lower groups are generally easier to differentiatee so get them to the right by first sorting\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return a.group - b.group;\r\n                                    });\r\n\r\n                                    var f = symbols.pop();\r\n                                    //calculate the first limit so we can keep going down the list\r\n                                    lim1 = evaluate(__.Limit.limit(f, x, lim, depth));\r\n\r\n                                    //reduces all the limits one at a time\r\n                                    while(symbols.length) {\r\n                                        //get the second limit\r\n                                        var g = symbols.pop();\r\n                                        //get the limit of g\r\n                                        lim2 = evaluate(__.Limit.limit(g, x, lim, depth));\r\n\r\n                                        //if the limit is in indeterminate form aplly L'Hospital by inverting g and then f/(1/g)\r\n                                        if((lim1.isInfinity || !__.Limit.isConvergent(lim1) && lim2.equals(0) || lim1.equals(0) && __.Limit.isConvergent(lim2))) {\r\n                                            if(g.containsFunction(LOG)) {\r\n                                                //swap them\r\n                                                g = [f, f = g][0];\r\n                                            }\r\n                                            //invert the symbol\r\n                                            g.invert();\r\n\r\n                                            // Product of infinities\r\n                                            if(lim1.isInfinity && lim2.isInfinity) {\r\n                                                lim1 = Symbol.infinity()\r\n                                            }\r\n                                            else {\r\n                                                lim1 = __.Limit.divide(f, g, x, lim, depth);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //lim f*g = (lim f)*(lim g)\r\n                                            lim1 = _.multiply(lim1, lim2);\r\n                                            //let f*g equal f and h equal g \r\n                                            f = _.multiply(f, g);\r\n                                        }\r\n                                    }\r\n\r\n                                    //Done, lim1 is the limit we're looking for     \r\n                                    retval = lim1;\r\n                                }\r\n                                else if(symbol.isComposite()) {\r\n                                    var _lim;\r\n                                    if(!symbol.isLinear())\r\n                                        symbol = _.expand(symbol);\r\n                                    //Apply lim f+g = (lim f)+(lim g)\r\n                                    retval = new Symbol(0);\r\n\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return b.group - a.group;\r\n                                    });\r\n\r\n                                    var _symbols = [];\r\n                                    //Analyze the functions first\r\n                                    var fns = new Symbol(0);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i].clone();\r\n                                        if(sym.group === FN || sym.group === CB && sym.hasFunc()) {\r\n                                            fns = _.add(fns, sym);\r\n                                        }\r\n                                        else\r\n                                            _symbols.push(sym);\r\n                                    }\r\n                                    _symbols.unshift(fns);\r\n\r\n                                    //make sure that we didn't just repackage the exact same symbol\r\n                                    if(_symbols.length !== 1) {\r\n                                        symbols = _symbols;\r\n                                    }\r\n\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i];\r\n                                        //If the addition of the limits is undefined then the limit diverges so return -infinity to infinity\r\n                                        try {\r\n                                            _lim = __.Limit.limit(sym, x, lim, depth);\r\n                                        }\r\n                                        catch(e) {\r\n                                            _lim = __.Limit.diverges();\r\n                                        }\r\n\r\n                                        try {\r\n                                            retval = _.add(retval, _lim);\r\n                                        }\r\n                                        catch(e) {\r\n                                            if(depth++ > Settings.max_lim_depth) {\r\n                                                return;\r\n                                            }\r\n                                            ;\r\n                                            retval = __.Limit.limit(__.diff(symbol, x), x, lim, depth);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                retval = __.Limit.divide(num, den, x, lim, depth);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //if we still don't have a solution\r\n                    if(!retval)\r\n                        //return it symbolically\r\n                        retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n                catch(e) {\r\n                    //if all else fails return the symbolic function\r\n                    retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n        },\r\n        Fresnel: {\r\n            S: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('sin(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('S', arguments);\r\n            },\r\n            C: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('cos(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('C', arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'diff',\r\n            visible: true,\r\n            numargs: [1, 3],\r\n            build: function () {\r\n                return __.diff;\r\n            }\r\n        },\r\n        {\r\n            name: 'sum',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.sum;\r\n            }\r\n        },\r\n        {\r\n            name: 'product',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.product;\r\n            }\r\n        },\r\n        {\r\n            name: 'integrate',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.integrate;\r\n            }\r\n        },\r\n        {\r\n            name: 'defint',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.defint;\r\n            }\r\n        },\r\n        {\r\n            name: 'S',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.S;\r\n            }\r\n        },\r\n        {\r\n            name: 'C',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.C;\r\n            }\r\n        },\r\n        {\r\n            name: 'limit',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.Limit.limit;\r\n            }\r\n        }\r\n    ]);\r\n    //link registered functions externally\r\n    nerdamer.updateAPI();\r\n\r\n})();", "var nerdamer=function(e){\"use strict\";var d=new P,S=e.bigInt,k=e.bigDec;k.set({precision:250});var t={},o=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],M={},D={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:\"i\",FUNCTION_MODULES:[Math],ALLOW_CHARS:[\"π\"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:\"^\",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,ALIASES:{\"π\":\"pi\",\"∞\":\"Infinity\"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:\"vector\",PARENTHESIS:\"parens\",SQRT:\"sqrt\",ABS:\"abs\",FACTORIAL:\"factorial\",DOUBLEFACTORIAL:\"dfactorial\",LONG_PI:\"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196\",LONG_E:\"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901\",PI:Math.PI,E:Math.E,LOG:\"log\",LOG10:\"log10\",LOG10_LATEX:\"log_{10}\",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};!function(){D.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var n=S(e).pow(t);D.CACHE.roots[n+\"-\"+t]=e}}();function n(t){function e(e){this.name=t,this.message=void 0!==e?e:\"\",(e=new Error(this.message)).name=this.name,this.stack=e.stack}return e.prototype=Object.create(Error.prototype),e}function r(e){return-1!==f.indexOf(e)}function i(e){return e instanceof R}function A(e){return(e=ne(e)?e.multiplier:e).lessThan(0)}function c(e){return Math.min.apply(void 0,e)}function s(e,t){if(ae(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function a(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function u(e){for(var t=o[o.length-1]||2;t<e;t++)g(t)&&o.push(t)}var F=t.N=1,B=t.P=2,G=t.S=3,V=t.EX=4,H=t.FN=5,j=t.PL=6,X=t.CB=7,$=t.CP=8,l=D.CONST_HASH=\"#\",Z=D.PARENTHESIS,z=D.SQRT,Q=D.ABS,Y=D.FACTORIAL,W=D.DOUBLEFACTORIAL,p=[],J={},f=[],h=[],K=function(e,t){if(!D.suppress_errors)throw new(t||Error)(e)},w=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},ee=function(e){h.push(e),D.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},m=function(e,t){if((t=t||\"variable\",-1===D.ALLOW_CHARS.indexOf(e))&&!D.VALIDATION_REGEX.test(e))throw new U(e+\" is not a valid \"+t+\" name\")},y=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split(\"e\")).pop())/(t=Math.abs(r)),n=n[0].split(\".\"),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+\".\"+n[0].slice(t)+(2===n.length?n[1]:\"\"):\"0.\"+new Array(t+1).join(\"0\")+n.join(\"\"):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+\".\"+r.slice(t):n.join(\"\")+new Array(t+1).join(\"0\"))),i<0?\"-\"+e:e},g=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},te=function(e){return/^\\d+\\.?\\d*$/.test(e)},v=function(e){return ne(e)?v(e.multiplier.toDecimal()):e%1!=0},ne=function(e){return e instanceof Fe},b=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},ne(e)){var r=e.group,i=e.previousGroup;if(r===V&&b(e.power,t,n),r===$||r===X||i===$||i===X)for(var s in e.symbols)b(e.symbols[s],t,n);else if(r===G||i===G)\"e\"!==e.value&&\"pi\"!==e.value&&e.value!==D.IMAGINARY&&n.add(e.value);else if(r===j||i===j)b(pe(e.symbols),t,n);else if(r===V)isNaN(e.value)||n.add(e.value),b(e.power,t,n);else if(r===H&&!t)for(var o=0;o<e.args.length;o++)b(e.args[o],t,n)}return n.c.sort()},N=function(e,n){e=d.expand(e),n=n||{};function t(e,t){n[e]||(n[e]=new Fe(0)),n[e]=d.add(n[e],t.clone())}return e.each(function(e){if(e.isConstant(\"all\"))t(\"constants\",e);else if(e.group===G)t(e.value,e);else if(e.group!==H||e.fname!==Q&&\"\"!==e.fname){if(e.group===V||e.group===H)throw new Error(\"Unable to separate. Term cannot be a function!\");t(b(e).join(\" \"),e)}else N(e.args[0])}),n},re=function(e){return e instanceof Ve},ie=function(e){return e instanceof He},se=function(e){return e instanceof je},oe=function(e){return e.group===F||e.group===B},ae=function(e){return Array.isArray(e)},ue=function(e){return/^[-+]?\\d+e?\\+?\\d*$/gim.test(e.toString())},le=function(e){return e&&String(e)},E=function(e){return\"(\"+e+\")\"},ce=function(){var n=[].slice.call(arguments);return n.shift().replace(/{(\\d+)}/g,function(e,t){t=n[t];return\"function\"==typeof t?t():t})},q=Object.keys,pe=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},fe=function(e,t,n){return m(e),r(e)?null:(t=t||b(d.parse(n)),d.functions[e]=[d.mapped_function,t.length,{name:e,params:t,body:n}],n)},he=function(e,t,n){var r,i;return t=String(t),e.group===$?(i=d.expand(e.clone()).stripVar(t),r=d.subtract(e.clone(),i.clone()),i=i):r=e.clone(),e=r.stripVar(t),t=d.divide(r.clone(),e.clone()),i=i||new Fe(0),n?{a:e,x:t,ax:r,b:i}:[e,t,r,i]},me=function(e,t){return ue(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},ge=function(e){return e%2==0},de=function(e){return 1/(e%1)%2==0},ve=function(e,t){var n=typeof t;\"function\"==n&&\"undefined\"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},x=function(e){function t(e){-1===f.indexOf(e)&&f.push(e)}\"string\"==typeof e?t(e):s(e,function(e){t(e)})},we=function(e,t){var n;return ae(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},ye=function(e,t,n,r){var i=D[e];D[e]=void 0===n||!!n;r=t.call(r);return D[e]=i,r},be=function(e){return[].slice.call(e)},Se=function(e,t){return ye(\"PARSE2NUMBER\",function(){return d.parse(e,t)},!0)},C=function(e){if(ae(e)){for(var t=new Ve([]),n=0;n<e.length;n++)t.elements.push(C(e[n]));return t}return ne(e)?e:d.parse(e)},Me=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==F)return!1;return!0},Ne=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},Ee=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Fe(0);return e.isLinear()?e.each(function(t){var e;n.isComposite()?n.isLinear()?n.each(function(e){e=d.multiply(d.parse(t),d.parse(e)),e=d.expand(d.parse(e),r);i=d.add(i,e)},!0):i=d.add(i,d.multiply(t,d.parse(n))):(e=d.multiply(d.parse(t),d.parse(n)),i=d.add(i,d.expand(e,r)))},!0):i=d.multiply(e,n),i},qe=n(\"DivisionByZero\"),xe=n(\"ParseError\"),Ae=n(\"UndefinedError\"),Ce=n(\"OutOfFunctionDomainError\"),L=n(\"MaximumIterationsReached\"),I=n(\"NerdamerTypeError\"),Le=n(\"ParityError\"),Ie=n(\"OperatorError\"),Ue=n(\"OutOfRangeError\"),_e=n(\"DimensionError\"),U=n(\"InvalidVariableNameError\"),_=n(\"ValueLimitExceededError\"),Oe=n(\"NerdamerValueError\"),O=n(\"SolveError\"),e=n(\"InfiniteLoopError\"),Re=n(\"UnexpectedTokenError\"),e={DivisionByZero:qe,ParseError:xe,OutOfFunctionDomainError:Ce,UndefinedError:Ae,MaximumIterationsReached:L,NerdamerTypeError:I,ParityError:Le,OperatorError:Ie,OutOfRangeError:Ue,DimensionError:_e,InvalidVariableNameError:U,ValueLimitExceededError:_,NerdamerValueError:Oe,SolveError:O,InfiniteLoopError:e,UnexpectedTokenError:Re},Te={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),t=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(t){return function(e){return(t(e+.001)-t(e-.001))/.002}},median:function(...e){e.sort(function(e,t){return e-t});var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c)if(Te.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}n=u.fractions.length-1;return 1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof De||(e=De.create(e)),t instanceof De||(t=De.create(t));var n,r=new De(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=De.create(Math.pow(e.num,t.num)),e=De.create(Math.pow(e.den,t.num)),r.num=Te.nthroot(n,t.den.toString()),r.den=Te.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Te.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new S(1),n=2;n<=e;n++)t=t.times(n);return new De(t)},bigLog:function(e){var t=[\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\",\"0\",\"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\",\"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\",\"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\",\"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\",\"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\",\"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\",\"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\",\"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\",\"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\",\"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\",\"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\",\"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\",\"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\",\"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\",\"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\",\"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\",\"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\",\"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\",\"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\",\"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\",\"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\",\"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\",\"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\",\"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\",\"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\",\"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\",\"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\",\"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\",\"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\",\"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\",\"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\",\"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\",\"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\",\"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\",\"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\",\"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\",\"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\",\"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\",\"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\",\"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\",\"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\",\"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\",\"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\",\"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\",\"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\",\"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\",\"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\",\"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\",\"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\",\"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\",\"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\",\"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\",\"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\",\"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\",\"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\",\"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\",\"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\",\"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\",\"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\",\"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\",\"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\",\"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\",\"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\",\"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\",\"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\",\"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\",\"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\",\"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\",\"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\",\"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\",\"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\",\"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\",\"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\",\"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\",\"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\",\"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\",\"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\",\"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\",\"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\",\"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\",\"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\",\"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\",\"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\",\"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\",\"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\",\"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\",\"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\",\"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\",\"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\",\"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\",\"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\",\"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\",\"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\",\"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\",\"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\",\"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\",\"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\",\"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\",\"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\",\"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\",\"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\",\"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\",\"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\",\"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\",\"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\",\"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\",\"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\",\"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\",\"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\",\"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\",\"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\",\"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\",\"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\",\"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\",\"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\",\"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\",\"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\",\"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\",\"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\",\"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\",\"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\",\"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\",\"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\",\"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\",\"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\",\"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\",\"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\",\"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\",\"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\",\"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\",\"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\",\"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\",\"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\",\"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\",\"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\",\"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\",\"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\",\"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\",\"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\",\"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\",\"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\",\"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\",\"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\",\"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\",\"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\",\"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\",\"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\",\"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\",\"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\",\"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\",\"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\",\"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\",\"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\",\"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\",\"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\",\"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\",\"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\",\"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\",\"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\",\"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\",\"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\",\"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\",\"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\",\"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\",\"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\",\"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\",\"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\",\"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\",\"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\",\"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\",\"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\",\"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\",\"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\",\"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\",\"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\",\"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\",\"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\",\"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\",\"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\",\"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\",\"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\",\"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\",\"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\",\"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\",\"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\",\"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\",\"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\",\"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\",\"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];if(t[e])return De.quick.apply(null,t[e].split(\"/\"));e=new De(e);for(var n=new De(0),r=e.subtract(new De(1)),i=e.add(new De(1)),s=0;s<80;s++)var o=new De(2*s+1),a=Te.bigpow(r.divide(i),o),a=o.clone().invert().multiply(a),n=n.add(a);return n.multiply(new De(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Te.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(ue(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new De(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)));else for(i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)).subtract(new De(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Te.gamma(1+e/2);return r},GCD:function(){for(var e=a([].slice.call(arguments).map(function(e){return Math.abs(e)})).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0===(t%=r)){t=r;break}if(0===(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1,t=r.gcd(t);i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Te.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Te.ifactor(e),i=new Fe;for(n in i.symbols={},i.group=X,r){var s=new Fe(1);s.group=B,s.value=n,s.power=new Fe(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new Fe(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));o[o.length-1]<n&&e<1e6&&u(n);for(var r=o.length,i=0;i<r;i++)for(var s=o[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(a){var t=new S(a);if(\"0\"===(a=String(a)))return{0:1};var e=(a=new S(a)).sign?-1:1;a=a.abs();var n={};if(a.lt(\"65536\"))n=Te.sfactor(a,n);else{var r=function(e){e.isPrime()?n[e]=(n[e]||0)+1:n=Te.sfactor(e,n)};try{for(var u=1e3,l=0;!a.abs().equals(1);){if(a.isPrime()){r(a);break}var i=function e(t){for(var n=new S(t),r=2,i=new S(t),s=new S(1);s.equals(1);){for(var o=0;o<=r&&s.equals(1);o++){if(l++>u)throw new Error(\"stopping\");i=i.pow(2).add(1).mod(a),s=S.gcd(i.minus(n).abs(),a)}r*=2,n=i}return s.equals(a)?e(t+1):s}(2);r(i),a=a.divide(i)}}catch(e){n={},r(t)}}return-1==e&&(e=c(q(n)),n[\"-\"+e]=n[e],delete n[e]),n},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e);for(var t=ge(e)?t:Math.abs(t),n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return r=isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(t,n,r,e,i){if(i<0)throw new Error(\"max depth cannot be negative\");function s(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n),r=function e(t,n,r,i,s,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g=r-n,d=t(n+.25*g),v=t(r-.25*g);if(isNaN(d))p.nanEncountered=!0;else if(isNaN(v))p.nanEncountered=!0;else if(a=((h=(m=g*(i+4*d+s)/12)+(f=g*(s+4*v+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return l<c?(p.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,d,s,m,.5*u,l,c+1,p),isNaN(m)?(p.nanEncountered=!0,NaN):(c=e(t,g,r,s,v,o,f,.5*u,l,c+1,p),isNaN(c)?(p.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s);if(0<s.maxDepthCount&&ee(\"integrate-adaptive-simpson: Warning: maximum recursion depth (\"+i+\") reached \"+s.maxDepthCount+\" times\"),s.nanEncountered)throw new Error(\"Function does not converge over interval!\");return r}var o;try{o=s(t,n,r,e,i)}catch(e){return Te.simpson(t,n,r)}return me(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Te.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Te.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Te.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Te.factorial(t));return r},Chi:function(e){var t=function(e){return(Math.cosh(e)-1)/e};return Math.log(e)+.5772156649015329+Te.num_integrate(t,.002,e,.001)},Li:function(e){return Te.Ei(Te.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,t=t||0,i=0;i<n;i++)r+=Math.pow(t,i)/Te.factorial(i);return Te.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof De||(e=new De(e.toString())),(t=!(t instanceof De)?new De(t.toString()):t).equals(1))return e;var n=e.divide(new De(2)),r=new De(1e-15),i=t.clone().invert(),s=t.subtract(new De(1));do{var o=Te.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25),o=De.create(a);if(u)break;var n=n.add(o),a=o.toDecimal(),u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof De||(e=new De(e));var i=0,s=!1,o=new De(1e-20),a=e.divide(new De(2));do{if(1e3<i)throw new Error(\"Unable to calculate square root for \"+e)}while(a=a.add(e.divide(a)).divide(new De(2)),a=new De(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}};function Pe(e,m,t,n){var r=\"hash\"===m,g=void 0,i=r?void 0:m,s=\"decimal\"===i||\"decimals\"===i;function o(e){switch(m){case\"decimals\":case\"decimal\":return g=g||function(e){return!1},e.valueOf();case\"recurring\":g=g||function(e){return-1!==e.indexOf(\"'\")};var t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),r=!1,i=Number(n[0]);i<0&&(i=-i,r=!0);var s=(s=Number(n[1]))||1,o=10*(i-(h=Math.floor(i/s))*s);for(h=h.toString()+\".\";o&&o<s;)o*=10,h+=\"0\";for(var a=\"\",u=[],l=0;;){if(void 0!==u[o])return(r?\"-\":\"\")+(h+a.slice(0,u[o])+\"'\"+a.slice(u[o])+\"'\").replace(\"'0'\",\"\").replace(/\\.$/,\"\");var c=Math.floor(o/s),p=o-c*s;u[o]=l,a+=c.toString(),l+=1,o=10*p}case\"mixed\":g=g||function(e){return-1!==e.indexOf(\"/\")};t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),t=new S(n[0]),f=new S(n[1]);f.equals(0)&&(f=new S(1));var t=t.divmod(f),h=t.quotient,f=t.remainder,t=\"-\"===n[0][0]||h.equals(0)||f.equals(0)?\"\":\"+\";return(h.equals(0)?\"\":h.toString())+t+(f.equals(0)?\"\":f.toString()+\"/\"+n[1]);case\"scientific\":return g=g||function(e){return!1},new T(e.valueOf()).toString(D.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return g=g||function(e){return-1!==e.indexOf(\"/\")},e.toString()}}if(s&&void 0===n&&(n=D.DEFAULT_DECP),ne(e)){var a,u,l=\"\",c=\"\",p=\"\",f=e.group||t,h=e.value;switch(r||(\"-1\"==(a=o(e.multiplier))&&\"-1\"===String(e.multiplier)&&(p=\"-\",a=\"1\"),\"1\"!=a&&(l=a),\"1\"!=(u=e.power?o(e.power):\"\")&&(c=ne(u)?Pe(u,i):u)),f){case F:var l=\"\",d=n&&s?e.multiplier.toDecimal(n):o(e.multiplier),h=\"-1\"==String(e.multiplier)?\"1\":d,c=\"\";break;case j:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case $:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case X:h=e.collectSymbols(function(e){var t=e.group;return(t===j||t===$)&&e.power.equals(1)&&e.multiplier.equals(1)?E(Pe(e,i)):Pe(e,i)}).join(\"*\");break;case V:var v=e.previousGroup,d=e.power.group;v===j&&(h=e.collectSymbols(Pe,i).join(\"+\").replace(\"+-\",\"-\")),v===F||v===G||v===H||r||(h=E(h)),d!==$&&d!==X&&d!==j&&\"1\"==e.power.multiplier.toString()||!c||(c=E(c))}f===H&&(h=e.fname+E(e.args.map(function(e){return Pe(e,i)}).join(\",\"))),f===H&&e.fname in M&&(a=Pe(e.args[0]),u=Pe(e.args[1]),e.args[0].isComposite()&&(a=E(a)),e.args[1].isComposite()&&(u=E(u)),h=a+M[e.fname]+u),c&&f!==V&&g(c)&&(c=E(c)),((f===$||f===j)&&(l&&\"1\"!=l||\"-\"===p)||(f===X||f===$||f===j)&&c&&\"1\"!=c||!r&&f===B&&-1==h||e.fname===Z)&&(h=E(h));var w=p+(l=n&&(\"decimal\"===m||\"decimals\"===m&&l)?me(l,n):l);if(l&&g(l)&&(w=E(w)),l&&(w+=\"*\"),c=c<0?E(c):c){if(\"e\"===h&&D.E_TO_EXP)return w+\"exp\"+E(c);c=D.POWER_OPERATOR+c}f=w+(h=f===V&&\"-\"===h.charAt(0)?E(h):h);return(f=e.parens?E(f):f)+c}if(re(e)){for(var y=e.elements.length,w=[],b=0;b<y;b++)w.push(e.elements[b].text(m));return\"[\"+w.join(\",\")+\"]\"}try{return e.toString()}catch(e){return\"\"}}function ke(e){if(g(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,s=Math.floor(i);if(i-s<=2220446049250313e-31&&1<n){if(g(n)&&(-1===o.indexOf(n)&&o.push(n),r.push(n)),g(s)){r.push(s);break}t=s}n++}return r.sort(function(e,t){return e-t})}function R(e){this.symbol=e}function T(e){return this instanceof T?((e=String(void 0===e?0:e)).startsWith(\"-\")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,T.isScientific(e)?this.fromScientific(e):this.convert(e),this):new T(e)}function De(t){if(t instanceof De)return t;if(void 0===t)return this;try{if(ue(t))try{this.num=S(t),this.den=S(1)}catch(e){return De.simple(t)}else{var e=t instanceof k?Be.quickConversion(t):Be.convert(t);this.num=new S(e[0]),this.den=new S(e[1])}}catch(e){return De.simple(t)}}function Fe(e){var t=\"Infinity\"===e;return this instanceof Fe?(e instanceof k&&(e=e.toString()),/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(e)||e instanceof k?(this.group=F,this.value=l,this.multiplier=new De(e)):(this.group=G,m(e),this.value=e,this.multiplier=new De(1),this.imaginary=e===D.IMAGINARY,this.isInfinity=t),this.power=new De(1),this):new Fe(e)}function P(){var C=this,n={},o={names:[],actions:[]};function x(e,t){this.start=e,this.end=t}function L(){this.elements=[]}function A(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===A.OPERATOR){var r,i=E[e];for(r in i)this[r]=i[r]}else t===A.FUNCTION&&(this.precedence=A.MAX_PRECEDENCE,this.leftAssoc=!1)}x.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},x.prototype.text=function(){return Pe(this.start)+\":\"+Pe(this.end)},L.prototype.append=function(e){this.elements.push(e)},L.prototype.getItems=function(){return this.elements},L.prototype.toString=function(){return C.pretty_print(this.elements)},L.create=function(e){var t=new L;return e&&t.append(e),t},A.prototype.toString=function(){return this.value},A.prototype.toString=function(){return this.is_prefix?\"`\"+this.value:this.value},A.OPERATOR=\"OPERATOR\",A.VARIABLE_OR_LITERAL=\"VARIABLE_OR_LITERAL\",A.FUNCTION=\"FUNCTION\",A.UNIT=\"UNIT\",A.KEYWORD=\"KEYWORD\",A.MAX_PRECEDENCE=999,this.classes={Collection:L,Slice:x,Token:A};var b={prec:void 0,cos:function(e,t){var n=C.parse(Math.cos(e)*Math.cosh(t)),t=C.parse(Math.sin(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},sin:function(e,t){var n=C.parse(Math.sin(e)*Math.cosh(t)),t=C.parse(Math.cos(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},tan:function(e,t){var n=C.parse(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),t=C.parse(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t)));return C.add(n,C.multiply(t,Fe.imaginary()))},sec:function(e,t){t=this.removeDen(this.cos(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csc:function(e,t){t=this.removeDen(this.sin(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},cot:function(e,t){t=this.removeDen(this.tan(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},acos:function(e,t){var e=this.fromArray([e,t]),t=C.pow(e.clone(),new Fe(2)),t=C.expand(t),t=C.multiply(O(C.subtract(new Fe(1),t)),Fe.imaginary()),t=R(C.expand(C.add(e.clone(),t)));return C.expand(C.multiply(Fe.imaginary().negate(),t))},asin:function(e,t){return C.subtract(C.parse(\"pi/2\"),this.acos(e,t))},atan:function(e,t){if(e.equals(0)&&(t.equals(1)||t.equals(-1)))return C.parse(`${Fe.infinity()}*${D.IMAGINARY}*${t}`);var e=b.fromArray([e,t]),t=C.expand(C.multiply(Fe.imaginary(),e.clone())),e=R(C.expand(C.subtract(new Fe(1),t.clone()))),t=R(C.expand(C.add(new Fe(1),t.clone())));return C.expand(C.multiply(C.divide(Fe.imaginary(),new Fe(2)),C.subtract(e,t)))},asec:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asin.apply(this,t)},acot:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atan.apply(this,t)},cosh:function(e,t){var n=C.parse(Math.cosh(e)*Math.cos(t)),t=C.parse(Math.sinh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},sinh:function(e,t){var n=C.parse(Math.sinh(e)*Math.cos(t)),t=C.parse(Math.cosh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},tanh:function(e,t){var n=C.parse(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),e=C.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e)));return C.subtract(n,C.multiply(e,Fe.imaginary()))},sech:function(e,t){t=this.removeDen(this.cosh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csch:function(e,t){t=this.removeDen(this.sinh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},coth:function(e,t){t=this.removeDen(this.tanh(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},acosh:function(e,t){var n=this.fromArray([e,t]),e=O(C.add(n.clone(),new Fe(1))),t=O(C.subtract(n.clone(),new Fe(1)));return C.expand(R(C.add(n,C.expand(C.multiply(e,t)))))},asinh:function(e,t){e=this.fromArray([e,t]),t=O(C.add(new Fe(1),C.expand(C.pow(e.clone(),new Fe(2)))));return C.expand(R(C.add(e,t)))},atanh:function(e,t){var e=this.fromArray([e,t]),t=R(C.add(e.clone(),new Fe(1))),e=R(C.subtract(new Fe(1),e));return C.expand(C.divide(C.subtract(t,e),new Fe(2)))},asech:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atanh.apply(this,t)},sqrt:function(e){var t=e.realpart(),n=e.imagpart(),e=Fe.hyp(t,n),t=C.add(t.clone(),e),e=O(C.multiply(new Fe(2),t.clone()));return C.add(C.divide(t.clone(),e.clone()),C.multiply(C.divide(n,e),Fe.imaginary()))},log:function(e,t){var n=R(Fe.hyp(e,t)),e=D.USE_BIG?Fe(k.atan2(t.multiplier.toDecimal(),e.multiplier.toDecimal())):Math.atan2(t,e),e=C.parse(e);return C.add(n,C.multiply(Fe.imaginary(),e))},erf(e,t){return C.symfunction(\"erf\",[e])},removeDen:function(e){var t,n=ae(e)?(t=e[0],e[1]):(t=e.realpart(),e.imagpart()),e=Math.pow(t,2)+Math.pow(n,2);return[C.parse(t/e),C.parse(n/e)]},fromArray:function(e){return C.add(e[0],C.multiply(Fe.imaginary(),e[1]))},evaluate:function(e,t){var n,r,i=e.power.sign();return e.power=e.power.abs(),e.power.greaterThan(1)&&(e=C.expand(e)),r=i<0?(n=(r=this.removeDen(e))[0],r[1]):(n=e.realpart(),e.imagpart()),n.isConstant(\"all\")&&r.isConstant(\"all\")?this[t].call(this,n,r):C.symfunction(t,[e])}},I=this.trig={cos:function(e){if(e.equals(\"pi\")&&e.multiplier.den.equals(2))return new Fe(0);if(D.PARSE2NUMBER){if(e.equals(new Fe(D.PI/2)))return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.cos(e.multiplier.toDecimal())):new Fe(Math.cos(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cos\")}if(e.equals(0))return new Fe(1);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();return e.multiplier=i,e.isPi()&&e.isLinear()&&(ue(i)?t=new Fe(ge(i)?1:-1):(Number(i.num),2===(i=Number(i.den))?t=new Fe(0):3===i?(t=C.parse(\"1/2\"),n=!0):4===i?(t=C.parse(\"1/sqrt(2)\"),n=!0):6===i?(t=C.parse(\"sqrt(3)/2\"),n=!0):t=C.symfunction(\"cos\",[e]))),!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"cos\",[e])},sin:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return e%Math.PI==0?new Fe(0):D.USE_BIG?new Fe(k.sin(e.multiplier.toDecimal())):new Fe(Math.sin(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sin\")}if(e.equals(0))return new Fe(0);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();return e.multiplier=s,e.equals(\"pi\")?t=new Fe(0):e.isPi()&&e.isLinear()&&(ue(s)?t=new Fe(0):(s.num,2==(s=s.den)?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"sqrt(3)/2\"),n=!0):4==s?(t=C.parse(\"1/sqrt(2)\"),n=!0):6==s?(t=C.parse(\"1/2\"),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"sin\",[e])))),t=t||C.multiply(new Fe(i),C.symfunction(\"sin\",[e])),!n||3!==r&&4!==r||t.negate(),t},tan:function(e){if(D.PARSE2NUMBER){if(e%Math.PI==0&&e.isLinear())return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.tan(e.multiplier.toDecimal())):new Fe(Math.tan(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tan\")}var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(0);else{i.num;i=i.den;if(2==i)throw new Ae(\"tan is undefined for \"+e.toString());3==i?(t=C.parse(\"sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):t=C.symfunction(\"tan\",[e])}return t=t||C.symfunction(\"tan\",[e]),!n||2!==r&&4!==r||t.negate(),t},sec:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.cos(e.multiplier.toDecimal()))):new Fe(Te.sec(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sec\"):C.parse(ce(\"1/cos({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(ge(i)?1:-1);else{i.num;i=i.den;if(2==i)throw new Ae(\"sec is undefined for \"+e.toString());3==i?(t=new Fe(2),n=!0):4==i?(t=C.parse(\"sqrt(2)\"),n=!0):6==i?(t=C.parse(\"2/sqrt(3)\"),n=!0):t=C.symfunction(\"sec\",[e])}return!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"sec\",[e])},csc:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.sin(e.multiplier.toDecimal()))):new Fe(Te.csc(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csc\"):C.parse(ce(\"1/sin({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();if(e.multiplier=s,e.isPi()&&e.isLinear()){if(ue(s))throw new Ae(\"csc is undefined for \"+e.toString());s.num;s=s.den;2==s?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"2/sqrt(3)\"),n=!0):4==s?(t=C.parse(\"sqrt(2)\"),n=!0):6==s?(t=new Fe(2),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"csc\",[e]))}return t=t||C.multiply(new Fe(i),C.symfunction(\"csc\",[e])),!n||3!==r&&4!==r||t.negate(),t},cot:function(e){if(D.PARSE2NUMBER)return e%(Math.PI/2)==0?new Fe(0):e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.tan(e.multiplier.toDecimal()))):new Fe(Te.cot(e.valueOf())):e.isImaginary()?b.evaluate(e,\"cot\"):C.parse(ce(\"1/tan({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ue(i))throw new Ae(\"cot is undefined for \"+e.toString());i.num;i=i.den;2==i?t=new Fe(0):3==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"sqrt(3)\"),n=!0):t=C.symfunction(\"cot\",[e])}return t=t||C.symfunction(\"cot\",[e]),!n||2!==r&&4!==r||t.negate(),t},acos:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=e.toString();return T(Se(`pi/2-asin(${t})`))}return D.USE_BIG?new Fe(k.acos(e.multiplier.toDecimal())):new Fe(Math.acos(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"acos\")}return C.symfunction(\"acos\",arguments)},asin:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=D.IMAGINARY,n=e.multiplier.toDecimal();return T(Se(`${t}*log(sqrt(1-${n}^2)-${t}*${n})`))}return D.USE_BIG?new Fe(k.asin(e.multiplier.toDecimal())):new Fe(Math.asin(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"asin\")}return C.symfunction(\"asin\",arguments)},atan:function(e){var t;if(e.equals(0))t=new Fe(0);else{if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(k.atan(e.multiplier.toDecimal())):new Fe(Math.atan(e.valueOf())):e.isImaginary()?b.evaluate(e,\"atan\"):C.symfunction(\"atan\",arguments);t=e.equals(-1)?C.parse(\"-pi/4\"):C.symfunction(\"atan\",arguments)}return t},asec:function(e){if(D.PARSE2NUMBER){if(e.equals(0))throw new Ce(\"Input is out of the domain of sec!\");if(e.isConstant())return I.acos(e.invert());if(e.isImaginary())return b.evaluate(e,\"asec\")}return C.symfunction(\"asec\",arguments)},acsc:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return I.asin(e.invert());if(e.isImaginary())return b.evaluate(e,\"acsc\")}return C.symfunction(\"acsc\",arguments)},acot:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new C.add(C.parse(\"pi/2\"),I.atan(e).negate());if(e.isImaginary())return b.evaluate(e,\"acot\")}return C.symfunction(\"acot\",arguments)},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new Ae(\"atan2 is undefined for 0, 0\");return D.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",arguments)}},e=this.trigh={cosh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.cosh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cosh\")}return C.symfunction(\"cosh\",arguments)},sinh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.sinh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sinh\")}return C.symfunction(\"sinh\",arguments)},tanh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.tanh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tanh\")}return C.symfunction(\"tanh\",arguments)},sech:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.sech(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sech\"):C.parse(ce(\"1/cosh({0})\",e)):C.symfunction(\"sech\",arguments)},csch:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.csch(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csch\"):C.parse(ce(\"1/sinh({0})\",e)):C.symfunction(\"csch\",arguments)},coth:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.coth(e.valueOf())):e.isImaginary()?b.evaluate(e,\"coth\"):C.parse(ce(\"1/tanh({0})\",e)):C.symfunction(\"coth\",arguments)},acosh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acosh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2-1))\",e.toString()))):C.symfunction(\"acosh\",arguments);return e},asinh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asinh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2+1))\",e.toString()))):C.symfunction(\"asinh\",arguments);return e},atanh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"atanh\"):D.PARSE2NUMBER?Se(C.parse(ce(\"(1/2)*\"+D.LOG+\"((1+({0}))/(1-({0})))\",e.toString()))):C.symfunction(\"atanh\",arguments);return e},asech:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asech\"):D.PARSE2NUMBER?Se(R(C.add(e.clone().invert(),O(C.subtract(C.pow(e,new Fe(-2)),new Fe(1)))))):C.symfunction(\"asech\",arguments);return e},acsch:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acsch\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"((1+sqrt(1+({0})^2))/({0}))\",e.toString()))):C.symfunction(\"acsch\",arguments);return e},acoth:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acoth\"):D.PARSE2NUMBER?e.equals(1)?Fe.infinity():Se(C.divide(R(C.divide(C.add(e.clone(),new Fe(1)),C.subtract(e.clone(),new Fe(1)))),new Fe(2))):C.symfunction(\"acoth\",arguments);return e}},E={\"\\\\\":{precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},\"!!\":{precedence:7,operator:\"!!\",action:\"dfactorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return C.symfunction(D.DOUBLEFACTORIAL,[e])}},\"!\":{precedence:7,operator:\"!\",action:\"factorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:u},\"^\":{precedence:6,operator:\"^\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"**\":{precedence:6,operator:\"**\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"%\":{precedence:4,operator:\"%\",action:\"percent\",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:\"mod\",overloadLeftAssoc:!1,operation:function(e){return C.divide(e,new Fe(100))}},\"*\":{precedence:4,operator:\"*\",action:\"multiply\",prefix:!1,postfix:!1,leftAssoc:!1},\"/\":{precedence:4,operator:\"/\",action:\"divide\",prefix:!1,postfix:!1,leftAssoc:!1},\"+\":{precedence:3,operator:\"+\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:\"plus\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},\"-\":{precedence:3,operator:\"-\",action:\"subtract\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},\"=\":{precedence:2,operator:\"=\",action:\"equals\",prefix:!1,postfix:!1,leftAssoc:!1},\"==\":{precedence:1,operator:\"==\",action:\"eq\",prefix:!1,postfix:!1,leftAssoc:!1},\"<\":{precedence:1,operator:\"<\",action:\"lt\",prefix:!1,postfix:!1,leftAssoc:!1},\"<=\":{precedence:1,operator:\"<=\",action:\"lte\",prefix:!1,postfix:!1,leftAssoc:!1},\">\":{precedence:1,operator:\">\",action:\"gt\",prefix:!1,postfix:!1,leftAssoc:!1},\"=>\":{precedence:1,operator:\"=>\",action:\"gte\",prefix:!1,postfix:!1,leftAssoc:!1},\",\":{precedence:0,operator:\",\",action:\"comma\",prefix:!1,postfix:!1,leftAssoc:!1},\":\":{precedence:0,operator:\",\",action:\"assign\",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:\"slice\"},\":=\":{precedence:0,operator:\",\",action:\"function_assign\",prefix:!1,postfix:!1,leftAssoc:!0}},q={\"(\":{type:\"round\",id:1,is_open:!0,is_close:!1},\")\":{type:\"round\",id:2,is_open:!1,is_close:!0},\"[\":{type:\"square\",id:3,is_open:!0,is_close:!1,maps_to:\"vector\"},\"]\":{type:\"square\",id:4,is_open:!1,is_close:!0},\"{\":{type:\"curly\",id:5,is_open:!0,is_close:!1,maps_to:\"Set\"},\"}\":{type:\"curly\",id:6,is_open:!1,is_close:!0}},U=this.functions={cos:[I.cos,1],sin:[I.sin,1],tan:[I.tan,1],sec:[I.sec,1],csc:[I.csc,1],cot:[I.cot,1],acos:[I.acos,1],asin:[I.asin,1],atan:[I.atan,1],arccos:[I.acos,1],arcsin:[I.asin,1],arctan:[I.atan,1],asec:[I.asec,1],acsc:[I.acsc,1],acot:[I.acot,1],atan2:[I.atan2,2],acoth:[e.acoth,1],asech:[e.asech,1],acsch:[e.acsch,1],sinh:[e.sinh,1],cosh:[e.cosh,1],tanh:[e.tanh,1],asinh:[e.asinh,1],sech:[e.sech,1],csch:[e.csch,1],coth:[e.coth,1],acosh:[e.acosh,1],atanh:[e.atanh,1],log10:[,1],exp:[function(e){if(e.fname===D.LOG&&e.isLinear())return C.pow(e.args[0],Fe.create(e.multiplier));return C.parse(ce(\"e^({0})\",e))},1],radians:[function(e){return C.parse(ce(\"({0})*pi/180\",e))},1],degrees:[function(e){return C.parse(ce(\"({0})*180/pi\",e))},1],min:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.min.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"min\",e):C.symfunction(\"min\",e)},-1],max:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.max.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"max\",e):C.symfunction(\"max\",e)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(e){if(D.PARSE2NUMBER)return e.isConstant()?new Fe(Te.sinc(e)):C.parse(ce(\"sin({0})/({0})\",e));return C.symfunction(\"sinc\",[e])},1],tri:[,1],sign:[function(e){return e.isConstant(!0)?new Fe(Math.sign(Se(e))):C.symfunction(\"sign\",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[u,1],factorial:[u,1],continued_fraction:[function(e,t){e=Se(e);if(e.isConstant()){e=Te.continuedFraction(e,t),t=Ve.fromArray(e.fractions.map(function(e){return new Fe(e)}));return Ve.fromArray([new Fe(e.sign),new Fe(e.whole),t])}return C.symfunction(\"continued_fraction\",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[m,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[t,2],pfactor:[N,1],vector:[function(){return new Ve([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return je.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(e){if(D.PARSE2NUMBER)return e;return C.symfunction(\"parens\",[e])},-1],sqrt:[O,1],cbrt:[i,1],nthroot:[s,2],log:[R,[1,2]],expand:[function(e,t){return T(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[_,1],invert:[function(e){if(ie(e))return e.invert();K(\"invert expects a matrix\")},1],determinant:[function(e){if(ie(e))return e.determinant();return e},1],size:[function(e){var t;ie(e)?t=[new Fe(e.cols()),new Fe(e.rows())]:re(e)||se(e)?t=new Fe(e.elements.length):K(\"size expects a matrix or a vector\");return t},1],transpose:[function(e){if(ie(e))return e.transpose();K(\"function transpose expects a matrix\")},1],dot:[function(e,t){if(re(e)&&re(t))return e.dot(t);K(\"function dot expects 2 vectors\")},2],cross:[function(e,t){if(re(e)&&re(t))return e.cross(t);K(\"function cross expects 2 vectors\")},2],vecget:[function(e,t){return t.isConstant()&&ue(t)?e.elements[t]:C.symfunction(\"vecget\",arguments)},2],vecset:[function(e,t,n){return t.isConstant?(e.elements[t]=n,e):C.symfunction(\"vecset\",arguments)},3],vectrim:[function(e,n){return n=void 0===n?1e-14:n,e=e.clone(),n=Number(n),e.elements.sort(function(e,t){return t.group-e.group}),e.elements=ve(e.elements,function(e,t){return Number(C.subtract(Se(e),Se(t)).abs())<=n}),e},[1,2]],matget:[function(e,t,n){return t.isConstant()&&n.isConstant()?e.elements[t][n]:C.symfunction(\"matget\",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(e,t){return t.isConstant()?new He(e.elements[t]):C.symfunction(\"matgetrow\",arguments)},2],matsetrow:[function(e,t,n){if(!t.isConstant())return C.symfunction(\"matsetrow\",arguments);if(e.elements[t].length!==n.elements.length)throw new _e(\"Matrix row must match row dimensions!\");e=e.clone();return e.elements[t]=n.clone().elements,e},3],matgetcol:[function(e,r){if(!r.isConstant())return C.symfunction(\"matgetcol\",arguments);r=Number(r);var i=He.fromArray([]);return e.each(function(e,t,n){n===r&&i.elements.push([e.clone()])}),i},2],matsetcol:[function(n,r,e){if(!r.isConstant())return C.symfunction(\"matsetcol\",arguments);if(r=Number(r),n.rows()!==e.elements.length)throw new _e(\"Matrix columns must match number of columns!\");return e.each(function(e,t){n.set(t-1,r,e.elements[0].clone())}),n},3],rationalize:[r,1],IF:[function(e,t,n){\"boolean\"!=typeof e&&oe(e)&&(e=!!Number(e));return e?t:n},3],is_in:[function(e,t){if(ie(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Fe(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Fe(1);return new Fe(0)},2],realpart:[l,1],imagpart:[c,1],conjugate:[p,1],arg:[f,1],polarform:[function(e){var t;return t=Fe.toPolarFormArray(e),e=t[1],t=t[0],e=C.parse(ce(\"e^({0}*({1}))\",D.IMAGINARY,e)),C.multiply(t,e)},1],rectform:[function(e){var t,n,r,i,s,o=e.clone();try{return t=he(e,\"e\",!0),n=C.divide(t.x.power,Fe.imaginary()),r=Se(I.tan(n)),C.pow(t.a,new Fe(2)),i=r.getDenom(!0),s=r.getNum(),Fe.hyp(s,i).equals(t.a)?C.add(i,C.multiply(Fe.imaginary(),s)):o}catch(e){return o}},1],sort:[function(e,n){n=n?n.toString():\"asc\";var r=function(e){return e.group===F?e.multiplier:e.group===H?\"\"===e.fname?r(e.args[0]):e.fname:e.group===G?e.power:e.value};return new Ve((re(e)?e.elements:e.collectSymbols()).sort(function(e,t){e=r(e),t=r(t);return\"desc\"===n?t-e:e-t}))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Fe(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Fe(Number(e.is_subset(t)))},2],print:[function(){be(arguments).map(function(e){console.log(e.toString())})},-1]};this.error=K;this.override=function(e,t){n[e]||(n[e]=[]),n[e].push(this[e]),this[e]=t},this.restore=function(e){this[e]&&(this[e]=n[e].pop())},this.extend=function(e,n,r){var i,s=this;\"function\"==typeof this[e]&&\"function\"==typeof n&&(i=this[e],this[e]=function(e,t){return ne(e)&&ne(t)&&!r?i.call(s,e,t):n.call(s,e,t,i)})},this.symfunction=function(e,t){var n=new Fe(e);return n.group=H,\"object\"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===Z?\"\":e,n.updateHash(),n},this.callfunction=function(e,t,n){var r=U[e];r||K(\"Nerdamer currently does not support the function \"+e);var i,s=r[1]||n,o=r[0];t instanceof Array||(t=void 0!==t?[t]:[]),-1!==s&&(i=(a=ae(s))?s[0]:s,n=a?s[1]:s,s=e+\" requires a {0} of {1} arguments. {2} provided!\",(a=t.length)<i&&K(ce(s,\"minimum\",i,a)),n<a&&K(ce(s,\"maximum\",n,a)));var a=Me(t);return o?o.apply(r[2],t):(o=function(e){for(var t=D.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}K(\"The function \"+e+\" is undefined!\")}(e),D.PARSE2NUMBER&&a?d(o.apply(o,t)):C.symfunction(e,t))},this.operator_filter_regex=(e=\"^\\\\\"+Object.keys(E).filter(function(e){if(1===e.length)return e}).join(\"\\\\\"),new RegExp(\"([\"+e+\"])\\\\s+([\"+e+\"])\")),this.setOperator=function(e,t,n){var r=e.operator;if(E[r]=e,t&&(this[e.action]=t),C[r]=e.operation,e.action||e.prefix||e.postif||(e.action=r),\"over\"===n||\"under\"===n){var i,s=e.precedence;for(i in E){var o=E[i];(\"over\"===n?o.precedence>=s:o.precedence>s)&&o.precedence++}}},this.getOperator=function(e){return E[e]},this.aliasOperator=function(e,t){var n,r={},i=E[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return E},this.getBrackets=function(){return q};function a(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new Fe(D.E),PI:new Fe(D.PI)}},this.pretty_print=function(e){if(Array.isArray(e)){var t=e.map(e=>C.pretty_print(e)).join(\", \");return\"vector\"===e.type?\"vector<\"+t+\">\":\"(\"+t+\")\"}return e.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(D.callPeekers)for(var t=this.peekers[e],n=be(arguments).slice(1).map(le),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(n){for(var e in n=(n=String(n)).trim().replace(/\\s+/g,\" \"),q){var t=new RegExp(q[e].is_close?\"\\\\s+\\\\\"+e:\"\\\\\"+e+\"\\\\s+\",\"g\");n=n.replace(t,e)}for(var u=0,r=n.length,i=0,s=[],o=[s],a=o[0],l=0,c=[],p=!1,f=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,o.push(n),a.push(n),a=n,l++},h=function(){o.pop(),a=o[--l]},m=function(e,t){(t=void 0===t?n.substring(i,e):t)in C.units?a.push(new A(t,A.UNIT,i)):\"\"!==t&&a.push(new A(t,A.VARIABLE_OR_LITERAL,i))},g=function(e){a.push(new A(e,A.FUNCTION,i))},d=function(e){i=e+1};u<r;u++){var v=n.charAt(u);if(v in E){m(u);var w=a[0]&&te(a[0]);p&&i<u&&\",\"!==v&&!(w&&\"*\"===v)&&(p=!1,h()),d(u+1);var y=function(e){for(var t=(e=void 0!==e?e:u)+1;n.charAt(t++)in E;);return n.substring(e,t-1)}(u),u=(i=i+y.length-2)-1;a.push.apply(a,function(e){for(var t=u-e.length,n=[],r=e.charAt(0),i=1,s=e.length;i<s;i++)var o=e.charAt(i),a=r+o,r=(a in E?a:(n.push(new A(r,A.OPERATOR,t+i)),o));return n.push(new A(r,A.OPERATOR,t+i)),n}(y))}else if(v in q){var b,S=q[v];if(S.is_open)c.push([S,i]),(b=n.substring(i,u))in U?g(b):\"\"!==b&&a.push(new A(b,A.VARIABLE_OR_LITERAL,i)),f(S.maps_to,u);else if(S.is_close){var M=c.pop();if(!M)throw new Le(\"Missing open bracket for bracket at: \"+(u+1));if(M[0].id!==S.id-1)throw new Le(\"Parity error\");m(u),h()}d(u)}else\" \"===v&&(M=n.substring(i,u),S=n.charAt(u+1),p?(M in E?a.push(new A(M,A.OPERATOR,u)):(m(void 0,M),h(),((v=S in E)&&\"-\"===E[S].value||!v)&&a.push(new A(\"*\",A.OPERATOR,u))),p=!1):(b=n.substring(i,u))in U?(p=!0,g(b),f()):b in E?a.push(new A(b,A.OPERATOR,u)):(m(void 0,b),S=n.charAt(u+1),\"\"===M||\"\"===S||M in E||S in E||a.push(new A(\"*\",A.OPERATOR,u))),d(u))}if(c.length){var N=c.pop();throw new Le(\"Missing closed bracket for bracket at \"+(N[1]+1))}return m(u),s},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],o=function(e,t){for(;e.length;)t.push(e.pop())},a=0;a<n;a++){var u=e[a];if(u.type!==A.OPERATOR)break;if(!u.prefix)throw new Ie(\"Not a prefix operator\");u.is_prefix=!0,i.push(u)}for(;a<n;a++){var l=e[a];if(l.type===A.OPERATOR){var c=l;for(c.overloaded&&(h=e[a+1])&&h.type===A.VARIABLE_OR_LITERAL&&(c.postfix=!1,c.action=c.overloadAction,c.leftAssoc=c.overloadLeftAssoc);i.length;){var p=i[i.length-1];if(!(p.precedence>c.precedence||!c.leftAssoc&&p.precedence===c.precedence))break;r.push(i.pop())}if((\"vector\"===t||\"set\"===t)&&\"vectorFn\"in c&&(c.action=c.vectorFn),c.postfix){var f=e[a-1];if(!f)throw new Ie(\"Unexpected prefix operator '\"+l.value+\"'! at \"+l.column);if(f.type===A.OPERATOR&&!f.postfix)throw new Ie(\"Unexpected prefix operator '\"+f.value+\"'! at \"+f.column)}else do{var h,m=!!(h=e[a+1])&&h.type===A.OPERATOR;if(m){if(!h.prefix)throw new Ie(\"A prefix operator was expected at \"+h.column);h.is_prefix=!0,s.push(h),a++}}while(m);for((c.is_prefix?s:i).push(c);s.length&&(c.leftAssoc||!c.leftAssoc&&s[s.length-1].precedence>=c.precedence);)i.push(s.pop())}else l.type===A.VARIABLE_OR_LITERAL?(0===r.length&&o(s,i),r.push(l),(f=i[i.length-1])&&f.leftAssoc||o(s,r)):l.type===A.FUNCTION?i.push(l):l.type===A.UNIT&&r.push(l);Array.isArray(l)&&(r.push(this.toRPN(l)),l.type&&r.push(new A(l.type,A.FUNCTION,l.column)))}return o(i,r),o(s,r),r},this.parseRPN=function(e,t){try{for(var n in t=t||{})t[n]=C.parse(t[n],{});D.PARSE2NUMBER&&(\"e\"in t||(t.e=new Fe(D.E)),\"pi\"in t||(t.pi=new Fe(D.PI)));for(var r=[],i=0,s=e.length;i<s;i++){var o=e[i];if(o=Array.isArray(o)?this.parseRPN(o,t):o)if(o.type===A.OPERATOR)if(o.is_prefix||o.postfix)r.push(o.operation(r.pop()));else{var a=r.pop(),u=r.pop();if(void 0===u)throw new Ie(o+\" is not a valid postfix operator at \"+o.column);var l=\"comma\"===o.action;u instanceof je&&!l&&(u=Ve.fromSet(u)),a instanceof je&&!l&&(a=Ve.fromSet(a)),this.callPeekers(\"pre_operator\",u,a,o);var c=C[o.action](u,a);this.callPeekers(\"post_operator\",c,u,a,o),r.push(c)}else if(o.type===A.FUNCTION){var p=r.pop(),f=p.parent;p instanceof L||(p=L.create(p));var h=o.value,m=p.getItems();this.callPeekers(\"pre_function\",h,m);var g=C.callfunction(h,m);this.callPeekers(\"post_function\",g,h,m);var d=r[r.length-1],v=e[i+1];if(!(v&&v.type===A.OPERATOR&&\",\"===v.value)&&g instanceof Ve&&d&&d.elements&&!(d instanceof L)){var w=r.pop(),y=g.elements[0];if(y.isConstant())if(y instanceof x)r.push(Ve.fromArray(w.elements.slice(y.start,y.end)));else{var b=Number(y),S=w.elements.length;if((b=b<0?S+b:b)<0||S<=b)throw new Ue(\"Index out of range \"+(o.column+1));var M=w.elements[b];w.getter=b,M.parent=w,r.push(M)}else w.getter=y,r.push(w),r.push(g)}else f&&(g.parent=f),r.push(g)}else{var N,E=o.value;E in D.ALIASES?o=C.parse(D.ALIASES[o]):o.type===A.VARIABLE_OR_LITERAL?o=new Fe(E):o.type===A.UNIT&&((o=new Fe(E)).isUnit=!0),E in C.CONSTANTS?(N=o,o=new Fe(C.CONSTANTS[E])):E in t&&E!==t[E].toString()?(N=o,o=t[E].clone()):E in J&&(N=o,o=J[E].clone()),N&&(o.subbed=N),r.push(o)}}var q=r[0];if(-1!==[\"undefined\",\"string\",\"number\"].indexOf(typeof q))throw new Re(\"Unexpected token!\");return q}catch(t){throw[Ce].forEach(function(e){if(t instanceof e)throw new e(t.message+\": \"+o.column)}),new xe(t.message+\": \"+o.column)}},a.prototype.toString=function(){var e=this.left?this.left.toString()+\"---\":\"\",t=this.right?\"---\"+this.right.toString():\"\";return e+\"(\"+this.value+\")\"+t},a.prototype.toHTML=function(e,t){e=e||0,t=void 0===t?4:t;function n(e){return\" \".repeat(t*e)}var r=\"\",i=this.left?n(e+1)+\"<li>\\n\"+this.left.toHTML(e+2,t)+n(e+1)+\"</li> \\n\":\"\",s=this.right?n(e+1)+\"<li>\\n\"+this.right.toHTML(e+2,t)+n(e+1)+\"</li>\\n\":\"\",r=n(e)+'<div class=\"'+this.type.toLowerCase()+'\"><span>'+this.value+\"</span></div>\"+n(e)+\"\\n\";return(i||s)&&(r+=n(e)+\"<ul>\\n\"+i+s+n(e)+\"</ul>\\n\"),r+=\"\"},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===A.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?\"left\":\"right\",i=t.pop(),(r=new a(r))[s]=i):((r=new a(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===A.FUNCTION){r=new a(r);var i,s=t.pop();if(r.right=s,\"object\"===r.value)if(i=t[t.length-1]){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new a(r))}return t[0]},this.parse=function(e,t){e=function(e){e=String(e);for(var t=0;t<o.actions.length;t++)e=o.actions[t].call(this,e);for(e=e.replace(/\\s+/g,\" \"),e=(e=/e/gi.test(e)?e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi,function(e){return y(e)}):e).replace(D.IMPLIED_MULTIPLICATION_REGEX,function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i=\"\",s=\"*\";return t+(s=(i=!e.charAt(r).match(/[\\+\\-\\/\\*]/)?e.charAt(r-1):i).match(/[a-z]/i)?\"\":s)+n}).replace(/([a-z0-9_]+)/gi,function(e,t){return!(!1!==D.USE_MULTICHARACTER_VARS||t in U)&&isNaN(t)?t.split(\"\").join(\"*\"):t}).replace(/\\)\\(/g,\")*(\")||\"0\";;)if(e===(e=e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi,function(e,t,n,r,i){r=t||r,i=n||i;return r in U?r+i:r+\"*\"+i})))break;return e}(e),t=t||{};e=this.tokenize(e),e=this.toRPN(e);return this.parseRPN(e,t)},this.toObject=function(e){var a=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i,s=e[n],o=s.value;s.type===A.VARIABLE_OR_LITERAL?t.push(new Fe(o)):s.type===A.FUNCTION?(n++,(i=C.symfunction(o,a(e[n]))).isConversion=!0,t.push(i)):s.type===A.OPERATOR?t.push(o):t.push(a(s))}return t};return a(C.tokenize(e))};function S(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)\",\"===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function M(e){return e.replace(/^\\\\left\\((.+)\\\\right\\)$/g,function(e,t){return t||e})}function _(e){if(e.isInfinity)return Fe.infinity();if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),n=e.imagpart();if(t.isConstant()&&n.isConstant())return O(C.add(C.pow(t,new Fe(2)),C.pow(n,new Fe(2))))}else if(oe(e)||ge(e.power))return e;var r;e.isComposite()&&(r=[],e.each(function(e){r.push(e.multiplier)}),Te.QGCD.apply(null,r).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new De(-1)),e.distributeMultiplier()));n=C.parse(e.multiplier);return e.toUnitMultiplier(),C.multiply(n,C.symfunction(Q,[e]))}function u(e){if(re(e)){var n=new Ve;return e.each(function(e,t){n.set(t-1,u(e))}),n}if(ie(e)){var r=new He;return e.each(function(e,t,n){r.set(t,n,u(e))}),r}if(D.PARSE2NUMBER&&e.isConstant())return d(ue(e)?Te.bigfactorial(e):Te.gamma(e.multiplier.add(new De(1)).toDecimal()));if(e.isConstant()&&e.getDenom().equals(2)){var t,i=e.getNum(),s=e.multiplier.isNegative()?(s=C.subtract(i.negate(),new Fe(1)).multiplier.divide(new De(2)),t=C.pow(new Fe(-4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s)),Te.bigfactorial(new De(2).multiply(s))):(s=C.add(i,new Fe(1)).multiplier.divide(new De(2)),t=Te.bigfactorial(new De(2).multiply(s)),C.pow(new Fe(4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s))),s=t.divide(s);return C.multiply(C.parse(\"sqrt(pi)\"),new Fe(s))}return C.symfunction(Y,[e])}function t(e,t){if(e.isConstant()&&t.isConstant()){var n=new Fe(1);return n.multiplier=n.multiplier.multiply(e.multiplier.mod(t.multiplier)),n}n=C.divide(e.clone(),t.clone());return ue(n)?new Fe(0):C.symfunction(\"mod\",[e,t])}function r(e){if(e.isComposite()){var t,n,r,i,s=new Fe(0);return e.each(function(e){r=e.getNum(),i=e.getDenom(),n=s.getNum(),t=s.getDenom(),n=C.multiply(i,n),r=C.multiply(r,t),r=C.expand(C.add(n,r)),i=C.multiply(t,i),s=C.divide(r,i)},!0),s}return e}function O(e){if((e=!ne(e)?C.parse(e):e).group===V)return C.symfunction(z,[e]);var t=(e=\"\"===e.fname&&e.power.equals(1)?e.args[0]:e).multiplier.sign()<0;if(D.PARSE2NUMBER){if(e.isConstant()&&!t)return new Fe(k.sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return b.sqrt(e);if(e.group===G)return C.symfunction(\"sqrt\",[e])}var n,r=e.isConstant();if(e.group===X&&e.isLinear()){var i=O(Fe(e.multiplier));for(o in e.symbols){var s=e.symbols[o];i=C.multiply(i,O(s))}l=i}else if(e.fname===z){var o=e.args[0],a=e.multiplier;o.setPower(e.power.multiply(new De(.25))),l=o,a.equals(1)||(l=C.multiply(O(C.parse(a)),l))}else if(e.power.isInteger())if(e.multiplier<0&&e.group===G)var u=C.parse(e.multiplier).negate(),a=C.parse(e).toUnitMultiplier().negate(),l=C.multiply(C.symfunction(D.SQRT,[a]),O(u));else{u=e.power.sign();e.power=e.power.abs(),r&&e.multiplier.lessThan(0)&&(n=Fe.imaginary(),e.multiplier=e.multiplier.abs());var c=e.multiplier.toDecimal(),r=Math.abs(c),r=Math.sqrt(r);if(ue(r))i=new Fe(r);else if(ue(c)){var p=Te.ifactor(c),f=1;for(s in p){var h,m=(g=p[s])-g%2;m&&(h=Math.pow(s,m),f*=Math.pow(s,m/2),c/=h)}i=C.multiply(C.symfunction(z,[new Fe(c)]),new Fe(f))}else{for(var g,d=[new Fe(e.multiplier.num),new Fe(e.multiplier.den)],v=[new Fe(1),new Fe(1)],w=[new Fe(1),new Fe(1)],y=0;y<2;y++)N(g=d[y]).each(function(e){var t=(e=Fe.unwrapPARENS(e)).clone().toLinear(),n=Number(e.power),e=n%2;v[y]=C.multiply(v[y],C.pow(t,new Fe((n-e)/2))),w[y]=C.multiply(w[y],O(C.pow(t,new Fe(e))))});i=C.divide(C.multiply(v[0],w[0]),C.multiply(v[1],w[1]))}l=(e=e.toUnitMultiplier(!0)).isOne()?e:ge(e.power.toString())?C.pow(e.clone(),new Fe(.5)):C.symfunction(z,[e]),u<0&&l.power.negate(),i&&(l=C.multiply(i,l)),n&&(l=C.multiply(n,l))}else e.setPower(e.power.multiply(new De(.5))),l=e;return t&&D.PARSE2NUMBER?C.parse(l):l}function i(e){if(e.isConstant(!0))return s(e,new Fe(3));var t,n=e.power/3,r=C.pow(C.parse(e.multiplier),new Fe(1/3)),e=e.toUnitMultiplier();return ue(n)?t=C.pow(e.toLinear(),C.parse(n)):e.group===X?(t=new Fe(1),e.each(function(e){t=C.multiply(t,i(e))})):t=C.symfunction(\"cbrt\",[e]),C.multiply(r,t)}function s(e,t,n,r){if((t=Se(C.parse(t))).equals(0))throw new Ae(\"Unable to calculate nthroots of zero\");if(e<0&&ge(t))throw new Error(\"Cannot calculate nthroot of negative number for even powers\");if(!e.isConstant(!0))return C.symfunction(\"nthroot\",arguments);void 0===r&&(r=!0),n=n||25;var i=(e=e.group!==F?Se(e):e).sign();if(i<0&&(e=_(e)),ue(e)&&t.isConstant()){var s,t=e<0x10000000000000000?De.create(Math.pow(e,1/t)):Te.nthroot(e,t);return r&&(s=new Fe(t)),s=new Fe(t.toDecimal(n)),C.multiply(new Fe(i),s)}}function N(e){if(e.greaterThan(9999999999998891e26)||e.equals(-1))return e;if(e.equals(Math.PI))return new Fe(Math.PI);if((e=Se(e.clone())).isConstant()){var t=new Fe(1),n=e.toString();if(ue(n)){var r,i=Te.ifactor(n);for(r in i)var s=i[r],t=C.multiply(t,C.symfunction(\"parens\",[new Fe(r).setPower(new De(s))]))}else{n=N(new Fe(e.multiplier.num)),e=N(new Fe(e.multiplier.den));t=C.multiply(C.symfunction(\"parens\",[n]),C.symfunction(\"parens\",[e]).invert())}}else t=C.symfunction(\"pfactor\",arguments);return t}function l(e){return e.realpart()}function c(e){return e.imagpart()}function p(e){var t=e.realpart(),e=e.imagpart();return C.add(t,C.multiply(e.negate(),Fe.imaginary()))}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?e.equals(0)&&t.equals(-1)?C.parse(\"pi\"):e.equals(1)&&t.equals(0)?C.parse(\"pi/2\"):e.equals(1)&&t.equals(1)?C.parse(\"pi/4\"):new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function h(e,t){var n,r;for(t.map(function(e){e.numVal=Se(e).multiplier});;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],(\"min\"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function R(e,t){if(e.equals(1))return new Fe(0);var n,r,i;if(e.fname===z&&e.multiplier.equals(1))return n=C.divide(R(e.args[0]),new Fe(2)),e.power.sign()<0&&n.negate(),n;if(e.equals(0))throw new Ae(D.LOG+\"(0) is undefined!\");return e.isImaginary()?b.evaluate(e,D.LOG):(e.isConstant()&&void 0!==t&&t.isConstant()?n=new Fe(Math.log(e)/Math.log(t)):e.group===V&&e.power.multiplier.lessThan(0)||\"-1\"===e.power.toString()?(e.power.negate(),n=R(e).negate()):\"e\"===e.value&&e.multiplier.equals(1)?(t=e.power,n=ne(t)?t:new Fe(t)):e.group===H&&\"exp\"===e.fname?(i=e.args[0],n=e.multiplier.equals(1)?C.multiply(i,new Fe(e.power)):C.symfunction(D.LOG,[e])):D.PARSE2NUMBER&&oe(e)?((e=C.parse(e)).multiplier.lessThan(0)&&(e.negate(),r=C.multiply(new Fe(Math.PI),new Fe(\"i\"))),n=new Fe(Math.log(e.multiplier.toDecimal())),r&&(n=C.add(n,r))):(e.power.equals(1)||e.contains(\"e\")||(i=e.group===V?e.power:new Fe(e.power),e.toLinear()),n=1<arguments.length&&w(arguments)?new Fe(1):C.symfunction(D.LOG,arguments),i&&(n=C.multiply(i,n))),n)}function m(e,t){var n=t&&t.isConstant()||void 0===t;if(e.isConstant()&&n){var r,n=e;return t&&t.lessThan(0)&&(t=_(t),n=(r=Number(e).toExponential().toString().split(\"e\"))[0],r=r[1]),t=new Fe(me(n,Number(t||0))),C.multiply(t,C.pow(new Fe(10),new Fe(r||0)))}return C.symfunction(\"round\",arguments)}function g(e){e%=2;return 0<=(e=e<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function d(t){if(!isFinite(t)){var e=Math.sign(t),n=new Fe(String(Math.abs(t)));return n.multiplier=n.multiplier.multiply(new De(e)),n}if(ne(t))return t;if(\"number\"==typeof t)try{t=De.simple(t)}catch(e){t=new De(t)}n=new Fe(0);return n.multiplier=t,n}function T(e,t){if(Array.isArray(e))return e.map(function(e){return T(e,t)});if(t=t||{},e.group===H&&\"\"===e.fname){var n=T(e.args[0],t),r=T(C.pow(n,C.parse(e.power)),t);return C.multiply(C.parse(e.multiplier),r).distributeMultiplier()}if(-1!==[F,B,G].indexOf(e.group))return e;r=e.clone();try{var i,s,o,a=e.multiplier.toString(),u=Number(e.power),l=e;if(e.isComposite()&&ue(e.power)&&0<e.power){var c=u-1,n=new Fe(0);e.each(function(e){n=C.add(n,T(C.parse(e),t))});for(var p=C.parse(n),f=0;f<c;f++)p=Ee(p,n,t);l=C.multiply(C.parse(a),p).distributeMultiplier()}else e.group===H&&!0===t.expand_functions?(i=[],e.args.forEach(function(e){i.push(T(e,t))}),l=C.pow(C.symfunction(e.fname,i),C.parse(e.power)),l=C.multiply(l,C.parse(e.multiplier))):e.isComposite()&&ue(e.power)&&e.power<0&&!0===t.expand_denominator?(e=e.invert(),(l=T(e,t)).invert()):e.group===X?(s=function(e){switch(e.group){case $:return 0;case j:return 1;case X:return 2;case H:return 3;default:return 4}},o=e.collectSymbols().sort(function(e,t){return s(t)-s(e)}).map(function(e){return T(C.pow(e,C.parse(u)),t)}),n=o.pop(),(l=n.isComposite()&&n.isLinear()?(o.forEach(function(e){n=Ee(n,e,t)}),n.isComposite()?(1<n.power&&(n=T(C.pow(n,C.parse(n.power)),t)),C.multiply(C.parse(a),n).distributeMultiplier()):n):(l=n,o.forEach(function(e){l=C.multiply(l,e)}),C.multiply(l,C.parse(a)).distributeMultiplier())).group===X&&(l=C.parse(l))):l=e;return l}catch(e){return r}return r}function P(e){if(ne(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign(),e=O(e.group===B?new Fe(e.value):e.toLinear());return t<0&&e.invert(),e}this.toTeX=function(e,t){var n=!0===(t=t||{}).decimals?\"decimals\":void 0,r=\"string\"==typeof e?this.toObject(e):e,i=[],s=void 0===t.cdot?\"\\\\cdot\":t.cdot,r=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=ae(s),a=\"-\"===s;\"^\"===i&&(\"+\"===s?e.shift():o&&\"+\"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),\"^\"===i&&(o&&\"-\"===s[0]||a)?(n=t.pop(),r=\"1\",\"*\"===(a=t[t.length-1])?(t.pop(),r=t.pop()):ae(a)&&(r=t.pop()),t.push(r,\"/\",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(r);if(ae(r)){for(var o,a,u=[],l=0;l<r.length;l++)o=r[l],\"^\"===r[l+1]?(a=r[l+2],u.push(Ge.braces(this.toTeX([o]))+\"^\"+Ge.braces(this.toTeX([a]))),l+=2):u.push(o);r=u}for(var l=0,c=r.length;l<c;l++){var p=r[l];if(ne(p=\"*\"===p?s:p))if(p.group===H){var f,h=p.fname;if(h===z)g=\"\\\\sqrt\"+Ge.braces(this.toTeX(p.args));else if(h===Q)g=Ge.brackets(this.toTeX(p.args),\"abs\");else if(h===Z)g=Ge.brackets(this.toTeX(p.args),\"parens\");else if(h===D.LOG10)g=\"\\\\\"+D.LOG10_LATEX+\"\\\\left( \"+this.toTeX(p.args)+\"\\\\right)\";else if(\"integrate\"===h)var m=S(p.args),g=\"\\\\int \"+(d=Ge.braces(this.toTeX(m[0])))+\"\\\\, d\"+(v=this.toTeX(m[1]));else if(\"defint\"===h){var m=S(p.args),d=Ge.braces(this.toTeX(m[0])),v=this.toTeX(m[3]);g=\"\\\\int\\\\limits_{\"+this.toTeX(m[1])+\"}^{\"+this.toTeX(m[2])+\"} \"+d+\"\\\\, d\"+v}else if(\"diff\"===h){m=S(p.args),v=\"\",d=Ge.braces(this.toTeX(m[0]));if(1===m.length){for(var w=[],y=0;y<m[0].length;y++)3===m[0][y].group&&w.push(m[0][y].value);w.sort(),v=0<w.length?\"\\\\frac{d}{d \"+w[0]+\"}\":\"\\\\frac{d}{d x}\"}else v=2===m.length?\"\\\\frac{d}{d \"+m[1]+\"}\":\"\\\\frac{d^{\"+m[2]+\"}}{d \"+this.toTeX(m[1])+\"^{\"+m[2]+\"}}\";g=v+\"\\\\left(\"+d+\"\\\\right)\"}else if(\"sum\"===h||\"product\"===h){var b=[[],[],[],[]],y=0;for(l=0;l<p.args.length;l++)\",\"!==p.args[l]?b[y].push(p.args[l]):y++;g=(\"sum\"===h?\"\\\\sum_\":\"\\\\prod_\")+Ge.braces(this.toTeX(b[1])+\" = \"+this.toTeX(b[2])),g+=\"^\"+Ge.braces(this.toTeX(b[3]))+Ge.braces(this.toTeX(b[0]))}else g=\"limit\"===h?(f=S(p.args).map(function(e){return Array.isArray(e)?C.toTeX(e.join(\"\")):C.toTeX(String(e))}),\"\\\\lim_\"+Ge.braces(f[1]+\"\\\\to \"+f[2])+\" \"+Ge.braces(f[0])):h===Y||h===W?this.toTeX(p.args)+(h===Y?\"!\":\"!!\"):Ge.latex(p,n);i.push(g)}else i.push(Ge.latex(p,n));else ae(p)?i.push(Ge.brackets(this.toTeX(p))):\"/\"===p?i.push(Ge.frac(M(i.pop()),M(this.toTeX([r[++l]])))):i.push(p)}return i.join(\" \")},this.expand=T,this.round=m,this.clean=function t(e){var n,r,i,s,o,a,u,l=e.group;return l===$?(r=e.getNum(),i=e.getDenom()||new Fe(1),s=Number(e.power),o=new Fe(1),1===Math.abs(s)&&(i.each(function(e){e.group===X?o=C.multiply(o,t(e.getDenom())):e.power.lessThan(0)&&(o=C.multiply(o,t(e.clone().toUnitMultiplier())))}),a=new Fe(0),i.each(function(e){a=C.add(C.divide(e,o.clone()),a)}),o.invert(),r.isComposite()?(u=new Fe(0),r.each(function(e){u=C.add(C.multiply(t(e),o.clone()),u)})):u=C.multiply(o,r),n=C.divide(u,a))):l===X?(n=new Fe(1),e.each(function(e){n=C.multiply(n,C.clean(e))})):l===H&&1===e.args.length&&e.args[0].isConstant()&&(n=ye(\"PARSE2NUMBER\",function(){return C.parse(e)},!0)),n=n||e},this.sqrt=O,this.cbrt=i,this.abs=_,this.log=R,this.rationalize=r,this.nthroot=s,this.arg=f,this.conjugate=p,this.imagpart=c,this.realpart=l,this.getFunction=function(e){return U[e][0]},this.addPreprocessor=function(e,t,n,r){var i=o.names,s=o.actions;if(\"function\"!=typeof t)throw new PreprocessorError(\"Incorrect parameters. Function expected!\");n?r?(i.splice(n,0,e),s.splice(n,0,t)):(i[n]=e,s[n]=t):(i.push(e),s.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=o.names.indexOf(e);t?(we(o.names,e),we(o.actions,e)):(o.names[e]=void 0,o.actions[e]=void 0)},this.mapped_function=function(){for(var e={},t=this.params,n=0;n<t.length;n++)e[t[n]]=String(arguments[n]);return C.parse(this.body,e)},this.add=function(i,n){var e=ne(i),t=ne(n);if(e&&t){if(i.unit||n.unit)return C.Unit.add(i,n);if(i.isInfinity||n.isInfinity){var r=i.multiplier.lessThan(0),s=n.multiplier.lessThan(0);if(i.isInfinity&&n.isInfinity&&r!==s)throw new Ae(\"(\"+i+\")+(\"+n+\") is not defined!\");var o=Fe.infinity();return s&&o.negate(),o}if(i.isComposite()&&i.isLinear()&&n.isComposite()&&n.isLinear()&&(i.distributeMultiplier(),n.distributeMultiplier(),n.length>i.length&&i.group===n.group&&([i,n]=[n,i])),i.multiplier.equals(0))return n;if(n.multiplier.equals(0))return i;if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return h=new Fe(i.multiplier.add(n.multiplier).toDecimal(D.PRECISION));var a=i.group,u=n.group,l=i.power.toString(),c=n.power.toString();if(a<u||a===u&&c<l&&0<c)return this.add(n,i);a===X&&u===j&&i.value===n.value&&(w=i,a=(i=n).group,u=(n=w).group,l=i.power.toString(),c=n.power.toString());var p,f,h,m=l===c,r=i.value,s=n.value,o=i.isComposite(),l=n.isComposite();if(o&&(p=Pe(i,\"hash\")),l&&(f=Pe(n,\"hash\")),a===$&&u===$&&n.isLinear()&&!i.isLinear()&&p!==f)return this.add(n,i);a===j&&u===j&&(r=p,s=f);var g,c=a===B&&u===F,l=i.value===n.multiplier.toString(),l=r===s||p===f&&void 0!==p||c&&l;if(l&&m&&a===u)if(c&&(n=n.convert(B)),a!==j||u!==G&&u!==B)if((h=i).multiplier.isOne()&&n.multiplier.isOne()&&a===$&&i.isLinear()&&n.isLinear())for(var d in n.symbols){var v=n.symbols[d];h.attach(v)}else h.multiplier=h.multiplier.add(n.multiplier);else i.distributeMultiplier(),h=i.attach(n);else if(l&&a!==j)a===$&&u===j?(n.insert(i,\"add\"),h=n):(h=Fe.shell(j).attach([i,n])).value=a===j?p:r;else if(o&&i.isLinear()){r=a===u,o=a===j&&u===j;if(o&&(r=i.value===n.value),i.distributeMultiplier(),n.isComposite()&&n.isLinear()&&r){for(var d in n.distributeMultiplier(),n.symbols){v=n.symbols[d];i.attach(v)}h=i}else o&&i.value!==f||a===j&&!l?(h=Fe.shell($).attach([i,n])).updateHash():h=i.attach(n)}else a===H&&i.fname===z&&u!==V&&n.power.equals(.5)&&(g=n.multiplier.clone(),(n=O(n.toUnitMultiplier().toLinear())).multiplier=g),2===i.length&&2===n.length&&ge(i.power)&&ge(n.power)?h=C.add(T(i),T(n)):(h=Fe.shell($).attach([i,n])).updateHash();return 1===(h=h.multiplier.equals(0)?new Fe(0):h).length&&(g=h.multiplier,(h=pe(h.symbols)).multiplier=h.multiplier.multiply(g)),h}t&&!e&&(w=i,i=n,n=w,w=t,t=e,e=w);var w=ie(n);if(e&&w){var y=new He;n.eachElement(function(e,t,n){y.set(t,n,C.add(i.clone(),e))}),n=y}else if(ie(i)&&w)n=i.add(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return C.add(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var y=new He,b=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<b;r++)n.push(C.add(i.elements[t-1][r].clone(),e.clone()));y.elements.push(n)}),y}K(\"Dimensions must match!\")}}return n},this.subtract=function(i,r){var e=ne(i),t=ne(r);if(e&&t)return i.unit||r.unit?C.Unit.subtract(i,r):this.add(i,r.negate());if(t&&re(i))r=i.map(function(e){return C.subtract(e,r.clone())});else if(e&&re(r))r=r.map(function(e){return C.subtract(i.clone(),e)});else if(re(i)&&re(r))i.dimensions()===r.dimensions()?r=i.subtract(r):C.error(\"Unable to subtract vectors. Dimensions do not match.\");else if(ie(i)&&re(r)){if(r.elements.length===i.rows()){var s=new He,o=i.cols();return r.each(function(e,t){for(var n=[],r=0;r<o;r++)n.push(C.subtract(i.elements[t-1][r].clone(),e.clone()));s.elements.push(n)}),s}K(\"Dimensions must match!\")}else{if(re(i)&&ie(r)){var s=r.clone().negate();return C.add(s,i)}ie(i)&&ie(r)?r=i.subtract(r):ie(i)&&t?(s=new He,i.each(function(e,t,n){s.set(t,n,C.subtract(e,r.clone()))}),r=s):e&&ie(r)&&(s=new He,r.each(function(e,t,n){s.set(t,n,C.subtract(i.clone(),e))}),r=s)}return r},this.multiply=function(i,n){var e=ne(i),t=ne(n);if(e&&n instanceof L)return n.elements.push(i),n;if(e&&t){if(n.isUnit){var r=i.clone();return i.unit=n,r}if(i.unit||n.unit)return C.Unit.multiply(i,n);if(i.isInfinity||n.isInfinity){if(i.equals(0)||n.equals(0))throw new Ae(i+\"*\"+n+\" is undefined!\");if(n.power.lessThan(0)){if(i.isInfinity)throw new Ae(\"Infinity/Infinity is not defined!\");return new Fe(0)}var s=i.multiplier.multiply(n.multiplier).sign(),o=Fe.infinity();if(i.isConstant()||n.isConstant()||i.isInfinity&&n.isInfinity)return s<0&&o.negate(),o}if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return new Fe(p=new k(i.multiplier.toDecimal()).times(new k(n.multiplier.toDecimal())).toFixed());if(i.isOne())return n.clone();if(n.isOne())return i.clone();if(i.multiplier.equals(0)||n.multiplier.equals(0))return new Fe(0);if(n.group>i.group&&n.group!==$)return this.multiply(n,i);i.group===X&&n.group===j&&i.value===n.value&&(p=i,i=n,n=p);var a=i.group,u=n.group,l=n.multiplier.num,c=n.multiplier.den;a!==H||i.fname!==z||n.isConstant()||i.args[0].value!==n.value||i.args[0].multiplier.lessThan(0)?a===H&&i.fname===z&&i.multiplier.equals(1)&&i.power.equals(-1)&&n.isConstant()&&i.args[0].equals(n)&&(i=C.symfunction(z,[n.clone()]),n=new Fe(1)):(m=i.power,h=C.parse(i.multiplier),(i=C.multiply(h,i.args[0].clone())).setPower(new De(.5).multiply(m)),a=i.group);var p,f=i.value,o=n.value,s=new De(i.sign()),h=a===B&&u===F&&n.multiplier.equals(i.value),m=(h?new De(1).multiply(i.multiplier):i.multiplier.multiply(n.multiplier)).abs(),r=i.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),a===H&&u===H){var g=i.args[0].clone(),d=n.args[0].clone();if(i.fname===z&&n.fname===z&&i.isLinear()&&n.isLinear()){var v=C.divide(g,d).invert();v.gt(1)&&ue(v)&&(r=C.multiply(i.args[0].clone(),O(v.clone())),n=new Fe(1))}else if(i.fname===Y&&n.fname===Y&&!g.isConstant()&&!d.isConstant()&&n.power<0){v=C.subtract(g.clone(),d.clone());if(v.isConstant())if(p=new Fe(1),v<0){for(var w=0,y=Math.abs(v);w<=y;w++){var b=C.add(g.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(g,new Fe(i.power)),C.pow(p,new Fe(n.power))),n=new Fe(1)}else{for(w=0,y=Math.abs(v);w<=y;w++){b=C.add(d.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(p,new Fe(i.power)),C.pow(d,new Fe(n.power))),n=new Fe(1)}}}if(f===o&&a===j&&a===u&&(f=i.text(\"hash\"),o=n.text(\"hash\")),(f=u===V&&n.previousGroup===j&&a===j?Pe(i,\"hash\",V):f)!==o&&!h||a===j&&(u===G||u===B||u===H)||a===j&&u===X)if(a===X&&i.isLinear())if(u===X&&n.distributeExponent(),u===X&&n.isLinear()){for(var b in n.symbols){var S=n.symbols[b];r=r.combine(S)}r.multiplier=r.multiplier.multiply(n.multiplier)}else r.combine(n);else a!==F?a===X?(r.distributeExponent(),r.combine(n)):n.isOne()||(E=n.multiplier.clone(),n.toUnitMultiplier(),(r=Fe.shell(X).combine([r,n])).multiplier=r.multiplier.multiply(E)):r=n.clone().toUnitMultiplier();else{var M=i.power,N=n.power,E=ne(M),q=ne(N),q=E||q;a===j&&u!==j&&n.previousGroup!==j&&M.equals(1)?(r=new Fe(0),i.each(function(e){r=C.add(r,C.multiply(e,n.clone()))},!0)):(r.power=q?C.add(ne(M)?M:new Fe(M),ne(N)?N:new Fe(N)):a===F?M:M.add(N),r.power.equals(0)&&(r=r.convert(F)),q&&r.convert(V),i.imaginary&&n.imaginary&&ge(r.power%2)&&(r=new Fe(1),m.negate()),r.group!==V&&r.previousGroup&&(r.previousGroup=void 0),r.multiplier=r.multiplier.multiply(n.multiplier))}r.group===B&&(a=Math.log(r.value),M=Math.log(l)/a,N=Math.log(c)/a,q=m.num/l,a=m.den/c,0!=M&&ue(M)&&ue(q)&&(r.power=r.power.add(new De(M)),m.num/=l),0!=N&&ue(N)&&ue(a)&&(r.power=r.power.subtract(new De(N)),m.den/=c)),1===r.length&&(p=r.multiplier,(r=pe(r.symbols)).multiplier=r.multiplier.multiply(p));c=r.power.toString();return ge(c)&&r.fname===z?(s*=r.sign(),c=r.power,r=r.args[0],r=C.multiply(new Fe(m),C.pow(r,new Fe(c.divide(new De(2))))),s<0&&r.negate()):(r.multiplier=r.multiplier.multiply(m).multiply(s),r.group===$&&r.isImaginary()&&r.distributeMultiplier()),r=r.group===B&&ue(r.power.toDecimal())?r.convert(F):r}t&&!e&&(p=i,i=n,n=p,p=t,t=e,e=p);s=ie(n),t=ie(i);if(e&&s){var x=new He;n.eachElement(function(e,t,n){x.set(t,n,C.multiply(i.clone(),e))}),n=x}else if(t&&s)n=i.multiply(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return this.multiply(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var x=new He,A=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<A;r++)n.push(C.multiply(i.elements[t-1][r].clone(),e.clone()));x.elements.push(n)}),x}K(\"Dimensions must match!\")}}return n},this.divide=function(r,i){var e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.divide(r,i);if(i.equals(0))throw new qe(\"Division by zero not allowed!\");return r.isConstant()&&i.isConstant()?(n=r.clone()).multiplier=n.multiplier.divide(i.multiplier):(i.invert(),n=C.multiply(r,i)),n}var n,s,o=re(r),a=re(i);return e&&a?i=i.map(function(e){return C.divide(r.clone(),e)}):o&&t?i=r.map(function(e){return C.divide(e,i.clone())}):o&&a?r.dimensions()===i.dimensions()?i=i.map(function(e,t){return C.divide(r.elements[--t],e)}):C.error(\"Cannot divide vectors. Dimensions do not match!\"):(n=ie(r),o=ie(i),n&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.clone()))}),i=s):e&&o?(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.divide(r.clone(),e))}),i=s):n&&o?(s=new He,r.rows()===i.rows()&&r.cols()===i.cols()?(r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t][n]))}),i=s):C.error(\"Dimensions do not match!\")):n&&a&&(r.cols()===i.dimensions()?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t].clone()))}),i=s):C.error(\"Unable to divide matrix by vector.\"))),i},this.pow=function(r,i){var s,e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.pow(r,i);if(r.group===H&&r.fname===Q&&ge(i)){var n=r.multiplier.clone(),o=C.pow(r.args[0],i);return o.multiplier=n,o}if(r.isInfinity||i.isInfinity){if(r.isInfinity&&i.isInfinity)throw new Ae(\"(\"+r+\")^(\"+i+\") is undefined!\");if(r.isConstant()&&i.isInfinity){if(r.equals(0)){if(i.lessThan(0))throw new Ae(\"0^Infinity is undefined!\");return new Fe(0)}if(r.equals(1))throw new Ae(\"1^\"+i.toString()+\" is undefined!\");if(i.lessThan(0))return new Fe(0);if(!r.lessThan(0))return Fe.infinity()}if(r.isInfinity&&i.isConstant()){if(i.equals(0))throw new Ae(r+\"^0 is undefined!\");return i.lessThan(0)?new Fe(0):C.multiply(Fe.infinity(),C.pow(new Fe(r.sign()),i.clone()))}}var a=r.equals(0),u=i.equals(0);if(a&&u)throw new Ae(\"0^0 is undefined!\");if(a&&i.isConstant()&&i.multiplier.greaterThan(0))return new Fe(0);if(u)return new Fe(1);var l,c=i.isConstant(),p=r.isConstant(),o=i.isInteger(),n=r.multiplier,a=r.clone();if(p&&c&&r.equals(0)&&i.lessThan(0))throw new Ae(\"Division by zero is not allowed!\");if(D.PARSE2NUMBER&&p&&c&&r.sign()<0&&de(i)){var f=Math.PI*i;return b=new Fe(Math.cos(f)),v=C.multiply(Fe.imaginary(),new Fe(Math.sin(f))),C.add(b,v)}if(D.PARSE2NUMBER&&r.isImaginary()&&c&&ue(i)&&!i.lessThan(0))if(b=r.realpart(),v=r.imagpart(),b.isConstant(\"all\")&&v.isConstant(\"all\"))return u=D.USE_BIG?Fe(k.atan2(d.multiplier.toDecimal(),y.multiplier.toDecimal()).times(i.toString())):Math.atan2(v,b)*i,l=new Fe(u),y=C.pow(Fe.hyp(b,v),i),f=C.multiply(y.clone(),C.trig.cos(l.clone())),u=C.multiply(y,C.trig.sin(l)),C.add(f,C.multiply(Fe.imaginary(),u));if(a.toUnitMultiplier(),a.group!==H||a.fname!==z||c?(A=n.sign(),de(i)&&A<0&&(a.negate(),(a=C.symfunction(Z,[a])).negate()),a.multiplyPower(i)):((N=a.args[0]).multiplyPower(new Fe(.5)),N.multiplier.multiply(a.multiplier),N.multiplyPower(i),a=N),p&&c&&D.PARSE2NUMBER)A<0&&(r.negate(),m=i.multiplier.den.equals(2)?new Fe(D.IMAGINARY):ue(i.multiplier)?ge(i.multiplier)?new Fe(1):new Fe(-1):ge(i.multiplier.den)?C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()):new Fe(Math.pow(A,i.multiplier.num))),a=new Fe(Math.pow(r.multiplier.toDecimal(),i.multiplier.toDecimal())),m&&(a=C.multiply(a,m));else if(o&&!n.equals(1)){if(i.abs().gt(D.MAX_EXP))return i.sign()<0?new Fe(0):Fe.infinity();var h=i.multiplier.toDecimal(),m=Math.sign(h);h=Math.abs(h);var g=new De(1);g.num=n.num.pow(h),g.den=n.den.pow(h),m<0&&g.invert(),a.multiplier=a.multiplier.multiply(g)}else{var d,v,w,y,b,S,M,N,E,q,x,A=r.sign();i.isConstant()&&r.isConstant()&&!i.multiplier.den.equals(1)&&A<0?a=i.multiplier.den.equals(2)?(d=new Fe(D.IMAGINARY),r.negate(),i.lessThan(0)&&(d.negate(),i.negate()),C.multiply(C.pow(r,i),d)):((w=r.clone()).multiplier.negate(),a=C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()),g=C.pow(new Fe(w.multiplier.num),i.clone()),d=C.pow(new Fe(w.multiplier.den),i.clone()),y=C.divide(g,d),C.multiply(a,y)):D.PARSE2NUMBER&&i.isImaginary()?(b=i.realpart(),v=i.imagpart(),w=r.clone().toLinear(),y=C.pow(w.clone(),b),E=R(w.clone()),b=I.cos(C.multiply(v.clone(),E)),E=C.multiply(I.sin(C.multiply(v,R(w))),Fe.imaginary()),a=C.multiply(y,C.add(b,E)),a=C.expand(C.parse(a))):(S=P(new Fe((E=r.group===F&&A<0)?n.num:Math.abs(n.num)).setPower(i.clone())),M=P(new Fe(n.den).setPower(i.clone()).invert()),r.imaginary&&(o?(N=Math.sign(i),h=_(i),a=new Fe(ge(q=h%4)?-1:D.IMAGINARY),(0===q||N<0&&1===q||0<N&&3===q)&&a.negate()):(o=i.multiplier.multiply(De.quick(1,2)),N=Math.pow(-1,o.num),a=ge(o.den)?new Fe(-1).setPower(o,!0):new Fe(N))),A<0&&!E&&a.negate(),c&&r.group!==V&&(A=ge(i.multiplier.den),E=ge(r.power),q=a.power.toDecimal(),c=ge(q),A&&E&&!c&&(a=1===q?C.symfunction(Q,[a]):ue(q)?C.multiply(C.symfunction(Q,[a.clone().toLinear()]),a.clone().setPower(new De(q-1))):(h=a.power,C.symfunction(Q,[a.toLinear()]).setPower(h)),D.POSITIVE_MULTIPLIERS&&a.fname===Q&&(a=a.args[0]))),i.equals(2)&&a.group===X&&(x=new Fe(1),a.each(function(e){x=C.multiply(x,C.pow(e,i))}),a=x))}return a=P(a),(a=S&&M?C.multiply(a,function(e){if(e.group===B){var t=e.value,n=ke(t)[0];if(!n)return ee(\"Unable to compute prime factors. This should not happen. Please review and report.\"),e;t=new De(Math.log(t)/Math.log(n)).multiply(e.power);if(t.den>e.power.den)return e;e=ue(t)?Fe(Math.pow(n,t)):new Fe(n).setPower(t)}return e}(C.multiply(S,M))):a).fname===z?(M=((S=a.group===V)?a.power.multiplier:a.power).toString(),ge(M)&&(S=S?C.divide(a.power,new Fe(2)):new Fe(a.power.divide(new De(2))),n=a.multiplier,(a=C.pow(a.args[0],S)).multiplier=a.multiplier.multiply(n))):!D.IGNORE_E&&a.isE()&&a.group===V&&a.power.contains(\"pi\")&&a.power.contains(D.IMAGINARY)&&i.group===X&&(l=i.stripVar(D.IMAGINARY),a=C.add(I.cos(l),C.multiply(Fe.imaginary(),I.sin(l)))),a}return re(r)&&t?r=r.map(function(e){return C.pow(e,i.clone())}):ie(r)&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.pow(e,i.clone()))}),r=s):e&&ie(i)&&(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.pow(r.clone(),e))}),r=s),r},this.comma=function(e,t){return(e=!(e instanceof L)?L.create(e):e).append(t),e},this.mod=t,this.slice=function(e,t){return new x(e,t)},this.equals=function(e,t){return e.group===G||e.isLinear()||K(\"Cannot set equality for \"+e.toString()),J[e.value]=t.clone(),t},this.percent=function(e){return C.divide(e,new Fe(100))},this.assign=function(e,n){if(e instanceof L&&n instanceof L)return e.elements.map(function(e,t){return C.assign(e,n.elements[t])}),Ve.fromArray(n.elements);if(e.parent){var t=e.parent;return t.elements[t.getter]=n,delete t.getter,t}if(e.group!==G)throw new Oe(\"Cannot complete operation. Incorrect LH value for \"+e);return J[e.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return fe(n,e.elements,t)};function v(e){return new Fe(!0===e?1:0)}this.eq=function(e,t){return v(e.equals(t))},this.gt=function(e,t){return v(e.gt(t))},this.gte=function(e,t){return v(e.gte(t))},this.lt=function(e,t){return v(e.lt(t))},this.lte=function(e,t){return v(e.lte(t))},this.factorial=function(e){return this.symfunction(Y,[e])},this.dfactorial=function(e){return this.symfunction(W,[e])}}D.FUNCTION_MODULES.push(Te),x(Te),Math.sign=Math.sign||function(e){return 0===(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){e=Math.exp(e);return(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){e=Math.exp(e);return(e-1/e)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;e=Math.exp(2*e);return(e-1)/(e+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},ke(314146179365),R.getExpression=function(e,t){\"last\"!==e&&e||(e=p.length);e=p[(e=\"first\"===e?1:e)-1];return e&&new R(e)},(R.prototype={text:function(e,t){return t=t||D.EXPRESSION_DECP,e=e||\"decimals\",this.symbol.text_?this.symbol.text_(e):Pe(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ge.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(re(this.symbol)&&0===this.symbol.dimensions())return this;var e,t=arguments[0],n=1;\"string\"==typeof t?e=\"%\"===t.charAt(0)?R.getExpression(t.substr(1)).text():t:t instanceof R||ne(t)?e=t.text():(e=this.symbol.text(),n--);var r=arguments[n]||{};return new R(ye(\"PARSE2NUMBER\",function(){return d.parse(e,r)},!0))},buildFunction:function(e){return Xe.build(this.symbol,e)},isNumber:function(){return oe(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return Se(d.parse(this.symbol)).isImaginary()},variables:function(){return b(this.symbol)},toString:function(){try{return ae(this.symbol)?\"[\"+this.symbol.toString()+\"]\":this.symbol.toString()}catch(e){return\"\"}},toDecimal:function(e){D.precision=e;e=Pe(this.symbol,\"decimals\");return D.precision=void 0,e},isFraction:function(){return v(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new R(this.symbol.sub(d.parse(e),d.parse(t)))},operation:function(e,t){return i(t)?t=t.symbol:ne(t)||(t=d.parse(t)),new R(d[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation(\"add\",e)},subtract:function(e){return this.operation(\"subtract\",e)},multiply:function(e){return this.operation(\"multiply\",e)},divide:function(e){return this.operation(\"divide\",e)},pow:function(e){return this.operation(\"pow\",e)},expand:function(){return new R(d.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(ae(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){ne(e)||(e=d.parse(e));try{return d.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new R(this.symbol.getNum())},denominator:function(){return new R(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=R.prototype.latex,T.prototype={fromScientific:function(e){e=String(e).toLowerCase().split(\"e\");return this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split(\".\"),n=t[0]||\"\",r=t[1]||\"\",n=T.removeLeadingZeroes(n),r=T.removeTrailingZeroes(r),i=n.length,e=n+r,t=T.leadingZeroes(e).length;this.exponent=i-(t+1);e=T.removeLeadingZeroes(e);this.coeff=e.charAt(0)+\".\"+(e.substr(1,e.length)||\"0\");e=this.coeff.split(\".\")[1]||\"\";return this.decp=\"0\"===e?0:e.length,this.dec=r,this.wholes=n,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new T(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=D.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:T.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+\"e\"+this.exponent),(-1===this.sign?\"-\":\"\")+t}},T.isScientific=function(e){return/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)},T.leadingZeroes=function(e){e=e.match(/^(0*).*$/);return e?e[1]:\"\"},T.removeLeadingZeroes=function(e){e=e.match(/^0*(.*)$/);return e?e[1]:\"\"},T.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):\"\"},T.round=function(e,t){e=me(e,t),t-=String(e).split(\".\").pop().length;return 0<t&&(e+=new Array(1+t).join(0)),e},De.create=function(e){if(e instanceof De)return e;var t=\"-\"===(e=e.toString()).charAt(0),e=new De(e=t?e.substr(1,e.length-1):e);return t&&e.negate(),e},De.isFrac=function(e){return e instanceof De},De.quick=function(e,t){var n=new De;return n.num=new S(e),n.den=new S(t),n},De.simple=function(e){for(var t=String(y(e)).split(\".\"),e=t.join(\"\"),n=1,r=(t[1]||\"\").length,i=0;i<r;i++)n+=\"0\";return De.quick(e,n).simplify()},De.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new qe(\"Division by zero not allowed!\");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,e=e.num;return t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),e=e.clone();return t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=S.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new De;return e.num=new S(this.num),e.den=new S(this.den),e},decimal:function(e){var t=this.num.isNegative()?\"-\":\"\";if(this.num.equals(this.den))return\"1\";e=e||D.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var u=n.shift();if(0===n.length)return t+u.toString();if(s===e){for(var l=[],s=0;s<2;s++)l.unshift(n.pop());n.push(Math.round(l.join(\".\")))}return t+(u.toString()+\".\"+n.join(\"\"))},toDecimal:function(e){return(e=e||D.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].equals(e[1])},absEquals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].abs().equals(e[1])},greaterThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return De.quick(S.gcd(e.num,this.num),S.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+\"/\"+this.den.toString()},valueOf:function(){return D.USE_BIG?new k(this.num.toString()).div(new k(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Fe.imaginary=function(){var e=new Fe(D.IMAGINARY);return e.imaginary=!0,e},Fe.infinity=function(e){var t=new Fe(\"Infinity\");return-1===e&&t.negate(),t},Fe.shell=function(e,t){t=new Fe(t);return t.group=e,t.symbols={},t.length=0,t},Fe.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===z&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new De(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new De(.5)))),e},Fe.hyp=function(e,t){return e=e||new Fe(0),t=t||new Fe(0),d.sqrt(d.add(d.pow(e.clone(),new Fe(2)),d.pow(t.clone(),new Fe(2))))},Fe.toPolarFormArray=function(e){var t=e.realpart(),e=e.imagpart();return[Fe.hyp(t,e),t.equals(0)?d.parse(\"pi/2\"):d.trig.atan(d.divide(e,t))]},Fe.unwrapPARENS=function(e){if(\"\"!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),\"\"===e.fname?Fe.unwrapPARENS(t):t},Fe.create=function(e,t){return d.parse(\"(\"+e+\")^(\"+(t=void 0===t?1:t)+\")\")},Fe.prototype={getNth:function(e){var t=Se(d.pow(d.parse(this.multiplier),d.parse(e).invert())),n=d.parse(me(t));return Se(d.pow(n,d.parse(e))).equals(d.parse(this.multiplier))?n:t},isToNth:function(t){var n,e=this.getNth(t),e=ue(e);return this.group===X?(n=!0,this.each(function(e){e.isToNth(t)||(n=!1)})):n=this.group===F||ue(d.divide(d.parse(this.power),d.parse(t))),e&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==X)return this.clone();var t=[],e=this.multiplier.sign();this.each(function(e){e=e.power;if(ne(e)||e.equals(1))return this.clone();t.push(e)});var n,r=new De(c(t)),e=this.multiplier.sign(),i=this.multiplier.clone().abs(),s=Te.ifactor(i),o=new De(1),a=new De(1);for(n in s){var u=new De(s[n]);u.lessThan(r)||(u=u.divide(r).subtract(new De(1)),a=a.multiply(new De(n))),o=o.multiply(d.parse(E(n)+\"^\"+E(u)).multiplier)}var l=new Fe(a);this.each(function(e){(e=e.clone()).power=e.power.divide(r),l=d.multiply(l,e)});i=d.symfunction(Z,[l]);return i.power=r,i.multiplier=e<0?o.negate():o,i},equals:function(e){return ne(e)||(e=new Fe(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!ue(n)||n<0)return!1;if(t===F||t===G||this.isConstant(!0))return!0;n=b(this);if(t===X&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===H&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===X&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(t,e){var n;return this.group!==j&&this.group!==G||this.value!==t?this.group===X&&this.isLinear()?(n=new Fe(1),this.each(function(e){e.contains(t,!0)||(n=d.multiply(n,e.clone()))}),n.multiplier=n.multiplier.multiply(this.multiplier)):this.group!==$||this.isLinear()?this.group===$&&this.isLinear()?(n=new Fe(0),this.each(function(e){e.contains(t)||((e=e.clone()).multiplier=e.multiplier.multiply(this.multiplier),n=d.add(n,e))}),n.equals(0)&&(n=new Fe(this.multiplier))):n=this.group===V&&this.power.contains(t,!0)||this.group===H&&this.contains(t)?new Fe(this.multiplier):this.clone():n=new Fe(this.multiplier):n=new Fe(e?0:this.multiplier),n},toArray:function(n,r){r=r||{arr:[],add:function(e,t){var n=this.arr[t];this.arr[t]=n?d.add(n,e):e}};var e=this.group;if(e===G&&this.contains(n))r.add(new Fe(this.multiplier),this.power);else if(e===X){var t=this.stripVar(n),i=d.divide(this.clone(),t.clone()),i=i.isConstant()?0:i.power;r.add(t,i)}else if(e===j&&this.value===n)this.each(function(e,t){r.add(e.stripVar(n),t)});else if(e===$)this.each(function(e){e.toArray(n,r)});else{if(this.contains(n))throw new I(\"Cannot convert to array! Exiting\");r.add(this.clone(),0)}r=r.arr;for(var s=0;s<r.length;s++)r[s]||(r[s]=new Fe(0));return r},hasFunc:function(e){var t=this.group===H||this.group===V;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(t,n){t=ne(t)?t.clone():d.parse(t),n=ne(n)?n.clone():d.parse(n),t.group!==F&&t.group!==B||K(\"Cannot substitute a number. Must be a variable\");var r,e=!1,i=t.multiplier.equals(1),s=this.multiplier.clone();if(this.value===t.value&&(this.group!==j&&t.group!==j||this.group===j&&t.group===j))(i||t.multiplier.equals(this.multiplier))&&(t.isLinear()?r=n:t.power.equals(this.power)&&(r=n,e=!0),t.multiplier.equals(this.multiplier)&&(s=new De(1)));else if(this.group===X||this.previousGroup===X)r=new Fe(1),this.each(function(e){e=d.parse(e.sub(t,n));r=d.multiply(r,e)});else if(this.isComposite()){var o=this.clone();if(t.isComposite()&&o.isComposite()&&o.isLinear()&&t.isLinear()){var a,u=function(e,t){for(var n in e.symbols){n=e.symbols[n];if(n.isComposite()&&u(n,t)||n.equals(t))return!0}return!1};for(a in t.symbols)if(!u(o,t.symbols[a]))return o.clone();r=d.add(d.subtract(o.clone(),t),n)}else r=new Fe(0),o.each(function(e){r=d.add(r,e.sub(t,n))})}else if(this.group===V)r=d.parse(this.value).sub(t,n);else if(this.group===H){for(var l=[],c=0;c<this.args.length;c++){var p=this.args[c];ne(p)||(p=d.parse(p)),l.push(p.sub(t,n))}r=d.symfunction(this.fname,l)}return r?(e||(e=this.group===V?this.power.sub(t,n):d.parse(this.power),r=d.pow(r,e)),r.multiplier=r.multiplier.multiply(s),r):this.clone()},isMonomial:function(){if(this.group===G)return!0;if(this.group!==X)return!1;for(var e in this.symbols)if(this.symbols[e].group!==G)return!1;return!0},isPi:function(){return this.group===G&&\"pi\"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return\"e\"===this.value},isSQRT:function(){return this.fname===z},isConstant:function(t,n){if(n&&this.group===X)for(var e in this.symbols)if(this.symbols[e].isConstant(!0))return!0;if(\"functions\"===t&&this.isComposite()){var r=!0;return this.each(function(e){e.isConstant(t,n)||(r=!1)},!0),r}if(\"all\"===t&&(this.isPi()||this.isE()))return!0;if(t&&this.group===H){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(t))return!1;return!0}return t?oe(this):this.value===l},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Fe(0);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.realpart())}),t}return this.isImaginary()?new Fe(0):this.clone()},imagpart:function(){if(this.group===G&&this.isImaginary())return new Fe(this.multiplier);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.imagpart())}),t}return this.group===X?this.stripVar(D.IMAGINARY):new Fe(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===G)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return this.group===X&&this.symbols[e]?this.symbols[e].isLinear(e):!1}return this.power.equals(1)},containsFunction:function(e){if(\"string\"==typeof e&&(e=[e]),this.group===H&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===F&&this.multiplier.equals(1))return this;var t,n=this.power;return this.group!==V&&e.group===F?(t=e.multiplier,this.group!==F||t.isInteger()||this.convert(B),this.power=n.equals(1)?t.clone():n.multiply(t),this.group===B&&ue(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(F))):(this.group!==V&&(n=new Fe(n),this.convert(V)),this.power=d.multiply(n,e)),this},setPower:function(e,t){return this.group===F&&this.multiplier.equals(1)||(this.group!==V||ne(e)?(n=!1,ne(e)&&(e.group===F?e=e.multiplier:n=!0),n=n?V:B,this.power=e,this.group===F&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===F?(this.multiplier=new De(this.value),this.value=l):this.power=e)),this;var n},isInverse:function(){return this.group===V?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Fe(0),r=[\"value\",\"group\",\"length\",\"previousGroup\",\"imaginary\",\"fname\",\"args\",\"isInfinity\",\"scientific\"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new S(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new S(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new De(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===j&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===F?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Pe(this,\"decimals\")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===H||this.previousGroup===H)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===V){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==$&&this.group!==j||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),ne(this.power)?this.power.negate():this.group===X&&t?this.each(function(e){return e.invert()}):this.power&&this.group!==F&&this.power.negate(),this},distributeMultiplier:function(e){e=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&e&&this.group!==X&&!this.multiplier.equals(1)){for(var t in this.symbols){t=this.symbols[t];t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,t=this.power;for(e in this.symbols){var n=this.symbols[e];n.group===V?n.power=d.multiply(n.power,new Fe(t)):this.symbols[e].power=this.symbols[e].power.multiply(t)}this.toLinear()}return this},convert:function(e,t){var n;return H<e?(n=this.clone(),this.symbols={},(e===X?n:this).toUnitMultiplier(),this.group===H&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===V?this.group===F&&this.multiplier.equals(1)||(this.group!==V&&(this.previousGroup=this.group),this.group===F?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Pe(this,\"hash\"),this.group=V):e===F?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new Fe(this.group===B?n*Math.pow(this.value,this.power):n).clone(this)):e===B&&this.group===F&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=B),this},insert:function(e,t){var n,r;return ne(e)||K(\"Object \"+e+\" is not of type Symbol!\"),this.symbols&&(r=this.group,H<r&&(r=(n=e.keyForGroup(r))in this.symbols&&this.symbols[n],\"add\"===t?(t=n,r?(this.symbols[t]=d.add(r,e),this.symbols[t].multiplier.equals(0)&&(delete this.symbols[t],this.length--,0===this.length&&(this.convert(F),this.multiplier=new De(0)))):(this.symbols[n]=e,this.length++)):(e.group===B&&ue(e.power)&&e.convert(F),e.group!==V?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),r&&((e=d.multiply(we(this.symbols,n),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Fe(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[n]=e,this.length++)),0===this.length&&this.convert(F),this.group!==$&&this.group!==X||this.updateHash())),this},attach:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"add\");return this}return this.insert(e,\"add\")},combine:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"multiply\");return this}return this.insert(e,\"multiply\")},updateHash:function(){if(this.group!==F)if(this.group===H){for(var e=\"\",t=this.args,n=this.fname===Z,r=0;r<t.length;r++)e+=(0===r?\"\":\",\")+Pe(t[r]);var i=n?\"\":this.fname;this.value=i+(n?e:E(e))}else this.group!==G&&this.group!==j&&(this.value=Pe(this,\"hash\"))},keyForGroup:function(e){var t,n=this.group;if(n===F)t=this.value;else if(n===G||n===B)t=e===j?this.power.toDecimal():this.value;else if(n===H)t=e===j?this.power.toDecimal():Pe(this,\"hash\");else{if(n===j)return t=e===X?Pe(this,\"hash\"):e===$?this.power.equals(1)?this.value:E(Pe(this,\"hash\"))+D.POWER_OPERATOR+this.power.toDecimal():e===j?this.power.toString():this.value;n===$?(e===$&&(t=Pe(this,\"hash\")),t=e===j?this.power.toDecimal():this.value):n===X?t=e===j?this.power.toDecimal():Pe(this,\"hash\"):n===V&&(t=e===j?Pe(this.power):Pe(this,\"hash\"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){s=this.symbols[s];!r||s.group!==j&&s.group!==$?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ge.latex(this,e)},text:function(e){return Pe(this,e)},isOne:function(e){return this.group===F?this.multiplier[e?\"absEquals\":\"equals\"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===$||e===j||t===j||t===$},isCombination:function(){var e=this.group,t=this.previousGroup;return e===X||t===X},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return ne(e)||(e=new Fe(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===X&&this.power.lessThan(0)?d.expand(e):e).power.lessThan(0)||e.group===V&&e.power.multiplier.lessThan(0)){var t,n=d.parse(e.multiplier.den);(t=e.toUnitMultiplier()).power.negate(),t=d.multiply(n,t)}else if(e.group===X)for(var r in t=d.parse(e.multiplier.den),e.symbols){var i=e.symbols[r];(i.power<0||i.group===V&&i.power.multiplier.lessThan(0))&&(t=d.multiply(t,e.symbols[r].clone().invert()))}else t=d.parse(e.multiplier.den);return t},getNum:function(){var t,e=this.clone();return(e=e.group===X&&e.power.lessThan(0)?d.expand(e):e).power.greaterThan(0)&&e.group!==X||e.group===V&&e.power.multiplier.greaterThan(0)?t=d.multiply(d.parse(e.multiplier.num),e.toUnitMultiplier()):e.group===X?(t=d.parse(e.multiplier.num),e.each(function(e){(0<e.power||e.group===V&&0<e.power.multiplier)&&(t=d.multiply(t,e.clone()))})):t=d.parse(e.multiplier.num),t},toString:function(){return this.text()}};var Be={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+\"\").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){T.isScientific(e)&&(e=y(e));var t=1===(n=(e=(n=\"\",\"-\"===(e=(t=\"string\"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n=\"-\"):\"+\"===e&&(t=t.substr(1,t.length)),{sign:n,value:t})).value.split(\".\")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0,n=`1${\"0\".repeat(n)}`;return\"0\"!==t&&(t=t.replace(/^0+/,\"\")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s,u=a-u;u<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ge={parser:function(){var e,t=[\"classes\",\"setOperator\",\"getOperators\",\"getBrackets\",\"tokenize\",\"toRPN\",\"tree\",\"units\"],n=new P;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:\"\\\\,\",action:\"slash_comma\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()[\"{\"].maps_to=void 0,n}(),space:\"~\",dot:\" \\\\cdot \",latex:function(e,t){if((e=e.clone?e.clone():e)instanceof d.classes.Collection&&(e=e.elements),ae(e)){for(var n=[],r=0;r<e.length;r++){var i=e[r];ne(i)||(i=d.parse(i)),n.push(this.latex(i,t))}return this.brackets(n.join(\", \"),\"square\")}if(ie(e)){for(var s=\"\\\\begin{pmatrix}\\n\",r=0;r<e.elements.length;r++){for(var o=[],a=e.elements[r],u=0;u<a.length;u++)o.push(this.latex(a[u],t));s+=o.join(\" & \"),r<e.elements.length-1&&(s+=\"\\\\\\\\\\n\")}return s+=\"\\\\end{pmatrix}\"}if(re(e)){for(s=\"\\\\left[\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\right]\"}if(se(e)){for(s=\"\\\\{\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\}\"}var l,c=\"decimal\"===t||\"decimals\"===t,p=(e=e.clone()).power,f=A(p),h=e.multiplier.lessThan(0);if(e.group===B&&c)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),l=c?[String(e.multiplier.toDecimal()),\"\"]:[e.multiplier.num,e.multiplier.den];var m,g=this.value(e,f,t,h);f&&p.negate(),c?(m=ne(p)?Ge.latex(p,t):String(p.toDecimal()),\"1\"===String(m)&&(m=\"\")):m=ne(p)?this.latex(p,t):this.formatFrac(p,!0);p=[\"\",\"\"];return p[f?1:0]=m,((h?\"-\":\"\")+this.set(l,g,p,e.group===X)).replace(/\\+\\-/gi,\"-\")},greek:{alpha:\"\\\\alpha\",beta:\"\\\\beta\",gamma:\"\\\\gamma\",delta:\"\\\\delta\",epsilon:\"\\\\epsilon\",zeta:\"\\\\zeta\",eta:\"\\\\eta\",theta:\"\\\\theta\",iota:\"\\\\iota\",kappa:\"\\\\kappa\",lambda:\"\\\\lambda\",mu:\"\\\\mu\",nu:\"\\\\nu\",xi:\"\\\\xi\",omnikron:\"\\\\omnikron\",pi:\"\\\\pi\",rho:\"\\\\rho\",sigma:\"\\\\sigma\",tau:\"\\\\tau\",upsilon:\"\\\\upsilon\",phi:\"\\\\phi\",chi:\"\\\\chi\",psi:\"\\\\psi\",omega:\"\\\\omega\",Gamma:\"\\\\Gamma\",Delta:\"\\\\Delta\",Epsilon:\"\\\\Epsilon\",Theta:\"\\\\Theta\",Lambda:\"\\\\Lambda\",Xi:\"\\\\Xi\",Pi:\"\\\\Pi\",Sigma:\"\\\\Sigma\",Phi:\"\\\\Phi\",Psi:\"\\\\Psi\",Omega:\"\\\\Omega\"},symbols:{arccos:\"\\\\arccos\",cos:\"\\\\cos\",csc:\"\\\\csc\",exp:\"\\\\exp\",ker:\"\\\\ker\",limsup:\"\\\\limsup\",min:\"\\\\min\",sinh:\"\\\\sinh\",arcsin:\"\\\\arcsin\",cosh:\"\\\\cosh\",deg:\"\\\\deg\",gcd:\"\\\\gcd\",lg:\"\\\\lg\",ln:\"\\\\ln\",Pr:\"\\\\Pr\",sqrt:\"\\\\sqrt\",sup:\"\\\\sup\",arctan:\"\\\\arctan\",cot:\"\\\\cot\",det:\"\\\\det\",hom:\"\\\\hom\",lim:\"\\\\lim\",log:\"\\\\log\",LN:\"\\\\LN\",sec:\"\\\\sec\",tan:\"\\\\tan\",arg:\"\\\\arg\",coth:\"\\\\coth\",dim:\"\\\\dim\",inf:\"\\\\inf\",liminf:\"\\\\liminf\",max:\"\\\\max\",sin:\"\\\\sin\",tanh:\"\\\\tanh\"},value:function(n,e,r,t){var i,s,o,a,u,l,c=n.group,p=n.previousGroup,f=[\"\",\"\"],h=e?1:0;if(n.isInfinity)f[h]=\"\\\\infty\";else if(c===G||c===B||p===G||p===B||p===F){(x=this.formatSubscripts(n.value)).replace&&(x=x.replace(/(.+)_$/,\"$1\\\\_\"));var m=String(x).split(\"_\"),e=this.greek[m[0]];e&&(m[0]=e,x=m.join(\"_\")),(n=this.symbols[m[0]])&&(m[0]=n,x=m.join(\"_\")),f[h]=x}else if(c===H||p===H){for(var g,d,v,w,y=[],m=n.fname,b=0;b<n.args.length;b++){var S,M=\"string\"==typeof(S=n.args[b])?S:this.latex(S,r);y.push(M)}m===z?f[h]=\"\\\\sqrt\"+this.braces(y.join(\",\")):m===Q?f[h]=this.brackets(y.join(\",\"),\"abs\"):m===Z?f[h]=this.brackets(y.join(\",\"),\"parens\"):\"limit\"===m?f[h]=\" \\\\lim\\\\limits_{\"+y[1]+\" \\\\to \"+y[2]+\"} \"+y[0]:\"integrate\"===m?f[h]=\"\\\\int\"+this.braces(y[0])+this.braces(\"d\"+y[1]):\"defint\"===m?f[h]=\"\\\\int\\\\limits_\"+this.braces(y[1])+\"^\"+this.braces(y[2])+\" \"+y[0]+\" d\"+y[3]:m===Y||m===W?((S=n.args[0]).power.equals(1)&&(S.isComposite()||S.isCombination())&&(y[0]=this.brackets(y[0])),f[h]=y[0]+(m===Y?\"!\":\"!!\")):\"floor\"===m?f[h]=\"\\\\left \\\\lfloor\"+this.braces(y[0])+\"\\\\right \\\\rfloor\":\"ceil\"===m?f[h]=\"\\\\left \\\\lceil\"+this.braces(y[0])+\"\\\\right \\\\rceil\":m===D.LOG&&1<y.length?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(y[1])+this.brackets(y[0]):m===D.LOG10?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(10)+this.brackets(y[0]):\"sum\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\sum\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"product\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\prod\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"nthroot\"===m?f[h]=\"\\\\sqrt[\"+y[1]+\"]\"+this.braces(y[0]):\"mod\"===m?f[h]=y[0]+\" \\\\bmod \"+y[1]:\"realpart\"===m?f[h]=\"\\\\operatorname{Re}\"+this.brackets(y[0]):\"imagpart\"===m?f[h]=\"\\\\operatorname{Im}\"+this.brackets(y[0]):(m=\"\"!==m?\"\\\\mathrm\"+this.braces(m.replace(/_/g,\"\\\\_\")):\"\",n.isConversion?f[h]=m+this.brackets(y.join(\"\"),\"parens\"):f[h]=m+this.brackets(y.join(\",\"),\"parens\"))}else if(n.isComposite()){for(var N=n.collectSymbols().sort(c===$||p===$?function(e,t){return t.group-e.group}:function(e,t){e=ne(e.power)?-1:e.power;return(ne(t.power)?-1:t.power)-e}),E=[],q=N.length,b=0;b<q;b++)E.push(Ge.latex(N[b],r));var x=E.join(\"+\");f[h]=n.isLinear()&&n.multiplier.equals(1)&&!t?x:this.brackets(x,\"parens\")}else c!==X&&p!==V&&p!==X||(c===X&&n.distributeExponent(),i=[],s=[],o=[],a=[],l=u=0,c=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(o)||/^\\\\left\\(.+\\\\right\\)$/g.test(o)||(e[s]=Ge.brackets(o,\"parens\"))}return e},n.each(function(e){var t;A(e.power)?(t=Ge.latex(e.invert(),r),l++,e.isComposite()&&(1!=n.multiplier.den&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),o.push(i.length)),i.push(t)):(t=Ge.latex(e,r),u++,e.isComposite()&&(1!=n.multiplier.num&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),a.push(s.length)),s.push(t))}),c(s,a,u),f[0]=s.join(this.dot),c(i,o,l),f[1]=i.join(this.dot));return f},set:function(e,t,n,r){function i(e){return/^\\\\left\\(.+\\\\right\\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=\"\"),t=this.merge(t,n);var o=e[0],n=e[1],e=t[0],t=t[1];e&&1===Number(o)&&(o=\"\"),1===Number(n)&&(n=\"\");e=this.join(o,e,i(e)?\"\":this.dot),t=this.join(n,t,i(t)?\"\":this.dot);if(e&&t){t=this.frac(e,t);return t=r&&s?this.brackets(t)+s:t}return e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:\"\"},formatSubscripts:function(e){for(var t=e.toString().split(\"_\"),n=\"\";1<t.length;)0<t.length&&(n=\"_\"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]=\"^\"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),e=e.den.toString();return t&&\"1\"===n&&\"1\"===e?\"\":\"1\"===e?n:this.frac(n,e)},frac:function(e,t){return\"\\\\frac\"+this.braces(e)+this.braces(t)},braces:function(e){return\"{\"+e+\"}\"},brackets:function(e,t){t={parens:[\"(\",\")\"],square:[\"[\",\"]\"],brace:[\"{\",\"}\"],abs:[\"|\",\"|\"],angle:[\"\\\\langle\",\"\\\\rangle\"]}[t=t||\"parens\"];return\"\\\\left\"+t[0]+e+\"\\\\right\"+t[1]},filterTokens:function(e){var t=[];ae(e)&&(t.type=e.type);for(var n=[\"\\\\\",\"left\",\"right\",\"big\",\"Big\",\"large\",\"Large\"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];\"\\\\\"===s.value&&\"\\\\\"===o.value?t.push(s):ae(s)?t.push(Ge.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ge.parse(t())}function r(e){return e in o?o[e]:\"*\"===e&&\"&\"===s[a+1].value?(t(2),\",\"):\"&\"===e?(t(),\",\"):\"\\\\\"===e?\"],[\":e}var i=\"\",s=this.filterTokens(e),o={cdot:\"\",times:\"\",infty:\"Infinity\"},a=0;for(u=s.length;a<u;a++){var u,l,c,p,f,h,m,g=s[a];\"frac\"===g.value?i+=n()+\"/\"+n():g.value in Ge.symbols?g.value===z&&\"vector\"===s[a+1].type&&\"Set\"===s[a+2].type?(f=n(),i+=n()+\"^\"+E(\"1/\"+f)):i+=g.value+n():\"int\"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+=\"integrate\"+E(h+\",\"+c)):\"int_\"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):g.value&&g.value.startsWith(\"int_\")?(u=g.value.replace(\"int_\",\"\"),console.log(\"uppernow\"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):\"mathrm\"===g.value?i+=(h=s[++a][0].value)+n():\"sum_\"===g.value||\"prod_\"===g.value?(p=\"sum_\"===g.value?\"sum\":\"product\",m=t(),a++,f=n(),h=n(),i+=p+E([h,r(m[0]),r(m[2]),r(f)].join(\",\"))):\"lim_\"===g.value?(m=t(),i+=\"limit\"+E([n(),r(m[0]),r(m[2])].join(\",\"))):\"begin\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"matrix([\")):\"end\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"])\")):Array.isArray(g)?i+=r(Ge.parse(g)):i+=r(g.value.toString())}return E(i)}};function Ve(e){re(e)?this.elements=e.items.slice(0):ae(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(ie(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],re(r)&&(r=r.elements),s=(r=!ae(r)?[r]:r).length,i&&i!==s&&K(\"Unable to create Matrix. Row dimensions do not match!\"),n.push(r),i=s;this.elements=n}function je(e){if(this.elements=[],e=!re(e)?Ve.fromArray(arguments):e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Ve.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Ve.fromArray=function(e){var t=new Ve;return t.elements=e,t},Ve.fromSet=function(e){return Ve.fromArray(e.elements)},Ve.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){ne(t)||(t=new Fe(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return ye(\"SAFE\",function(){return d.pow(this.dot(this.clone()),new Fe(.5))},void 0,this)},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;do{if(Math.abs(d.subtract(this.elements[t-1],n[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new Ve,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(n){var r=[];return this.each(function(e,t){r.push(n(e,t))}),new Ve(r)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return ye(\"SAFE\",function(){var t=this.modulus();return 0===t.valueOf()?this.clone():this.map(function(e){return d.divide(e,t)})},void 0,this)},angleFrom:function(o){return ye(\"SAFE\",function(){var n=o.elements||o;if(this.elements.length!==n.length)return null;var r=new Fe(0),i=new Fe(0),s=new Fe(0);this.each(function(e,t){r=d.add(r,d.multiply(e,n[t-1])),i=d.add(i,d.multiply(e,e)),s=d.add(s,d.multiply(n[t-1],n[t-1]))});var i=d.pow(i,new Fe(.5)),s=d.pow(s,new Fe(.5)),e=d.multiply(i,s);if(0===e.valueOf())return null;var t=d.divide(r,e),e=t.valueOf();return e<-1&&(t=-1),1<e&&(t=1),new Fe(Math.acos(t))},void 0,this)},isParallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:e<=PRECISION},isAntiparallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){e=this.dot(e);return null===e?null:Math.abs(e)<=PRECISION},add:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.add(e,n[t-1])})},void 0,this)},subtract:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.subtract(e,n[t-1])})},void 0,this)},multiply:function(t){return this.map(function(e){return e.clone()*t.clone()})},x:function(e){return this.multiply(e)},dot:function(r){return ye(\"SAFE\",function(){var e=r.elements||r,t=new Fe(0),n=this.elements.length;if(n!==e.length)return null;for(;t=d.add(t,d.multiply(this.elements[n-1],e[n-1])),--n;);return t},void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var n=this.elements;return ye(\"SAFE\",function(){return new Ve([d.subtract(d.multiply(n[1],t[2]),d.multiply(n[2],t[1])),d.subtract(d.multiply(n[2],t[0]),d.multiply(n[0],t[2])),d.subtract(d.multiply(n[0],t[1]),d.multiply(n[1],t[0]))])},void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var t=new Fe(0);return this.each(function(e){t=d.add(t,d.pow(e,new Fe(2)))}),d.sqrt(t)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Pe(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ge.latex.call(Ge,this.elements[n],e));return\"[\"+t.join(\", \")+\"]\"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Fe(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(Ve.arrayPrefill(t,new Fe(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(r,i){var s=new He;return this.each(function(e,t,n){s.set(t,n,r.call(s,e),i)}),s},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||ne(n)?n:new Fe(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,t=this.toRightTriangular(),n=t.elements[0][0],r=t.elements.length-1,i=r;n=d.multiply(n,t.elements[e=i-r+1][e]),--r;);return n},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&K(\"Cannot augment matrix. Rows don't match.\");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=ne(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||K(\"Matrix is not square!\"),ye(\"SAFE\",function(){var e,t,n,r,i,s,o,a=this.elements.length,u=a,l=He.identity(a),c=this.augment(l).toRightTriangular(),p=c.elements[0].length,f=[];do{for(i=[],n=p,f[e=a-1]=[],s=c.elements[e][e];o=d.divide(c.elements[e][r=p-n],s.clone()),i.push(o),u<=r&&f[e].push(o),--n;);for(c.elements[e]=i,t=0;t<e;t++){for(i=[],n=p;i.push(d.subtract(c.elements[t][r=p-n].clone(),d.multiply(c.elements[e][r].clone(),c.elements[t][e].clone()))),--n;);c.elements[t]=i}}while(--a);return He.fromArray(f)},void 0,this)},toRightTriangular:function(){return ye(\"SAFE\",function(){var e,t,n,r=this.clone(),i=this.elements.length,s=i,o=this.elements[0].length;do{if(0===r.elements[t=s-i][t].valueOf())for(var a=1+t;a<s;a++)if((e=r.elements[a][t])&&0!==e.valueOf()){for(l=[],c=o;l.push(d.add(r.elements[t][n=o-c].clone(),r.elements[a][n].clone())),--c;);r.elements[t]=l;break}if(0!==r.elements[t][t].valueOf())for(a=1+t;a<s;a++){for(var u=d.divide(r.elements[a][t].clone(),r.elements[t][t].clone()),l=[],c=o;l.push((n=o-c)<=t?new Fe(0):d.subtract(r.elements[a][n].clone(),d.multiply(r.elements[t][n].clone(),u.clone()))),--c;);r.elements[a]=l}}while(--i);return r},void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){e=(ie(e)?e.elements:e).length;return this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(g){return ye(\"SAFE\",function(){var e=g.elements||g;if(!this.canMultiplyFromLeft(e)){if(this.sameSize(g)){for(var t=new He,n=this.rows(),r=0;r<n;r++){var i=d.multiply(new Ve(this.elements[r]),new Ve(g.elements[r]));t.elements[r]=i.elements}return t}return null}var s,o,a,u,l,c=this.elements.length,p=c,f=e[0].length,h=this.elements[0].length,m=[];do{m[r=p-c]=[],s=f;do{for(o=f-s,a=new Fe(0),u=h;a=d.add(a,d.multiply(this.elements[r][l=h-u],e[l][o])),--u;);}while(m[r][o]=a,--s)}while(--c);return He.fromArray(m)},void 0,this)},add:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.add(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},subtract:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.subtract(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new Ve;return e.elements=this.elements,e},toString:function(e,n){var t=this.rows(),r=[];for(var i=0;i<t;i++)r.push(\"[\"+this.elements[i].map(function(e){var t=n?e.multiplier.toDecimal():e.toString();return void 0!==e?t:\"\"}).join(\",\")+\"]\");return\"matrix\"+E(r.join(\",\"))},text:function(){return\"matrix(\"+this.elements.toString(\"\")+\")\"},latex:function(i){var s=this.cols(),o=this.elements;return ce(\"\\\\begin{vmatrix}{0}\\\\end{vmatrix}\",function(){var e,t=[];for(e in o){for(var n=[],r=0;r<s;r++)n.push(Ge.latex.call(Ge,o[e][r],i));t.push(n.join(\" & \"))}return t.join(\" \\\\cr \")})}}).each=He.prototype.eachElement,je.fromArray=function(e){function t(e){return je.apply(this,e)}return t.prototype=je.prototype,new t(e)},je.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new je,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var t=new je;return this.each(function(e){t.add(e.clone())}),t},union:function(e){var t=this.clone();return e.each(function(e){t.add(e)}),t},difference:function(e){var t=this.clone();return e.each(function(e){t.remove(e)}),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return we(this.elements,t),!0;return!1},intersection:function(e){var t=new je,n=this;return e.each(function(e){n.contains(e)&&t.add(e)}),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return\"{\"+this.elements.join(\",\")+\"}\"}};var Xe={dependencies:{_rename:{\"Math2.factorial\":\"factorial\"},factorial:{\"Math2.gamma\":Te.gamma},gamma_incomplete:{\"Math2.factorial\":Te.factorial},Li:{\"Math2.Ei\":Te.Ei,\"Math2.bigLog\":Te.bigLog,Frac:De},Ci:{\"Math2.factorial\":Te.factorial},Ei:{\"Math2.factorial\":Te.factorial},Si:{\"Math2.factorial\":Te.factorial},Shi:{\"Math2.factorial\":Te.factorial},Chi:{isInt:ue,nround:me,\"Math2.num_integrate\":Te.num_integrate},factor:{\"Math2.ifactor\":Te.ifactor,Symbol:Fe},num_integrate:{\"Math2.simpson\":Te.simpson,nround:me},fib:{even:ge}},reformat:{diff:function(e,t){var n=e.args[1].toString(),e=\"var f = \"+Xe.build(e.args[0].toString(),[n])+\";\";return t[1]+=\"var diff = \"+Te.diff.toString()+\";\",t[1]+=e,[\"diff(f)(\"+n+\")\",t]}},getProperName:function(e){return{continued_fraction:\"continuedFraction\"}[e]||e},compileDependencies:function(e,t){var n,r,i=Xe.dependencies[e],s=t&&t[1]?t[1]:\"\",o=t&&t[0]?t[0]:{};for(n in i)\"object\"!=typeof i[n]&&(s+=\"var \"+(1<(r=n.split(\".\")).length?r[1]:r[0])+\"=\"+i[n]+\";\",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each(function(e){e.group===H&&(t=Xe.compileDependencies(e.fname,t))});return t},build:function(e,t){e=ye(\"PARSE2NUMBER\",function(){return d.parse(e)},!0);var n=b(e),l=[],c=[],p=function(s,o){\"\"===s.fname&&(s=Fe.unwrapPARENS(s)),o=o||[];function e(e){return e=e in Math?\"Math.\"+e:(e=Xe.getProperName(e),-1===l.indexOf(e)&&(o.push(\"var \"+e+\" = \"+Te[e].toString()+\"; \"),l.push(e)),e),e+=E(s.args.map(function(e){return p(e,o)[0]}).join(\",\"))}var t,n,r=[],i=s.group,a=\"\",u=function(e){var t,e=e===X?\"*\":\"+\",n=[];for(t in s.symbols){var r=s.symbols[t],i=p(r,o)[0];r.isComposite()&&(i=E(i)),n.push(i)}e=n.join(e);return e=e&&!s.multiplier.equals(1)?E(e):e};return i===F?r.push(s.multiplier.toDecimal()):s.multiplier.equals(-1)?a=\"-\":s.multiplier.equals(1)||r.push(s.multiplier.toDecimal()),i===G||i===B?t=s.value:i===H?(c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c),t=Xe.reformat[s.fname]?(n=Xe.reformat[s.fname](s,c),c=n[1],n[0]):e(s.fname)):i===V?(i=s.previousGroup)===F||i===G?t=s.value:i===H?(t=e(s.fname),c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c)):t=u(s.previousGroup):t=u(s.group),s.group===F||s.power.equals(1)||(u=p(d.parse(s.power)),o.push(u[1]),t=\"Math.pow\"+E(t+\",\"+u[0])),t&&r.push(a+t),[r.join(\"*\"),o.join(\"\").replace(/\\n+\\s+/g,\" \")]};t&&(n=t);var r,i=p(e);for(r in c[0]){var s=c[0][r];i[1]=i[1].replace(r,s),c[1]=c[1].replace(r,s)}return new Function(n,(c[1]||\"\")+i[1]+\" return \"+i[0]+\";\")}};x(d.CONSTANTS),x(d.functions),d.initConstants(),d.error||(d.error=K),D.LOG_FNS={log:d.functions.log,log10:d.functions.log10};function $e(n,e,r,t){var i=!1,s=/^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(n);return s?nerdamer.setFunction(s[1],s[2].split(\",\"),s[3]):(n instanceof R&&(n=n.toString()),(r=!ae(r)?void 0===r?[]:[r]:r).forEach(function(e){var t;\"numer\"!==e?(t=d.functions[r])&&1===t[1]&&(n=`${e}(${n})`):i=!0}),s=ye(\"PARSE2NUMBER\",function(){return d.parse(n,e)},i||D.PARSE2NUMBER),t?p[t-1]=s:p.push(s),new R(s))}var x={allSame:w,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!te(e[t]))return!1;return!0},arguments2Array:be,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:c,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:a,arrayGetVariables:function(e){for(var t=b(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(b(e[n]));return t=a(t).sort()},arraySum:function(e,t){for(var n=new Fe(0),r=0;r<e.length;r++)var i=e[r],n=d.add(n,ne(i)?i:d.parse(i));return t?Number(n):n},block:ye,build:Xe.build,clearU:function(e){e=f.indexOf(e);-1!==e&&(f[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort(function(e,t){return e[0]-t[0]});for(var s=[],o=[],i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,t,n){for(var r,i={},s=0;s<n.length;s++)i[n[s]]=new Fe(Math.floor(5*Math.random())+1);return ye(\"PARSE2NUMBER\",function(){r=d.parse(e,i).equals(d.parse(t,i))}),r},convertToVector:C,customError:n,customType:function(e){return void 0!==e&&e.custom},decompose_fn:he,each:s,evaluate:Se,even:ge,evenFraction:de,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Fe(0));return e},firstObject:pe,format:ce,generatePrimes:u,getCoeffs:function(e,r,t){var i=[];e.each(function(e){var t,n=e.contains(r)?(t=e.stripVar(r),d.divide(e.clone(),t.clone()).power.toDecimal()):(t=e,0),e=i[n];i[n]=e?d.add(e,t):t},!0);for(var n=0;n<i.length;n++)i[n]||(i[n]=new Fe(0));return i},getU:function(e){for(var t=\"u\",n=0,r=b(e);-1!==f.indexOf(t)||-1!==r.indexOf(t);)t=\"u\"+n++;for(var i=0,s=f.length;i<=s;i++)if(!f[i]){f[i]=t;break}return t},importFunctions:function(){var e,t={};for(e in d.functions)t[e]=d.functions[e][0];return t},inBrackets:E,isArray:ae,isExpression:i,isFraction:v,isInt:ue,isMatrix:ie,isNegative:A,isNumericSymbol:oe,isPrime:g,isReserved:r,isSymbol:ne,isVariableSymbol:function(e){return e.group===G&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:re,keys:q,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var t,n;if(e.group===H&&\"\"===e.fname?(t=Fe.unwrapPARENS(d.parse(e).toLinear()),n=d.parse(e.power)):e.group===B&&(t=d.parse(e.value),n=d.parse(e.power)),t&&n&&t.group===F&&n.group===F&&t.multiplier.isNegative()){for(var r=[],i=Fe.toPolarFormArray(Se(e))[0],s=d.arg(t),o=n.multiplier.den.toString(),a=n.multiplier.num.toString(),u=0;u<o;u++){var l=Se(d.parse(ce(\"(({0})+2*pi*({1}))/({2})\",s,u,o))).multiplier.toDecimal();r.push(Se(d.parse(ce(\"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\",i,o,D.IMAGINARY,l,a))))}return Ve.fromArray(r)}return e.isConstant(!0,!0)?(t=e.sign(),s=Se(e.abs()),r=[(n=d.sqrt(s)).clone(),n.negate()],t<0&&(r=r.map(function(e){return d.multiply(e,Fe.imaginary())}))):r=[d.parse(e)],Ve.fromArray(r)},remove:we,reserveNames:x,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:me,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:y,separate:N,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Pe,validateName:m,variables:b,warn:ee},Ze={groups:t,Symbol:Fe,Expression:R,Frac:De,Vector:Ve,Matrix:He,Parser:P,Scientific:T,Fraction:Be,Math2:Te,LaTeX:Ge,Utils:x,PARSER:d,PARENTHESIS:Z,Settings:D,err:K,bigInt:S,bigDec:k,exceptions:e};return $e.rpn=function(e){return d.tokenize(d.toRPN(e))},$e.convertToLaTeX=function(e,t){return d.toTeX(e,t)},$e.convertFromLaTeX=function(e){e=Ge.parse(d.tokenize(e));return new R(d.parse(e))},$e.version=function(t){if(t)try{return Ze[t].version}catch(e){return\"No module named \"+t+\" found!\"}return\"1.1.13\"},$e.getWarnings=function(){return h},$e.setConstant=function(e,t){if(m(e),!r(e))if(\"delete\"===t||\"\"===t)delete d.CONSTANTS[e];else{if(isNaN(t))throw new I(\"Constant must be a number!\");d.CONSTANTS[e]=t}return this},$e.getConstant=function(e){return String(d.constant[e])},$e.setFunction=fe,$e.getCore=function(){return Ze},$e.getExpression=$e.getEquation=R.getExpression,$e.reserved=function(e){return e?f:f.join(\", \")},$e.clear=function(e,t){return\"all\"===e?p=[]:\"last\"===e?p.pop():\"first\"===e?p.shift():(e=e?e-1:p.length,!0===t?p[e]=void 0:we(p,e)),this},$e.flush=function(){return this.clear(\"all\"),this},$e.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<p.length;i++){var s=t?Ge.latex(p[i],n):Pe(p[i],n);e?r[i+1]=s:r.push(s)}return r},$e.register=function(e){var t=this.getCore();if(ae(e))for(var n=0;n<e.length;n++)e&&this.register(e[n]);else if(e&&-1===D.exclude.indexOf(e.name)){if(e.dependencies)for(n=0;n<e.dependencies.length;n++)if(!t[e.dependencies[n]])throw new Error(ce(\"{0} requires {1} to be loaded!\",e.name,e.dependencies[n]));var r=e.parent,i=e.build.call(t);r&&(t[r]||(t[e.parent]={}),(\"nerdamer\"===r?this:t[r])[e.name]=i),e.visible&&(d.functions[e.name]=[i,e.numargs])}},$e.validateName=m,$e.validVarName=function(e){try{return m(e),-1===f.indexOf(e)}catch(e){return!1}},$e.supported=function(){return q(d.functions)},$e.numEquations=$e.numExpressions=function(){return p.length},$e.setVar=function(e,t){return m(e),e in d.CONSTANTS&&K(\"Cannot set value for constant \"+e),\"delete\"===t||\"\"===t?delete J[e]:J[e]=ne(t)?t:d.parse(t),this},$e.getVar=function(e){return J[e]},$e.clearVars=function(){return J={},this},$e.load=function(e){return e.call(this),this},$e.getVars=function(e,t){var n={};if(\"object\"===(e=e||\"text\"))n=J;else for(var r in J)\"latex\"===e?n[r]=J[r].latex(t):\"text\"===e&&(n[r]=J[r].text(t));return n},$e.set=function(e,t){if(\"object\"==typeof e)for(var n in e)$e.set(n,e[n]);-1!==[\"SAFE\"].indexOf(e)&&K(\"Cannot modify setting: \"+e),\"PRECISION\"===e?(k.set({precision:t}),21<(D.PRECISION=t)&&this.set(\"USE_BIG\",!0)):\"USE_LN\"===e&&!0===t?(D.LOG=\"LN\",D.LOG10=\"log\",d.functions.log=D.LOG_FNS.log10,d.functions.log[0]=function(e){return e.isConstant()?new Fe(Math.log10(e)):d.symfunction(D.LOG10,[e])},d.functions.LN=D.LOG_FNS.log,delete d.functions.log10):D[e]=t},$e.get=function(e){return D[e]},$e.updateAPI=function(e){for(var t in d.functions)t in $e&&!e||($e[t]=function(n){return function(){for(var e=[].slice.call(arguments),t=0;t<e.length;t++)e[t]=d.parse(e[t]);return new R(ye(\"PARSE2NUMBER\",function(){return d.callfunction(n,e)}))}}(t))},$e.replaceFunction=function(e,t,n){var r=d.functions[e],n=void 0===n?r[1]:n;d.functions[e]=[t.call(void 0,r[0],Ze),n]},$e.setOperator=function(e,t){d.setOperator(e,t)},$e.getOperator=function(e){return d.getOperator(e)},$e.aliasOperator=function(e,t){d.aliasOperator(e,t)},$e.tree=function(e){return d.tree(d.toRPN(d.tokenize(e)))},$e.htmlTree=function(e,t){return'<div class=\"tree\">\\n    <ul>\\n        <li>\\n'+this.tree(e).toHTML(3,t)+\"\\n        </li>\\n    </ul>\\n</div>\"},$e.addPeeker=function(e,t){d.peekers[e]&&d.peekers[e].push(t)},$e.removePeeker=function(e,t){we(d.peekers[e],t)},$e.parse=function(e){return String(e).split(\";\").map(function(e){return d.parse(e)})},$e.updateAPI(),$e}({bigInt:function(){var Q=function(o){\"use strict\";var v=1e7,l=7,t=9007199254740992,n=m(t),c=Math.log(t);function u(e,t){return void 0===e?u[0]:void 0===t||10==+t?z(e):V(e,t)}function p(e,t){this.value=e,this.sign=t,this.isSmall=!1}function f(e){this.value=e,this.sign=e<0,this.isSmall=!0}function h(e){return-t<e&&e<t}function m(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function w(e){g(e);var t=e.length;if(t<4&&C(e,n)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*v;default:return e[0]+(e[1]+e[2]*v)*v}return e}function g(e){for(var t=e.length;0===e[--t];);e.length=t+1}function y(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function d(e){return 0<e?Math.floor(e):Math.ceil(e)}function r(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)n=e[u]+t[u]+o,s[u]=n-(o=a<=n?1:0)*a;for(;u<r;)n=e[u]+o,s[u++]=n-(o=n===a?1:0)*a;return 0<o&&s.push(o),s}function b(e,t){return e.length>=t.length?r(e,t):r(t,e)}function i(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0;o<r;o++)n=e[o]-s+t,t=Math.floor(n/s),i[o]=n-t*s,t+=1;for(;0<t;)i[o++]=t%s,t=Math.floor(t/s);return i}function S(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)o=(n=e[u]-o-t[u])<0?(n+=a,1):0,s[u]=n;for(u=i;u<r;u++){if(!((n=e[u]-o)<0)){s[u++]=n;break}n+=a,s[u]=n}for(;u<r;u++)s[u]=e[u];return g(s),s}function s(e,t,n){for(var r,i=e.length,s=new Array(i),o=-t,a=v,u=0;u<i;u++)r=e[u]+o,o=Math.floor(r/a),s[u]=(r%=a)<0?r+a:r;return\"number\"==typeof(s=w(s))?new f(s=n?-s:s):new p(s,n)}function M(e,t){for(var n,r,i=e.length,s=t.length,o=y(i+s),a=v,u=0;u<i;++u)for(var l=e[u],c=0;c<s;++c)n=l*t[c]+o[u+c],r=Math.floor(n/a),o[u+c]=n-r*a,o[u+c+1]+=r;return g(o),o}function N(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0,a=0;a<r;a++)n=e[a]*t+o,o=Math.floor(n/s),i[a]=n-o*s;for(;0<o;)i[a++]=o%s,o=Math.floor(o/s);return i}function E(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function a(e,t,n){return new p(e<v?N(t,e):M(t,m(e)),n)}function q(e){for(var t,n=e.length,r=y(n+n),i=v,s=0;s<n;s++){for(var o,a=0-(o=e[s])*o,u=s;u<n;u++)t=o*e[u]*2+r[s+u]+a,a=Math.floor(t/i),r[s+u]=t-a*i;r[s+n]=a}return g(r),r}function x(e,t){for(var n,r=e.length,i=y(r),s=v,o=0,a=r-1;0<=a;--a)o=(n=o*s+e[a])-(n=d(n/t))*t,i[a]=0|n;return[i,0|o]}function A(e,t){var n=z(t),r=e.value,i=n.value;if(0===i)throw new Error(\"Cannot divide by zero\");if(e.isSmall)return n.isSmall?[new f(d(r/i)),new f(r%i)]:[u[0],e];if(n.isSmall){if(1===i)return[e,u[0]];if(-1==i)return[e.negate(),u[0]];var s=Math.abs(i);if(s<v){var o=w((a=x(r,s))[0]),t=a[1];return e.sign&&(t=-t),\"number\"==typeof o?[new f(o=e.sign!==n.sign?-o:o),new f(t)]:[new p(o,e.sign!==n.sign),new f(t)]}i=m(s)}s=C(r,i);if(-1===s)return[u[0],e];if(0===s)return[u[e.sign===n.sign?1:-1],u[0]];o=(a=(r.length+i.length<=200?function(e,t){var n,r,i,s,o,a,u,l=e.length,c=t.length,p=v,f=y(t.length),h=t[c-1],m=Math.ceil(p/(2*h)),g=N(e,m),d=N(t,m);for(g.length<=l&&g.push(0),d.push(0),h=d[c-1],r=l-c;0<=r;r--){for(n=p-1,g[r+c]!==h&&(n=Math.floor((g[r+c]*p+g[r+c-1])/h)),a=d.length,o=s=i=0;o<a;o++)i+=n*d[o],u=Math.floor(i/p),s+=g[r+o]-(i-u*p),i=u,s=s<0?(g[r+o]=s+p,-1):(g[r+o]=s,0);for(;0!==s;){for(--n,o=i=0;o<a;o++)i=(i+=g[r+o]-p+d[o])<0?(g[r+o]=i+p,0):(g[r+o]=i,1);s+=i}f[r]=n}return g=x(g,m)[0],[w(f),w(g)]}:function(e,t){for(var n,r,i,s,o,a=e.length,u=t.length,l=[],c=[],p=v;a;)if(c.unshift(e[--a]),g(c),C(c,t)<0)l.push(0);else{for(i=c[(r=c.length)-1]*p+c[r-2],s=t[u-1]*p+t[u-2],u<r&&(i=(i+1)*p),n=Math.ceil(i/s);!(C(o=N(t,n),c)<=0)&&--n;);l.push(n),c=S(c,o)}return l.reverse(),[w(l),w(c)]})(r,i))[0];var n=e.sign!==n.sign,a=a[1],e=e.sign;return[o=\"number\"==typeof o?new f(o=n?-o:o):new p(o,n),a=\"number\"==typeof a?new f(a=e?-a:a):new p(a,e)]}function C(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function L(e){e=e.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function I(e,t){for(var n,r,i,s=e.prev(),o=s,a=0;o.isEven();)o=o.divide(2),a++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=Q(t[r]).modPow(o,e)).equals(u[1])&&!i.equals(s)){for(n=a-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(s))continue e}return!1}return!0}p.prototype=Object.create(u.prototype),f.prototype=Object.create(u.prototype),p.prototype.plus=p.prototype.add=function(e){var t=z(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,e=t.value;return t.isSmall?new p(i(n,Math.abs(e)),this.sign):new p(b(n,e),this.sign)},f.prototype.plus=f.prototype.add=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());e=t.value;if(t.isSmall){if(h(n+e))return new f(n+e);e=m(Math.abs(e))}return new p(i(e,Math.abs(n)),n<0)},p.prototype.minus=p.prototype.subtract=function(e){var t=z(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value,e=t.value;return t.isSmall?s(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=C(t,r)?n=S(t,r):(n=S(r,t),e=!e),\"number\"==typeof(n=w(n))?new f(n=e?-n:n):new p(n,e))},f.prototype.minus=f.prototype.subtract=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());e=t.value;return t.isSmall?new f(n-e):s(e,Math.abs(n),0<=n)},p.prototype.negate=function(){return new p(this.value,!this.sign)},f.prototype.negate=function(){var e=this.sign,t=new f(-this.value);return t.sign=!e,t},p.prototype.abs=function(){return new p(this.value,!1)},f.prototype.abs=function(){return new f(Math.abs(this.value))},p.prototype.times=p.prototype.multiply=function(e){var t,n=z(e),r=this.value,i=n.value,e=this.sign!==n.sign;if(n.isSmall){if(0===i)return u[0];if(1===i)return this;if(-1===i)return this.negate();if((t=Math.abs(i))<v)return new p(N(r,t),e);i=m(t)}return n=r.length,t=i.length,new p((0<-.012*n-.012*t+15e-6*n*t?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return M(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r),t=e(s,a),n=e(i,o),o=e(b(s,i),b(a,o)),r=b(b(t,E(S(S(o,t),n),r)),E(n,2*r));return g(r),r}:M)(r,i),e)},f.prototype._multiplyBySmall=function(e){return h(e.value*this.value)?new f(e.value*this.value):a(Math.abs(e.value),m(Math.abs(this.value)),this.sign!==e.sign)},p.prototype._multiplyBySmall=function(e){return 0===e.value?u[0]:1===e.value?this:-1===e.value?this.negate():a(Math.abs(e.value),this.value,this.sign!==e.sign)},f.prototype.times=f.prototype.multiply=function(e){return z(e)._multiplyBySmall(this)},p.prototype.square=function(){return new p(q(this.value),!1)},f.prototype.square=function(){var e=this.value*this.value;return h(e)?new f(e):new p(q(m(Math.abs(this.value))),!1)},f.prototype.divmod=p.prototype.divmod=function(e){e=A(this,e);return{quotient:e[0],remainder:e[1]}},f.prototype.over=f.prototype.divide=p.prototype.over=p.prototype.divide=function(e){return A(this,e)[0]},f.prototype.remainder=f.prototype.mod=p.prototype.remainder=p.prototype.mod=function(e){return A(this,e)[1]},p.prototype.pow=function(e){var t,n,r,i=z(e),e=this.value,s=i.value;if(0===s)return u[1];if(0===e)return u[0];if(1===e)return u[1];if(-1===e)return i.isEven()?u[1]:u[-1];if(i.sign)return u[0];if(!i.isSmall)throw new Error(\"The exponent \"+i.toString()+\" is too large.\");if(this.isSmall&&h(t=Math.pow(e,s)))return new f(d(t));for(n=this,r=u[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},f.prototype.pow=p.prototype.pow,f.prototype.modPow=p.prototype.modPow=function(e,t){if(e=z(e),(t=z(t)).isZero())throw new Error(\"Cannot take modPow with modulus 0\");for(var n=u[1],r=this.mod(t);e.isPositive();){if(r.isZero())return u[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},p.prototype.compareAbs=function(e){var t=z(e),n=this.value,e=t.value;return t.isSmall?1:C(n,e)},f.prototype.compareAbs=function(e){var t=z(e),n=Math.abs(this.value),e=t.value;return t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},p.prototype.compareTo=p.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:C(n,e)*(this.sign?-1:1)},f.prototype.compareTo=f.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},f.prototype.eq=f.prototype.equals=p.prototype.eq=p.prototype.equals=function(e){return 0===this.compare(e)},f.prototype.neq=f.prototype.notEquals=p.prototype.neq=p.prototype.notEquals=function(e){return 0!==this.compare(e)},f.prototype.gt=f.prototype.greater=p.prototype.gt=p.prototype.greater=function(e){return 0<this.compare(e)},f.prototype.lt=f.prototype.lesser=p.prototype.lt=p.prototype.lesser=function(e){return this.compare(e)<0},f.prototype.geq=f.prototype.greaterOrEquals=p.prototype.geq=p.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},f.prototype.leq=f.prototype.lesserOrEquals=p.prototype.leq=p.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},p.prototype.isEven=function(){return 0==(1&this.value[0])},f.prototype.isEven=function(){return 0==(1&this.value)},p.prototype.isOdd=function(){return 1==(1&this.value[0])},f.prototype.isOdd=function(){return 1==(1&this.value)},p.prototype.isPositive=function(){return!this.sign},f.prototype.isPositive=function(){return 0<this.value},p.prototype.isNegative=function(){return this.sign},f.prototype.isNegative=function(){return this.value<0},p.prototype.isUnit=function(){return!1},f.prototype.isUnit=function(){return 1===Math.abs(this.value)},p.prototype.isZero=function(){return!1},f.prototype.isZero=function(){return 0===this.value},f.prototype.isDivisibleBy=p.prototype.isDivisibleBy=function(e){var t=z(e),e=t.value;return 0!==e&&(1===e||(2===e?this.isEven():this.mod(t).equals(u[0])))},f.prototype.isPrime=p.prototype.isPrime=function(e){var t=L(this);if(t!==o)return t;var n=this.abs(),t=n.bitLength();if(t<=64)return I(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var t=Math.log(2)*t,r=Math.ceil(!0===e?2*Math.pow(t,2):t),i=[],s=0;s<r;s++)i.push(Q(s+2));return I(n,i)},f.prototype.isProbablePrime=p.prototype.isProbablePrime=function(e){var t=L(this);if(t!==o)return t;for(var n=this.abs(),r=e===o?5:e,i=[],s=0;s<r;s++)i.push(Q.randBetween(2,n.minus(2)));return I(n,i)},f.prototype.modInv=p.prototype.modInv=function(e){for(var t,n,r=Q.zero,i=Q.one,s=z(e),o=this.abs();!o.equals(Q.zero);)t=s.divide(o),n=s,s=o,i=r.subtract(t.multiply(r=i)),o=n.subtract(t.multiply(o));if(!s.equals(1))throw new Error(this.toString()+\" and \"+e.toString()+\" are not co-prime\");return-1===r.compare(0)&&(r=r.add(e)),this.isNegative()?r.negate():r},p.prototype.next=function(){var e=this.value;return this.sign?s(e,1,this.sign):new p(i(e,1),this.sign)},f.prototype.next=function(){var e=this.value;return e+1<t?new f(e+1):new p(n,!1)},p.prototype.prev=function(){var e=this.value;return this.sign?new p(i(e,1),!0):s(e,1,this.sign)},f.prototype.prev=function(){var e=this.value;return-t<e-1?new f(e-1):new p(n,!0)};for(var U=[1];2*U[U.length-1]<=v;)U.push(2*U[U.length-1]);var _=U.length,O=U[_-1];function R(e){return(\"number\"==typeof e||\"string\"==typeof e)&&+Math.abs(e)<=v||e instanceof p&&e.value.length<=1}function T(e,t,n){t=z(t);for(var r=e.isNegative(),i=t.isNegative(),s=r?e.not():e,o=i?t.not():t,a=0,u=0,l=null,c=null,p=[];!s.isZero()||!o.isZero();)a=(l=A(s,O))[1].toJSNumber(),r&&(a=O-1-a),u=(c=A(o,O))[1].toJSNumber(),s=l[0],o=c[0],p.push(n(a,u=i?O-1-u:u));for(var f=0!==n(r?1:0,i?1:0)?Q(-1):Q(0),h=p.length-1;0<=h;--h)f=f.multiply(O).add(Q(p[h]));return f}f.prototype.shiftLeft=p.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;_<=e;)t=t.multiply(O),e-=_-1;return t.multiply(U[e])},f.prototype.shiftRight=p.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;_<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,O))[1].isNegative()?t[0].prev():t[0],e-=_-1}return(t=A(n,U[e]))[1].isNegative()?t[0].prev():t[0]},f.prototype.not=p.prototype.not=function(){return this.negate().prev()},f.prototype.and=p.prototype.and=function(e){return T(this,e,function(e,t){return e&t})},f.prototype.or=p.prototype.or=function(e){return T(this,e,function(e,t){return e|t})},f.prototype.xor=p.prototype.xor=function(e){return T(this,e,function(e,t){return e^t})};var P=1<<30,k=(v&-v)*(v&-v)|P;function D(e){e=e.value,e=\"number\"==typeof e?e|P:e[0]+e[1]*v|k;return e&-e}function F(e,t){return e=z(e),t=z(t),e.greater(t)?e:t}function B(e,t){return e=z(e),t=z(t),e.lesser(t)?e:t}function G(e,t){if(e=z(e).abs(),t=z(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=u[1];e.isEven()&&t.isEven();)n=Math.min(D(e),D(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(D(e));do{for(;t.isEven();)t=t.divide(D(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}f.prototype.bitLength=p.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(Q(0))<0?e.negate().subtract(Q(1)):e).compareTo(Q(0))?Q(0):Q(function e(t,n){if(n.compareTo(t)<=0){var r=e(t,n.square(n)),i=r.p,r=r.e,n=i.multiply(n);return n.compareTo(t)<=0?{p:n,e:2*r+1}:{p:i,e:2*r}}return{p:Q(1),e:0}}(e,Q(2)).e).add(Q(1))};var V=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if(\"-\"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if(\"1\"!==s||1!==r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}if(2<=t&&t<=36&&n<=c/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(s+\" is not a valid digit in base \"+t+\".\");return new f(parseInt(e,t))}t=z(t);var a=[],o=\"-\"===e[0];for(i=o?1:0;i<e.length;i++){var u=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=u&&u<=57)a.push(z(s));else if(97<=u&&u<=122)a.push(z(s.charCodeAt(0)-87));else{if(\"<\"!==s)throw new Error(s+\" is not a valid character\");for(u=i;\">\"!==e[++i];);a.push(z(e.slice(u+1,i)))}}return H(a,t,o)};function H(e,t,n){for(var r=u[0],i=u[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function j(e){return e<=35?\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(e):\"<\"+e+\">\"}function X(e,t){if((t=Q(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var r=[],i=e;i.isNegative()||0<=i.compareAbs(t);){var i=(s=i.divmod(t)).quotient,s=s.remainder;s.isNegative()&&(s=t.minus(s).abs(),i=i.next()),r.push(s.toJSNumber())}return r.push(i.toJSNumber()),{value:r.reverse(),isNegative:n}}function $(e,t){t=X(e,t);return(t.isNegative?\"-\":\"\")+t.value.map(j).join(\"\")}function Z(e){if(h(+e)){var t=+e;if(t===d(t))return new f(t);throw new Error(\"Invalid integer: \"+e)}var n=\"-\"===e[0],r=(e=n?e.slice(1):e).split(/e/i);if(2<r.length)throw new Error(\"Invalid integer: \"+r.join(\"e\"));if(2===r.length){var i=r[1];if((i=+(i=\"+\"===i[0]?i.slice(1):i))!==d(i)||!h(i))throw new Error(\"Invalid integer: \"+i+\" is not a valid exponent.\");t=r[0],r=t.indexOf(\".\");if(0<=r&&(i-=t.length-r-1,t=t.slice(0,r)+t.slice(r+1)),i<0)throw new Error(\"Cannot include negative exponent part for integers\");e=t+=new Array(i+1).join(\"0\")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error(\"Invalid integer: \"+e);for(var s=[],o=e.length,a=l,u=o-a;0<o;)s.push(+e.slice(u,o)),(u-=a)<0&&(u=0),o-=a;return g(s),new p(s,n)}function z(e){return\"number\"==typeof e?function(e){if(h(e)){if(e!==d(e))throw new Error(e+\" is not an integer.\");return new f(e)}return Z(e.toString())}(e):\"string\"==typeof e?Z(e):e}p.prototype.toArray=function(e){return X(this,e)},f.prototype.toArray=function(e){return X(this,e)},p.prototype.toString=function(e){if(10!==(e=e===o?10:e))return $(this,e);for(var t,n=this.value,r=n.length,i=String(n[--r]);0<=--r;)t=String(n[r]),i+=\"0000000\".slice(t.length)+t;return(this.sign?\"-\":\"\")+i},f.prototype.toString=function(e){return 10!=(e=e===o?10:e)?$(this,e):String(this.value)},p.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()},p.prototype.toJSNumber=p.prototype.valueOf=function(){return parseInt(this.toString(),10)},f.prototype.toJSNumber=f.prototype.valueOf=function(){return this.value};for(var e=0;e<1e3;e++)u[e]=new f(e),0<e&&(u[-e]=new f(-e));return u.one=u[1],u.zero=u[0],u.minusOne=u[-1],u.max=F,u.min=B,u.gcd=G,u.lcm=function(e,t){return e=z(e).abs(),t=z(t).abs(),e.divide(G(e,t)).multiply(t)},u.isInstance=function(e){return e instanceof p||e instanceof f},u.randBetween=function(e,t){var n=B(e=z(e),t=z(t)),r=F(e,t).subtract(n).add(1);if(r.isSmall)return n.add(Math.floor(Math.random()*r));for(var i=[],s=!0,o=r.value.length-1;0<=o;o--){var a=s?r.value[o]:v,u=d(Math.random()*a);i.unshift(u),u<a&&(s=!1)}return i=w(i),n.add(\"number\"==typeof i?new f(i):new p(i,!1))},u.fromArray=function(e,t,n){return H(e.map(z),z(t||10),n)},u}();return\"undefined\"!=typeof module&&module.hasOwnProperty(\"exports\")&&(module.exports=Q),\"function\"==typeof define&&define.amd&&define(\"big-integer\",[],function(){return Q}),Q}(),bigDec:function(e){\"use strict\";var c,L,t,s,o=9e15,m=1e9,g=\"0123456789abcdef\",r=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",i=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},y=!0,u=\"[DecimalError] \",d=u+\"Invalid argument: \",l=u+\"Precision limit exceeded\",p=u+\"crypto unavailable\",I=Math.floor,v=Math.pow,f=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,h=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,w=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,U=1e7,_=7,S=r.length-1,M=i.length-1,N={name:\"[object Decimal]\"};function E(e){var t,n,r,i=e.length-1,s=\"\",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+\"\",(n=_-r.length)&&(s+=V(n)),s+=r;o=e[t],(n=_-(r=o+\"\").length)&&(s+=V(n))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function q(e,t,n){if(e!==~~e||e<t||n<e)throw Error(d+e)}function x(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=_,i=0):(i=Math.ceil((t+1)/_),t%=_),o=v(10,_-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==v(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==v(10,t-3)-1}function A(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=g.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}N.absoluteValue=N.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},N.ceil=function(){return P(new this.constructor(this),this.e+1,2)},N.comparedTo=N.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},N.cosine=N.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length,r=r<32?(1/Y(4,n=Math.ceil(r/3))).toString():(n=16,\"2.3283064365386962890625e-10\");e.precision+=n,t=Q(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2==s||3==s?n.neg():n,e,t,!0)):new r(1):new r(NaN)},N.cubeRoot=N.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(y=!1,(s=c.s*v(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=E(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?\"0\":\"00\"),s=v(n,1/3),e=I((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?\"5e\"+e:(n=s.toExponential()).slice(0,n.indexOf(\"e\")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=C(l.plus(c).times(a),l.plus(u),o+2,1),E(a.d).slice(0,o)===(n=E(r.d)).slice(0,o)){if(\"9999\"!=(n=n.slice(o-3,o+1))&&(i||\"4999\"!=n)){+n&&(+n.slice(1)||\"5\"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(P(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return y=!0,P(r,e,p.rounding,t)},N.decimalPlaces=N.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-I(this.e/_))*_,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},N.dividedBy=N.div=function(e){return C(this,new this.constructor(e))},N.dividedToIntegerBy=N.divToInt=function(e){var t=this.constructor;return P(C(this,new t(e),0,1,1),t.precision,t.rounding)},N.equals=N.eq=function(e){return 0===this.cmp(e)},N.floor=function(){return P(new this.constructor(this),this.e+1,3)},N.greaterThan=N.gt=function(e){return 0<this.cmp(e)},N.greaterThanOrEqualTo=N.gte=function(e){e=this.cmp(e);return 1==e||0===e},N.hyperbolicCosine=N.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/Y(4,e=Math.ceil(o/3))).toString():(e=16,\"2.3283064365386962890625e-10\"),a=Q(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return P(a,r.precision=t,r.rounding=n,!0)},N.hyperbolicSine=N.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=Q(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=Q(r,2,o=o.times(1/Y(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return P(o,r.precision=e,r.rounding=t,!0)},N.hyperbolicTangent=N.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,C(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},N.inverseCosine=N.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?B(t,r,i):new t(0):new t(NaN):e.isZero()?B(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=B(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},N.inverseHyperbolicCosine=N.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,y=!1,n=n.times(n).minus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},N.inverseHyperbolicSine=N.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,y=!1,n=n.times(n).plus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln())},N.inverseHyperbolicTangent=N.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?P(new i(r),e,t,!0):(i.precision=n=n-r.e,r=C(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},N.inverseSine=N.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=B(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},N.inverseTangent=N.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=M)return(o=B(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=M)return(o=B(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/_+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(y=!1,t=Math.ceil(a/_),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),y=!0,P(o,c.precision=p,c.rounding=f,!0)},N.isFinite=function(){return!!this.d},N.isInteger=N.isInt=function(){return!!this.d&&I(this.e/_)>this.d.length-2},N.isNaN=function(){return!this.s},N.isNegative=N.isNeg=function(){return this.s<0},N.isPositive=N.isPos=function(){return 0<this.s},N.isZero=function(){return!!this.d&&0===this.d[0]},N.lessThan=N.lt=function(e){return this.cmp(e)<0},N.lessThanOrEqualTo=N.lte=function(e){return this.cmp(e)<1},N.logarithm=N.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(y=!1,o=$(this,a=c+5),r=t?F(l,a+10):$(e,a),x((u=C(o,r,a,1)).d,i=c,p))do{if(o=$(this,a+=10),r=t?F(l,a+10):$(e,a),u=C(o,r,a,1),!s){+E(u.d).slice(i+1,i+15)+1==1e14&&(u=P(u,c+1,0));break}}while(x(u.d,i+=10,p));return y=!0,P(u,c,p)},N.minus=N.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f=this,h=f.constructor;if(e=new h(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new h(e.d||f.s!==e.s?f:NaN):e=new h(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,p=e.d,a=h.precision,u=h.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(f)}return y?P(e,a,u):e}if(n=I(e.e/_),f=I(f.e/_),l=l.slice(),s=f-n){for(o=(c=s<0)?(t=l,s=-s,p.length):(t=p,n=f,l.length),s>(r=Math.max(Math.ceil(a/_),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){c=l[r]<p[r];break}s=0}for(c&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;0<r;--r)l[o++]=0;for(r=p.length;s<r;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=U-1;--l[i],l[r]+=U}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=D(l,n),y?P(e,a,u):e):new h(3===u?-0:0)},N.modulo=N.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(y=!1,9==r.modulo?(t=C(n,e.abs(),0,3,1)).s*=e.s:t=C(n,e,0,r.modulo,1),t=t.times(e),y=!0,n.minus(t))},N.naturalExponential=N.exp=function(){return X(this)},N.naturalLogarithm=N.ln=function(){return $(this)},N.negated=N.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},N.plus=N.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),y?P(e,s,o):e;if(c=I(l.e/_),l=I(e.e/_),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/_))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/U|0,a[r]%=U;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=D(a,l),y?P(e,s,o):e},N.precision=N.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(d+e);return this.d?(t=G(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},N.round=function(){var e=this.constructor;return P(new e(this),this.e+1,e.rounding)},N.sine=N.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Q(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=Q(e,2,t=t.times(1/Y(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2<s?n.neg():n,e,t,!0)):new r(NaN)},N.squareRoot=N.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(y=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=E(a)).length+u)%2==0&&(t+=\"0\"),l=Math.sqrt(t),u=I((u+1)/2)-(u<0||u%2),new c(t=l==1/0?\"5e\"+u:(t=l.toExponential()).slice(0,t.indexOf(\"e\")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(C(o,s,n+2,1)).times(.5),E(s.d).slice(0,n)===(t=E(r.d)).slice(0,n)){if(\"9999\"!=(t=t.slice(n-3,n+1))&&(i||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(P(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return y=!0,P(r,u,c.rounding,e)},N.tangent=N.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=C(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==s||4==s?n.neg():n,e,t,!0)):new r(NaN)},N.times=N.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,p=this.d,f=(e=new c(e)).d;if(e.s*=this.s,!(p&&p[0]&&f&&f[0]))return new c(!e.s||p&&!p[0]&&!f||f&&!f[0]&&!p?NaN:p&&f?0*e.s:e.s/0);for(n=I(this.e/_)+I(e.e/_),(u=p.length)<(l=f.length)&&(s=p,p=f,f=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+f[r]*p[i-r-1]+t,s[i--]=a%U|0,t=a/U|0;s[i]=(s[i]+t)%U|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=D(s,n),y?P(e,c.precision,c.rounding):e},N.toBinary=function(e,t){return J(this,2,e,t)},N.toDecimalPlaces=N.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(q(e,0,m),void 0===t?t=n.rounding:q(t,0,8),P(r,e+r.e+1,t))},N.toExponential=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,!0):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e+1,t),!0,e+1));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?k(n):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(i=P(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?\"-\"+i:i},N.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.d,h=p.constructor;if(!f)return new h(p);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=G(f)-p.e-1)%_,t.d[0]=v(10,l<0?_+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(d+o);e=o.gt(t)?0<s?t:u:o}for(y=!1,o=new h(E(f)),l=h.precision,h.precision=s=f.length*_*2;c=C(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=C(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=p.s,p=C(u,r,s,1).minus(p).abs().cmp(C(a,n,s,1).minus(p).abs())<1?[u,r]:[a,n],h.precision=l,y=!0,p},N.toHexadecimal=N.toHex=function(e,t){return J(this,16,e,t)},N.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:q(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(y=!1,r=C(r,e,0,t,1).times(e),y=!0,P(r)):(e.s=r.s,r=e),r},N.toNumber=function(){return+this},N.toOctal=function(e,t){return J(this,8,e,t)},N.toPower=N.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(v(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return P(a,r,s);if((t=I(e.e/_))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=H(u,a,n,r),e.s<0?new u(1).div(i):P(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=v(+a,l))&&isFinite(n)?new u(n+\"\").e:I(l*(Math.log(\"0.\"+E(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(y=!1,u.rounding=a.s=1,n=Math.min(12,(t+\"\").length),(i=X(e.times($(a,r+n)),r)).d&&x((i=P(i,r+5,1)).d,r,s)&&(+E((i=P(X(e.times($(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,y=!0,P(i,r,u.rounding=s))},N.toPrecision=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(q(e,1,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toSignificantDigits=N.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(q(e,1,m),void 0===t?t=n.rounding:q(t,0,8)),P(new n(this),e,t)},N.toString=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()&&!this.isZero()?\"-\"+e:e},N.truncated=N.trunc=function(){return P(new this.constructor(this),this.e+1,1)},N.valueOf=N.toJSON=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()?\"-\"+e:e};var C=function(e,t,n,r,i,s){var o,a,u,l,c,p,f,h,m,g,d,v,w,y,b,S,M,N,E,q=e.constructor,x=e.s==t.s?1:-1,A=e.d,C=t.d;if(!(A&&A[0]&&C&&C[0]))return new q(e.s&&t.s&&(A?!C||A[0]!=C[0]:C)?A&&0==A[0]||!C?0*x:x/0:NaN);for(a=s?(c=1,e.e-t.e):(s=U,I(e.e/(c=_))-I(t.e/c)),N=C.length,S=A.length,m=(x=new q(x)).d=[],u=0;C[u]==(A[u]||0);u++);if(C[u]>(A[u]||0)&&a--,null==n?(w=n=q.precision,r=q.rounding):w=i?n+(e.e-t.e)+1:n,w<0)m.push(1),p=!0;else{if(w=w/c+2|0,u=0,1==N){for(C=C[l=0],w++;(u<S||l)&&w--;u++)y=l*s+(A[u]||0),m[u]=y/C|0,l=y%C|0;p=l||u<S}else{for(1<(l=s/(C[0]+1)|0)&&(C=O(C,l,s),A=O(A,l,s),N=C.length,S=A.length),d=(g=A.slice(0,b=N)).length;d<N;)g[d++]=0;for((E=C.slice()).unshift(0),M=C[0],C[1]>=s/2&&++M;l=0,(o=R(C,g,N,d))<0?(v=g[0],1<(l=(v=N!=d?v*s+(g[1]||0):v)/M|0)?1==(o=R(f=O(C,l=s<=l?s-1:l,s),g,h=f.length,d=g.length))&&(l--,T(f,N<h?E:C,h,s)):(0==l&&(o=l=1),f=C.slice()),(h=f.length)<d&&f.unshift(0),T(g,f,d,s),-1==o&&(o=R(C,g,N,d=g.length))<1&&(l++,T(g,N<d?E:C,d,s)),d=g.length):0===o&&(l++,g=[0]),m[u++]=l,o&&g[0]?g[d++]=A[b]||0:(g=[A[b]],d=1),(b++<S||void 0!==g[0])&&w--;);p=void 0!==g[0]}m[0]||m.shift()}if(1==c)x.e=a,L=p;else{for(u=1,l=m[0];10<=l;l/=10)u++;x.e=u+a*c-1,P(x,i?n+x.e+1:n,r,p)}return x};function O(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function R(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function T(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function P(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=_,u=(l=c[p=0])/v(10,i-(o=t)-1)%10|0;else if((p=Math.ceil((s+1)/_))>=(a=c.length)){if(!r)break e;for(;a++<=p;)c.push(0);l=u=0,o=(s%=_)-_+(i=1)}else{for(l=a=c[p],i=1;10<=a;a/=10)i++;u=(o=(s%=_)-_+i)<0?0:l/v(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[p+1]||(o<0?l:l%v(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/v(10,i-o):0:c[p-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=v(10,(_-t%_)%_),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=p,a=1,p--):(c.length=p+1,a=v(10,_-s),c[p]=0<o?(l/v(10,i-o)%v(10,o)|0)*a:0),u)for(;;){if(0==p){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==U&&(c[0]=1));break}if(c[p]+=a,c[p]!=U)break;c[p--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return y&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function k(e,t,n){if(!e.isFinite())return Z(e);var r,i=e.e,s=E(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+\".\"+s.slice(1)+V(r):1<o&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(e.e<0?\"e\":\"e+\")+e.e):i<0?(s=\"0.\"+V(-i-1)+s,n&&0<(r=n-o)&&(s+=V(r))):o<=i?(s+=V(i+1-o),n&&0<(r=n-i-1)&&(s=s+\".\"+V(r))):((r=i+1)<o&&(s=s.slice(0,r)+\".\"+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+=\".\"),s+=V(r))),s}function D(e,t){var n=e[0];for(t*=_;10<=n;n/=10)t++;return t}function F(e,t,n){if(S<t)throw y=!0,n&&(e.precision=n),Error(l);return P(new e(r),t,1,!0)}function B(e,t,n){if(M<t)throw Error(l);return P(new e(i),t,n,!0)}function G(e){var t=e.length-1,n=t*_+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function V(e){for(var t=\"\";e--;)t+=\"0\";return t}function H(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/_+4);for(y=!1;;){if(n%2&&K((s=s.times(t)).d,o)&&(i=!0),0===(n=I(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}K((t=t.times(t)).d,o)}return y=!0,s}function j(e){return 1&e.d[e.d.length-1]}function n(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function X(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,m=f.precision;if(!e.d||!e.d[0]||17<e.e)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(y=!1,m):t,a=new f(.03125);-2<e.e;)e=e.times(a),p+=5;for(u+=r=Math.log(v(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=P(s.times(e),u,1),n=n.times(++c),E((a=o.plus(C(s,n,u,1))).d).slice(0,u)===E(o.d).slice(0,u)){for(i=p;i--;)o=P(o.times(o),u,1);if(null!=t)return f.precision=m,o;if(!(l<3&&x(o.d,u-r,h,l)))return P(o,f.precision=m,h,y=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function $(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,m=e,g=m.d,d=m.constructor,v=d.rounding,w=d.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new d(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(c=null==t?(y=!1,w):t,d.precision=c+=10,r=(n=E(g)).charAt(0),!(Math.abs(s=m.e)<15e14))return l=F(d,c+2,w).times(s+\"\"),m=$(new d(r+\".\"+n.slice(1)),c-10).plus(l),d.precision=w,null==t?P(m,w,v,y=!0):m;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=E((m=m.times(e)).d)).charAt(0),h++;for(s=m.e,1<r?(m=new d(\"0.\"+n),s++):m=new d(r+\".\"+n.slice(1)),u=o=m=C((p=m).minus(1),m.plus(1),c,1),f=P(m.times(m),c,1),i=3;;){if(o=P(o.times(f),c,1),E((l=u.plus(C(o,new d(i),c,1))).d).slice(0,c)===E(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(F(d,c+2,w).times(s+\"\"))),u=C(u,new d(h),c,1),null!=t)return d.precision=w,u;if(!x(u.d,c-10,v,a))return P(u,d.precision=w,v,y=!0);d.precision=c+=10,l=o=m=C(p.minus(1),p.plus(1),c,1),f=P(m.times(m),c,1),i=a=1}u=l,i+=2}}function Z(e){return String(e.s*e.s/0)}function z(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf(\".\"))?t.replace(\".\",\"\"):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%_,n<0&&(r+=_),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=_;r<i;)e.d.push(+t.slice(r,r+=_));t=t.slice(r),r=_-t.length}else r-=i;for(;r--;)t+=\"0\";e.d.push(+t),y&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/_);for(y=!1,u=n.times(n),a=new e(r);;){if(o=C(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=C(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return y=!0,o.d.length=c+1,o}function Y(e,t){for(var n=e;--t;)n*=e;return n}function W(e,t){var n=t.s<0,r=B(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return s=n?4:1,t;if((e=t.divToInt(r)).isZero())s=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return s=j(e)?n?2:3:n?4:1,t;s=j(e)?n?1:4:n?3:2}return t.minus(r).abs()}function J(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor,h=void 0!==n;if(h?(q(n,1,m),void 0===r?r=f.rounding:q(r,0,8)):(n=f.precision,r=f.rounding),e.isFinite()){for(h?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(o=(l=k(e)).indexOf(\".\"))&&(l=l.replace(\".\",\"\"),(p=new f(1)).e=l.length-o,p.d=A(k(p),10,i),p.e=p.d.length),s=a=(c=A(l,10,i)).length;0==c[--a];)c.pop();if(c[0]){if(o<0?s--:((e=new f(e)).d=c,e.e=s,c=(e=C(e,p,n,r,0,i)).d,s=e.e,u=L),o=c[n],p=i/2,u=u||void 0!==c[n+1],u=r<4?(void 0!==o||u)&&(0===r||r===(e.s<0?3:2)):p<o||o===p&&(4===r||u||6===r&&1&c[n-1]||r===(e.s<0?8:7)),c.length=n,u)for(;++c[--n]>i-1;)c[n]=0,n||(++s,c.unshift(1));for(a=c.length;!c[a-1];--a);for(o=0,l=\"\";o<a;o++)l+=g.charAt(c[o]);if(h){if(1<a)if(16==t||8==t){for(o=16==t?4:3,--a;a%o;a++)l+=\"0\";for(a=(c=A(l,i,t)).length;!c[a-1];--a);for(o=1,l=\"1.\";o<a;o++)l+=g.charAt(c[o])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(s<0?\"p\":\"p+\")+s}else if(s<0){for(;++s;)l=\"0\"+l;l=\"0.\"+l}else if(++s>a)for(s-=a;s--;)l+=\"0\";else s<a&&(l=l.slice(0,s)+\".\"+l.slice(s))}else l=h?\"0p+0\":\"0\";l=(16==t?\"0x\":2==t?\"0b\":8==t?\"0o\":\"\")+l}else l=Z(e);return e.s<0?\"-\"+l:l}function K(e,t){return e.length>t&&(e.length=t,1)}function ee(e){return new this(e).abs()}function te(e){return new this(e).acos()}function ne(e){return new this(e).acosh()}function re(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function se(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ae(e){return new this(e).atanh()}function ue(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?B(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=B(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(C(e,t,s,1)),t=B(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(C(e,t,s,1)):(n=B(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function le(e){return new this(e).cbrt()}function ce(e){return P(e=new this(e),e.e+1,2)}function pe(e){if(!e||\"object\"!=typeof e)throw Error(u+\"Object expected\");for(var t,n,r=!0===e.defaults,i=[\"precision\",1,m,\"rounding\",0,8,\"toExpNeg\",-o,0,\"toExpPos\",0,o,\"maxE\",0,o,\"minE\",-o,0,\"modulo\",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!(I(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(d+t+\": \"+n);this[t]=n}if(t=\"crypto\",r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(d+t+\": \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[t]=!0}else this[t]=!1}return this}function fe(e){return new this(e).cos()}function he(e){return new this(e).cosh()}function me(e,t){return new this(e).div(t)}function ge(e){return new this(e).exp()}function de(e){return P(e=new this(e),e.e+1,3)}function ve(){var e,t,n=new this(0);for(y=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return y=!0,new this(1/0);n=t}return y=!0,n.sqrt()}function we(e){return e instanceof c||e&&\"[object Decimal]\"===e.name||!1}function ye(e){return new this(e).ln()}function be(e,t){return new this(e).log(t)}function Se(e){return new this(e).log(2)}function Me(e){return new this(e).log(10)}function Ne(){return n(this,arguments,\"lt\")}function Ee(){return n(this,arguments,\"gt\")}function qe(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function Ae(e,t){return new this(e).pow(t)}function Ce(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:q(e,1,m),r=Math.ceil(e/_),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(p);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=_,r&&e&&(i=v(10,_-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=_)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<_&&(n-=_-r)}return o.e=n,o.d=a,o}function Le(e){return P(e=new this(e),e.e+1,this.rounding)}function Ie(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ue(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Oe(e){return new this(e).sqrt()}function Re(e,t){return new this(e).sub(t)}function Te(e){return new this(e).tan()}function Pe(e){return new this(e).tanh()}function ke(e){return P(e=new this(e),e.e+1,1)}return(c=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(e instanceof(i.constructor=s))return i.s=e.s,void(y?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d&&e.d.slice()));if(\"number\"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(y?s.maxE<t?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):z(i,e.toString())}if(\"string\"!=r)throw Error(d+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),(b.test(e)?z:function(e,t){var n,r,i,s,o,a,u,l;if(\"Infinity\"===t||\"NaN\"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(h.test(t))l=16,t=t.toLowerCase();else if(f.test(t))l=2;else{if(!w.test(t))throw Error(d+t);l=8}for(s=0<=(i=(t=0<(i=t.search(/p/i))?(a=+t.slice(i+1),t.substring(2,i)):t.slice(2)).indexOf(\".\")),n=e.constructor,s&&(i=(o=(t=t.replace(\".\",\"\")).length)-i,r=H(n,new n(l),i,2*i)),i=l=(u=A(t,l,U)).length-1;0===u[i];--i)u.pop();return i<0?new n(0*e.s):(e.e=D(u,l),e.d=u,y=!1,s&&(e=C(e,r,4*o)),a&&(e=e.times(Math.abs(a)<54?v(2,a):c.pow(2,a))),y=!0,e)})(i,e)}if(s.prototype=N,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=pe,s.clone=e,s.isDecimal=we,s.abs=ee,s.acos=te,s.acosh=ne,s.add=re,s.asin=ie,s.asinh=se,s.atan=oe,s.atanh=ae,s.atan2=ue,s.cbrt=le,s.ceil=ce,s.cos=fe,s.cosh=he,s.div=me,s.exp=ge,s.floor=de,s.hypot=ve,s.ln=ye,s.log=be,s.log10=Me,s.log2=Se,s.max=Ne,s.min=Ee,s.mod=qe,s.mul=xe,s.pow=Ae,s.random=Ce,s.round=Le,s.sign=Ie,s.sin=Ue,s.sinh=_e,s.sqrt=Oe,s.sub=Re,s.tan=Te,s.tanh=Pe,s.trunc=ke,(t=void 0===t?{}:t)&&!0!==t.defaults)for(i=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(a)).default=c.Decimal=c,r=new c(r),i=new c(i),\"function\"==typeof define&&define.amd?define(function(){return c}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(N[Symbol.for(\"nodejs.util.inspect.custom\")]=N.toString,N[Symbol.toStringTag]=\"Decimal\"),module.exports=c):(e=e||(\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=e.Decimal,c.noConflict=function(){return e.Decimal=t,c},e.Decimal=c),c}(this)});\"undefined\"!=typeof module&&(module.exports=nerdamer),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\")),function(){\"use strict\";var Z=nerdamer.getCore(),H=Z.PARSER,u=Z.groups.N,c=Z.groups.P,j=Z.groups.S,p=Z.groups.EX,C=Z.groups.FN,y=Z.groups.PL,X=Z.groups.CP,L=Z.groups.CB,I=Z.Utils.keys,U=Z.Utils.even,$=Z.Utils.variables,l=Z.Utils.format,b=Z.Utils.round,z=Z.Frac,_=Z.Utils.isInt,Q=Z.Symbol,Y=Z.Settings.CONST_HASH,f=Z.Utils.importFunctions();Z.Utils.evaluate;function W(e,t,n){if(Z.Utils.isSymbol(e))this.parse(e),this.variable=this.variable||t;else if(isNaN(e))\"string\"==typeof e&&this.parse(H.parse(e));else{if(n=n||0,void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"Polynomial expects a variable name when creating using order\");this.coeffs=[],this.coeffs[n]=e,this.fill(e)}}function O(){this.factors={},this.length=0}function J(e,t,n){this.terms=t||[],this.coeff=e,this.map=n,this.sum=new Z.Frac(0),this.image=void 0}W.fromArray=function(e,t){if(void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"A variable name must be specified when creating polynomial from array\");var n=new W;return n.coeffs=e,n.variable=t,n},W.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l,c=Math.sign(c)*Math.floor(Math.abs(c));a-=c*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new z(o[u]);return W.fromArray(o,s)},W.prototype={parse:function(e,t){if(this.variable=$(e)[0],!e.isPoly())throw Z.exceptions.NerdamerTypeError(\"Polynomial Expected! Received \"+Z.Utils.text(e));if(t=t||[],(e=!e.power.absEquals(1)?H.expand(e):e).group===Z.groups.N)t[0]=e.multiplier;else if(e.group===Z.groups.S)t[e.power.toDecimal()]=e.multiplier;else for(var n in e.symbols){var r=e.symbols[n],n=r.power;if(Z.Utils.isSymbol(n))throw new Z.exceptions.NerdamerTypeError(\"power cannot be a Symbol\");n=r.group===u?0:n.toDecimal(),r.symbols?this.parse(r,t):t[n]=r.multiplier}this.coeffs=t,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new z(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new z(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new z(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new z(0)).add(u),this.coeffs[o]=new z(r),this.coeffs[n]=new z(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(e){for(var t=this.variable,n=Z.Utils.arrayClone(this.coeffs),r=Z.Utils.arrayClone(e.coeffs),i=n.length,s=r.length-1,o=[],a=0;a<i;a++){var u=i-(a+1),l=u-s,c=n[u].divide(r[s]);if(l<0)break;o[l]=c;for(var p=0;p<=s;p++)n[p+l]=n[p+l].subtract(r[p].multiply(c))}e=W.fromArray(n,t||\"x\").trim();return[W.fromArray(o,t||\"x\"),e]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new z(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new z(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new z(Math.pow(e,r)))))}return t},clone:function(){var e=new W;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(e){if(this.coeffs.length-1<e.coeffs.length-1)return e.gcd(this);for(var t=this;!e.isZero();){var n=e.clone();e=(t=t.clone()).divide(n)[1],t=n}var r=Z.Math2.QGCD.apply(null,t.coeffs);if(!r.equals(1))for(var i=t.coeffs.length,s=0;s<i;s++)t.coeffs[s]=t.coeffs[s].divide(r);return t},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new z(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new z(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(e){for(var t=[],n=0;n<this.coeffs.length;n++){var r=this.coeffs[n];r.equals(0)||-1!==t.indexOf(r)||t.push(r)}var i=[Z.Math2.QGCD.apply(void 0,t),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return e&&((e=[])[i[1]-1]=i[0],i=W.fromArray(e,this.variable).fill()),i},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error(\"Cannot calculate quadratic order of \"+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error(\"Polynomial array has no terms\");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=W.fromArray([new z(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var e=this.coeffs.length,t=this.variable;if(0===e)return new Z.Symbol(0);for(var n=e-1,r=\"\",i=0;i<e;i++){var s=i===n?\"\":\"+\",o=this.coeffs[i];o.equals(0)||(r+=o+\"*\"+t+\"^\"+i+s)}return H.parse(r)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},Q.prototype.coeffs=function(e,t){t&&!this.isPoly(!0)&&H.error(\"Polynomial expected when requesting coefficients with order\"),e=e||[];var n,r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){i=r.symbols[i];i.isComposite()?i.clone().distributeMultiplier().coeffs(e,t):t?e[i.isConstant()?0:i.power.toDecimal()]=i.multiplier:e.push(i.multiplier)}else t?e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier:r.group===L&&r.isImaginary()?(n=new Q(r.multiplier),r.each(function(e){(e.isConstant(!0)||e.imaginary)&&(n=H.multiply(n,e))}),e.push(n)):e.push(r.multiplier);if(t)for(var s=0;s<e.length;s++)void 0===e[s]&&(e[s]=new Q(0));return e},Q.prototype.tBase=function(e){if(void 0===e)throw new Error(\"Symbol.tBase requires a map object!\");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new J(s.multiplier,[],e);if(o===L)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},Q.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return(\"1\"===t?\"\":t+\"*\")+e+(\"1\"===n?\"\":\"^\"+n)},Q.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],t=e.symbols[t];if(!t)return!1;if(n.value!==t.value)return!1}return!0},Q.prototype.groupTerms=function(r){var i,s,o;r=String(r);var a=[];return this.each(function(e){if(e.group===y){o=e.groupTerms(r);for(var t=0;t<o.length;t++){var n=o[t];n&&(a[t]=n)}}else i=Z.Utils.decompose_fn(e,r,!0),s=i.x.value===r?Number(i.x.power):0,a[s]=H.add(a[s]||new Q(0),i.a)}),a},Q.prototype.collectFactors=function(){var t=[];return this.group===L?this.each(function(e){t.push(e.clone())}):t.push(this.clone()),t},O.prototype.getNumberSymbolics=function(){var t=0;return this.each(function(e){e.isConstant(!0)||t++}),t},O.prototype.add=function(e){if(e.equals(0))return this;if(e.equals(-1)&&0<this.length){var t=Z.Utils.firstObject(this.factors,null,!0);return this.add(H.symfunction(Z.Settings.PARENTHESIS,[t.obj]).negate()),delete this.factors[t.key],this.length--,this}if(e.group===L){var n=this;e.multiplier.equals(1)||n.add(new Q(e.multiplier)),e.each(function(e){n.add(e)})}else{this.preAdd&&(e=this.preAdd(e));t=(e=this.pFactor?H.pow(e,new Q(this.pFactor)):e).isConstant();if(t&&e.equals(1))return this;t=t?e.value:e.text();t in this.factors?(this.factors[t]=H.multiply(this.factors[t],e),this.factors[t].equals(1)&&(delete this.factors[t],this.length--)):(this.factors[t]=e,this.length++)}return this},O.prototype.toSymbol=function(){for(var e=new Q(1),t=Object.values(this.factors).sort(function(e,t){return e.group>t.group}),n=0,r=t.length;n<r;n++)var i=t[n],i=i.power.equals(1)&&\"\"!==i.fname?H.symfunction(Z.PARENTHESIS,[i]):i,e=H.multiply(e,i);return e=\"\"===e.fname?Q.unwrapPARENS(e):e},O.prototype.merge=function(e){for(var t in e)t in this.factors?this.factors[t]=H.multiply(this.factors[t],e[t]):this.factors[t]=e[t];return this},O.prototype.each=function(e){for(var t in this.factors){var n=this.factors[t];n.fname===Z.PARENTHESIS&&n.isLinear()&&(n=n.args[0]),e.call(this,n,t)}return this},O.prototype.count=function(){return I(this.factors).length},O.prototype.clean=function(){try{var e=Z.Settings.CONST_HASH;this.factors[e].lessThan(0)&&(this.factors[e].equals(-1)?delete this.factors[e]:this.factors[e].negate(),this.each(function(e){e.negate()}))}catch(e){}},O.prototype.toString=function(){return this.toSymbol().toString()},J.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},J.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap();n.equals(0)||e.push(this.rev_map[t])}return e.join(\" \")},J.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},J.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var t=new Q(this.coeff),n=0;n<this.terms.length;n++){var r=e[n],i=this.terms[n];i.equals(0)||r===Y||((r=new Q(r)).power=i,t=H.multiply(t,r))}return t},J.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},J.prototype.generateImage=function(){return this.image=this.terms.join(\" \"),this},J.prototype.getImg=function(){return this.image||this.generateImage(),this.image},J.prototype.fill=function(){for(var e=this.map.length,t=0;t<e;t++)void 0===this.terms[t]?this.terms[t]=new Z.Frac(0):this.sum=this.sum.add(this.terms[t]);return this},J.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.isZero=function(){return this.coeff.equals(0)},J.prototype.toString=function(){return\"{ coeff: \"+this.coeff.toString()+\", terms: [\"+this.terms.join(\",\")+\"]: sum: \"+this.sum.toString()+\", count: \"+this.count+\"}\"},Z.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},Z.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},Z.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},Z.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some(function(e){return-1<t.indexOf(e)})},Z.Utils.subFunctions=function(e,r){r=r||{};var i=[];return e.each(function(e){var t,n;e.group===C||e.previousGroup===C?(t=Z.Utils.text(e,\"hash\"),(n=r[t])?i.push(e.altVar(n)):(n=e.fname+I(r).length,r[t]=n,i.push(e.altVar(n)))):e.group===L||e.group===y||e.group===X?i.push(Z.Utils.subFunctions(e,r)):i.push(e.text())}),e.group===X||e.group===y?e.altVar(Z.Utils.inBrackets(i.join(\"+\"))):e.group===L?e.altVar(Z.Utils.inBrackets(i.join(\"*\"))):e.text()},Z.Utils.getFunctionsSubs=function(e){var t,n={};for(t in e)n[e[t]]=H.parse(t);return n};var R=Z.Algebra={version:\"1.4.6\",proots:function(e,l){l=l||7;function t(e,t,n){for(var r=function(e,t){var n=e.slice(0);if(e.unshift(t),100<t)throw new Z.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to 100. \");var r=[],e={};for(e.Degree=t,p=0;p<t;p++)r.push(0);var i=r.slice(0);function V(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-(t*s.b)+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function H(e,t,n,r,i,s,o,a,u){var l=new Object,c=3;return l.b=l.a=0,V(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(c=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(c=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-(n*(i.d/i.c))+r,i.a7=i.g*i.d+i.h*i.f+n)),c}function j(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-(u[0]*s.a7)+u[1];for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3+u[l]}else{o[0]=0,o[1]=-(u[0]*s.a7);for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3}else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function X(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,d){var v;t.b=t.a=0,3!=e&&(a=2!=e?(v=n+f*o+p*l,a+(f+h*l)*u):(v=(n+c)*l+p,(l+f)*a+h*u),u=-(m[g-1]/d[g]),0!=(v=-(i=h*(m=-(m[g-2]+u*d[g-1])/d[g])*r-((d=u*s)+(g=u*u*i)))+a+u*v)&&(t.a=-(f*(g+d)+h*(u*r+m*s))/v+f,t.b=h*(1+i/v)))}function $(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function G(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S,M,N,E,q,x,A,C,L,I,U,_,O,R,T,P,k=new Object,D=new Object,F=new Array(t),B=new Array(t),G=1;for(p.NZ=0,g=m=.25,d=r,y=i,k.b=k.a=0,V(u,c,i,a,l,k),f=k.a,h=k.b,D.h=D.g=D.f=D.e=D.d=D.c=D.a7=D.a3=D.a1=0,R=H(e,o,f,h,D,s,c,i,F),U=0;U<n;U++){if(L=1,j(e,o,R,f,h,D,s,F,l),X(R=H(e,o,f,h,D,s,c,i,F),k,f,D.a1,D.a3,D.a7,h,D.c,D.d,D.f,D.g,D.h,c,i,s,o,a),x=k.a,C=A=k.b,S=0!=s[o-1]?-(a[o]/s[o-1]):0,M=E=1,0!=U&&3!=R&&(T=(q=(E=0!=C?Math.abs((C-y)/C):E)<w?E*w:1)<g?1:0,(_=(N=(M=0!=S?Math.abs((S-d)/S):M)<v?M*v:1)<m?1:0)||T)){for(I=0;I<o;I++)B[I]=s[I];for(b=S,O=P=0;;){if(!L||0!=(L=0)||!_||T&&!(N<q)){if(!function(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S=new Object,M=0,N=0;n.NZ=0,g=r,v=i;do{if(S.li=S.lr=S.si=S.sr=0,$(1,g,v,S),n.szr=S.sr,n.szi=S.si,n.lzr=S.lr,n.lzi=S.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(V(o,g,v,u,s,a),w=Math.abs(-(n.szr*a.b)+a.a)+Math.abs(n.szi*a.b),y=Math.sqrt(Math.abs(v)),f=2*Math.abs(s[0]),d=-(n.szr*a.b),b=1;b<t;b++)f=f*y+Math.abs(s[b]);if(w<=20*(f=(9*(f=f*y+Math.abs(d+a.a))+2*Math.abs(d)-7*(Math.abs(a.a+d)+y*Math.abs(a.b)))*e)){n.NZ=2;break}if(20<++M)break;if(2<=M&&m<=.01&&h<=w&&!N){for(V(o,g-=g*(m=m<e?Math.sqrt(e):Math.sqrt(m)),v+=v*m,u,s,a),b=0;b<5;b++)j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s);N=1,M=0}}while(h=w,j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s),X(H(e,t,a.a,a.b,c,p,g,v,l),a,a.a,c.a1,c.a3,c.a7,a.b,c.c,c.d,c.f,c.g,c.h,g,v,p,t,u),d=a.a,0!=(w=a.b)&&(m=Math.abs((-v+w)/w),g=d,v=w),0!=w)}(e,o,p,x,A,l,u,k,a,F,D,s),f=k.a,h=k.b,0<p.NZ)return;if(G=P=1,g*=.25,O||!_)G=0;else for(I=0;I<o;I++)s[I]=B[I]}if(0!=G){if(k.a=b,G=function(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,d,v,w,y,b=r-1;for(t.NZ=y=v=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(d)<=.001*Math.abs(-d+g)&&h<p){v=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(d=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=d*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=d=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return v}(e,p,k,o,a,u,l,s,F),b=k.a,0<p.NZ)return;if(O=1,m*=.25,0!=G){x=-(b+b),A=b*b;continue}}for(I=0;I<o;I++)s[I]=B[I];if(!T||P)break}V(u,c,i,a,l,k),R=H(e,o,f=k.a,h=k.b,D,s,c,i,F)}y=C,d=S,w=E,v=M}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,p,f,h,m,g,d,v,w=e.Degree,y=.017453292519943295,b=Math.LN2,S=e.Degree+1,M=new Array(S),N=new Array(S),E=new Array(S),q=new Array(S),x=new Object,A=new Object,C=1;i=C,1<(l=1+(C/=2)););var L=Number.MIN_VALUE/i,I=Math.cos(94*y),U=Math.sin(94*y),_=Math.sqrt(.5),O=-_;for(A.NZ=f=0,A.szr=A.szi=A.lzr=A.lzi=0;0==t[w];)n[f]=r[f]=0,w--,f++;for(d=w+1;1<=w;){if(w<=2){w<2?(n[e.Degree-1]=-(t[1]/t[0]),r[e.Degree-1]=0):($(t[x.li=x.lr=x.si=x.sr=0],t[1],t[2],x),n[e.Degree-2]=x.sr,r[e.Degree-2]=x.si,n[e.Degree-1]=x.lr,r[e.Degree-1]=x.li);break}for(a=0,u=Number.MAX_VALUE,R=0;R<d;R++)a<(T=Math.abs(t[R]))&&(a=T),0!=T&&T<u&&(u=T);if(((m=L/u)<=1&&10<=a||1<m&&Number.MAX_VALUE/m>=a)&&(m=0==m?Number.MIN_VALUE:m,m=Math.floor(Math.log(m)/b+.5),1!=(o=Math.pow(2,m))))for(R=0;R<d;R++)t[R]*=o;for(var R=0;R<d;R++)N[R]=Math.abs(t[R]);N[w]=-N[w],g=w-1,T=Math.exp((Math.log(-N[w])-Math.log(N[0]))/w),P=T=0!=N[g]?(P=-N[w]/N[g])<T?P:T:T;do{for(var T,P=.1*(T=P),k=N[0],R=1;R<d;R++)k=k*P+N[R]}while(0<k);0;do{for(var D=k=N[0],R=1;R<w;R++)D=T*D+(k=T*k+N[R])}while(T-=s=(k=T*k+N[w])/D,.005<Math.abs(s/T));for(var F=T,R=1;R<w;R++)M[R]=(w-R)*t[R]/w;for(M[0]=t[0],C=t[w],l=t[g],v=0==M[g]?1:0,h=0;h<5;h++)if(c=M[g],v){for(R=0;R<g;R++)M[f=g-R]=M[f-1];v=(M[0]=0)==M[g]?1:0}else{for(var B=-C/c,R=0;R<g;R++)M[f=g-R]=B*M[f-1]+t[f];M[0]=t[0],v=Math.abs(M[g])<=Math.abs(l)*i*10?1:0}for(R=0;R<w;R++)q[R]=M[R];for(h=1;h<=20;h++){if(p=-U*O+I*_,O=U*_+I*O,G(i,S,20*h,p=F*(_=p),F,M,w,t,d,E,-2*p,A),0!=A.NZ){n[f=e.Degree-w]=A.szr,r[f]=A.szi;for(w=(d-=A.NZ)-1,R=0;R<d;R++)t[R]=E[R];1!=A.NZ&&(n[f+1]=A.lzr,r[f+1]=A.lzi);break}for(R=0;R<w;R++)M[R]=q[R]}if(20<h){e.Degree-=w;break}}}(e,n,i,r);var s=r.length;for(p=0;p<s;p++){var o=b(r[p],l+8),a=b(i[p],l+8);a=2<l-String(a).length?a:i[p];var u=o<0?\"-\":\"\";0===a&&(a=\"\"),0===o&&(o=\"\"),o=1===Math.abs(o)?u+\"i\":o?o+\"*i\":\"\";o=a&&o?a+\"+\"+o:a+o;i[p]=o.replace(/\\+\\-/g,\"-\")}return i}(e,n).concat(s),i=0;i<0;i++)r.unshift(0);return r}var n,s=[];if(e instanceof Q&&e.isPoly()){if(e.distributeMultiplier(),e.group===y&&(n=Z.Utils.arrayMin(I(e.symbols)),n=e.symbols[n].clone().toUnitMultiplier(),e=H.expand(H.divide(e,n)),s.push(0)),e.group===Z.groups.S)return[0];e.group===Z.groups.PL&&(a=I(e.symbols),r=Z.Utils.arrayMin(a),e=Z.PARSER.divide(e,Z.PARSER.parse(e.value+\"^\"+r)));for(var r=I(e.symbols).sort().pop(),i=e.group===Z.groups.PL?e.symbols:e.symbols[r],o=i.group,a=o===j?[i.power.toDecimal()]:I(i.symbols),u=[],c=Z.Utils.arrayMax(a),p=1;p<=c;p++){var f=0;-1!==a.indexOf(p+\"\")&&(f=(o===j?i:i.symbols[p]).multiplier),u.unshift(f)}return u.push(e.symbols[Y].multiplier),i.group===j&&(u[0]=i.multiplier),t(u,0,c)}if(Z.Utils.isArray(e)){for(var h=e,u=[],a=[],m=0,p=0;p<h.length;p++){for(var g=h[p][0],d=h[p][1],v=d-m-1,w=0;w<v;w++)u.unshift(0);u.unshift(g),0!==d&&a.push(d),m=d}return t(u,0,c=Math.max.apply(void 0,a))}throw new Z.exceptions.NerdamerTypeError(\"Cannot calculate roots. Symbol must be a polynomial!\")},roots:function(e){if(e.isConstant(!0,!0))return Z.Utils.nroots(e);e=R.proots(e).map(function(e){return H.parse(e)});return Z.Vector.fromArray(e)},froot:function(a,e,u){return function(e){for(var t=u||Z.Utils.build(Z.Calculus.diff(a.clone())),n=a instanceof Function?a:Z.Utils.build(a),r=!1,i=0;!r;){var s=e-n(e)/t(e),o=Math.abs(s)-Math.abs(e);e=s,Math.abs(o)<1e-12?r=!0:1e4<i&&(r=!(e=null)),i++}return e}(Number(e))},quad:function(e,t,n){function r(e,t,n,r){return H.parse(\"-(\"+t+\"+\"+r+\"*sqrt((\"+t+\")^2-4*(\"+e+\")*(\"+n+\")))/(2*\"+e+\")\")}return[r(e,t,n,1),r(e,t,n,-1)]},sumProd:function(e,t){return R.quad(-t,e,-1).map(function(e){return e.invert()})},coeffs:function(e,t,n){t=String(t),e=H.expand(e),n=n||[new Q(0)],e.group===p&&e.contains(t,!0)&&H.error(\"Unable to get coefficients using expression \"+e.toString());var r,i=$(e);if(1!==i.length||i[0]!==t||e.isImaginary())t||H.error(\"Polynomial contains more than one variable. Please specify which variable is to be used!\"),-1===i.indexOf(t)?n[0]=H.add(e,n[0]):(n=n||[new Q(0)],e.group===L?((r=e.symbols[t])||H.error(\"Expression is not a polynomial!\"),i=Number(r.power),((l=H.divide(e.clone(),r.clone())).contains(t,!0)||i<0||!_(i))&&H.error(\"Expression is not a polynomial!\"),(u=n[i])&&(l=H.add(u,l)),n[i]=l):e.group===X&&e.each(function(e){R.coeffs(e.clone(),t,n)},!0));else for(var s=new W(e).coeffs.map(function(e){return new Q(e)}),o=0,a=s.length;o<a;o++){var u,l=s[o];(u=n[o])&&(l=H.add(u,l)),n[o]=l}for(o=0,a=n.length;o<a;o++)void 0===n[o]&&(n[o]=new Q(0));return n},polyPowers:function(e,t,n){if(n=n||[],(s=e.group)===y&&t===e.value)n=n.concat(I(e.symbols));else if(s===X)for(var r in e.symbols){var i=e.symbols[r],s=i.group,r=i.value;s===j&&t===r?n.push(i.power):s===y||s===X?n=R.polyPowers(i,t,n):s===L&&i.contains(t)?(i=i.symbols[t])&&n.push(i.power):s!==u&&t===r||n.push(0)}else s===L&&e.contains(t)&&n.push(Z.Utils.decompose_fn(e,t,!0).x.power);return Z.Utils.arrayUnique(n).sort()},Factor:{split:function(e){var n=new Q(1),r=new Q(1);return R.Factor.factor(e,new O).each(function(e){var t=H.parse(e);e.isConstant(!0)?n=H.multiply(n,t):r=H.multiply(r,t)}),[n,r]},mix:function(e,t){for(var n=I(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(e,t){try{if(e.group===X){for(var n=H.expand(e.clone(),!0).collectSymbols(null,null,function(e,t){return(t.length||1)-(e.length||1)}),r={},i=[],s=0;s<n.length;s++){var o=n[s];i.push(o.multiplier.clone()),o.each(function(e){var t=Number(e.power);if(isNaN(t))throw new Error(\"exiting\");e.value in r?(t<r[e.value][0]&&(r[e.value][0]=t),r[e.value][1].push(e)):r[e.value]=[t,[e]]})}var a,u=new Q(1);for(a in r)r[a][1].length===n.length&&(u=H.multiply(u,H.pow(new Q(a),new Q(r[a][0]))));var l=Z.Math2.QGCD.apply(null,i);if(!l.equals(1)){t.add(new Q(l));for(s=0;s<n.length;s++)n[s].multiplier=n[s].multiplier.divide(l)}if(!u.equals(1)){t.add(u),e=new Q(0);for(s=0;s<n.length;s++)e=H.add(e,H.divide(n[s],u.clone()))}}}catch(e){}return e},zeroes:function(e,t){function n(){throw new Z.exceptions.ValueLimitExceededError(\"Exiting\")}try{for(var r,i,s,o=(e=H.expand(e.clone())).toString(),a=$(e),u=new Q(0),l=[],c=[],p=0,f=a.length;p<a.length;p++){for(var h={},m=0;m<f;m++)p!==m&&(h[a[m]]=0);var g,d=(g=H.parse(o,h)).power;_(d)||n(),l.push(g),c.push(g.power)}Z.Utils.allSame(c)?(i=e.length,2===(s=l.length)&&(r=new z(c[0]/(i-1))),3===s&&(r=new z(c[0]/Math.round((Math.sqrt(8*i-1)-3)/2)))):r=Z.Math2.QGCD.apply(null,c),_(r)||n();for(p=0;p<l.length;p++){var v=l[p],w=v.power.clone().divide(r);v.multiplier=new z(Math.pow(v.multiplier,1/w)),v.power=r.clone(),u=H.add(u,v)}if(u.group!==X)return e;for(;;){var y=R.div(e.clone(),u.clone());if(!y[1].equals(0))break;if(e=y[0],t.add(u.clone()),e.equals(1))break}}catch(o){}return e},factor:function(e,t){if(e.isConstant())return Z.Math2.factor(e);var n,r,i=H.parse(e),t=R.Factor._factor(i,t);return t.equals(e)||t.group===L&&(n=new Q(1),e=H.parse(t.power),r=H.parse(t.multiplier),t.toUnitMultiplier(),t.multiplier.lessThan(0)&&(n.negate(),t.negate()),t.each(function(e){e=H.parse(R.Factor._factor(e));e.group===L?(r=H.multiply(r,Q.create(e.multiplier)),e.each(function(e){e=H.parse(R.Factor._factor(e));n=H.multiply(n,e),e.group===L&&(r=H.multiply(r,Q.create(e.multiplier)))})):n=H.multiply(n,e)}),t=H.pow(H.multiply(r,n),e)),t},quadFactor:function(e,t){if(e.isPoly()&&R.degree(e.equals(2))){var n=Z.Utils.variables(e)[0],r=R.coeffs(e,n),i=R.Factor._factor(r[2].clone());if(i.group===L){var s=i.collectSymbols();if(2<s.length)return e;var o=H.multiply(H.parse(r[0]),H.parse(s[0])),a=H.parse(r[1]).negate(),i=H.parse(s[1]),o=R.quad(i,a,o).filter(function(e){if(Z.Utils.isInt(e))return e});1===o.length&&(o=o[0],r=H.divide(r[0],H.parse(o)),Z.Utils.isInt(r)&&(t.add(H.parse(l(\"({0})*({1})+({2})\",s[1],n,r))),t.add(H.parse(l(\"({0})*({1})+({2})\",s[0],n,o))),e=new Q(1)))}}return e},cubeFactor:function(e,t){var n,r,i,s,o,a;return!e.isComposite()||2===(a=e.collectSymbols()).length&&(n=a[0].sign(),r=a[0].clone().abs(),i=a[1].sign(),s=a[1].clone().abs(),r.isCube()&&s.isCube()&&(n<i&&([n,i]=[i,n],[r,s]=[s,r]),o=H.parse(r.getNth(3)),a=H.parse(s.getNth(3)),o=H.multiply(H.expand(H.pow(r.clone().toUnitMultiplier(),H.parse(\"1/3\"))),o),a=H.multiply(H.expand(H.pow(s.clone().toUnitMultiplier(),H.parse(\"1/3\"))),a),1===n&&-1===i?(t.add(H.parse(l(\"(({0})-({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2+({0})*({1})+({1})^2)\",o,a))),e=Q(1)):1===n&&1===i&&(t.add(H.parse(l(\"(({0})+({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2-({0})*({1})+({1})^2)\",o,a))),e=Q(1)))),e},_factor:function(e,t){var n;e.group;if(e.group===C){var r=e.args[0];if(r.group===j&&r.isSimple())return e}else if(e.group===j&&e.isSimple())return e;e.group===X&&(e.distributeMultiplier(!0),n=new Q(0),e.each(function(e){(e.group===X&&e.power.greaterThan(1)||e.group===L)&&(e=H.expand(e)),n=H.add(n,e)}),n.power=e.power,e=n);r=(e=e.group===C&&\"sqrt\"!==e.fname?Z.Utils.evaluate(e):e).clone();try{if(e.group===L){var i=H.parse(e.power),s=R.Simplify.strip(e.getDenom()),o=R.Simplify.strip(e.getNum()),a=s.pop(),u=o.pop();if(u.equals(e))return e;var l=R.Factor.factor(u),c=R.Factor.factor(a),p=R.Simplify.unstrip(o,l),f=R.Simplify.unstrip(s,c);return A=H.divide(p,f)}if(e.group===j)return e;if(e.isConstant())return e.equals(1)?e.clone():Z.Math2.factor(e);i=e.power.clone();if(!_(i)||i.lessThan(0)&&e.group===C)return e;var h=i.sign();e.toLinear(),t=t||new O;var m={};e=H.parse(Z.Utils.subFunctions(e,m)),0<I(m).length&&(t.preAdd=function(e){return H.parse(e,Z.Utils.getFunctionsSubs(m))}),e.isLinear()||(t.pFactor=e.power.toString(),e.toLinear());var g=$(e);e.isImaginary()&&g.push(Z.Settings.IMAGINARY);var d=1<g.length;if(d){var v=!0,w=!0;if(e.each(function(e){e.group!==j&&(v=!1),e.multiplier.equals(1)||(w=!1)}),v&&w)return H.pow(H.parse(e,Z.Utils.getFunctionsSubs(m)),H.parse(i))}var y=new O;e=R.Factor.coeffFactor(e,y),y.each(function(e){U(i)&&e.lessThan(0)&&e.negate(),h<0&&e.invert(),t.add(e)});var b=new O;if(e=R.Factor.powerFactor(e,b),b.each(function(e){h<0&&e.invert(),t.add(e)}),d)e=R.Factor.cubeFactor(e,t),e=R.Factor.mfactor(e,t),t.each(function(e){h<0&&e.power.negate()});else{var S=g[0];e=R.Factor.squareFree(e,t,S);var M=new O;e=R.Factor.trialAndError(e,M,S);var N,E=M.toSymbol();if(E.equals(r))return E;for(N in M.factors){var q=M.factors[N];t.add(H.pow(q,H.parse(i)))}e.equals(r)&&(e=R.Factor.quadFactor(e,t))}e=H.parse(e,Z.Utils.getFunctionsSubs(m));var x=1===t.length;t.add(H.pow(e,H.parse(i)));var A=t.toSymbol();return A=x&&e.equals(1)&&A.isLinear()?H.pow(A,H.parse(i)):A}catch(e){return r}},reduce:function(e,t){if(e.group===X&&2===e.length){var n=e.collectSymbols().sort(function(e,t){return t.multiplier-e.multiplier});if(n[0].power.equals(n[1].power)){var r=H.parse(n[0].power),i=n[0].clone().toLinear(),s=n[1].clone().toLinear();t.add(H.add(i.clone(),s.clone())),s.negate();for(var o=Number(r),a=new Q(0),u=1;u<=o;u++)var l=H.pow(i.clone(),H.subtract(r.clone(),new Q(u))),c=H.pow(s.clone(),H.subtract(new Q(u),new Q(1))),a=H.add(a,H.multiply(l,c));return a}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===j)return e;var r=new W(e,n).squareFree(),n=r[2];if(1===n)return e;e=r[1].toSymbol();return e.power=e.power.multiply(new z(n)),t.add(R.Factor.factor(e)),R.Factor.squareFree(r[0].toSymbol(),t)},powerFactor:function(e,t){if(e.group!==y||e.previousGroup===p)return e;var n=I(e.symbols);if(!Z.Utils.allNumeric(n))return e;var n=Z.Utils.arrayMin(n),r=new Q(0),i=H.parse(e.value+\"^\"+n);return e.each(function(e){e=H.divide(e,i.clone()),r=H.add(r,e)}),t.add(i),r},coeffFactor:function(e,t){var n,r,i,s;return e.isComposite()&&((n=Z.Math2.QGCD.apply(null,e.coeffs())).equals(1)?((r=function(e){var t;return e.group===L?(t=0,e.each(function(e){t+=e.power})):t=Number(e.power),t})(s=(i=e.collectSymbols(null,null,null,!0).sort(function(e,t){return e.isConstant(!0)?1:t.power-e.power}))[0])>r(i[1])||i[1].isConstant(!0))&&s.multiplier.lessThan(0)&&(t.add(new Q(-1)),e.each(function(e){e.negate()},!0)):(e.each(function(e){e.isComposite()?e.each(function(e){e.multiplier=e.multiplier.divide(n)}):e.multiplier=e.multiplier.divide(n)}),e.updateHash()),t&&t.add(new Q(n))),e},trialAndError:function(e,t,n){var r=e.clone();try{var i=[];if(e.isConstant()||e.group===j)return e;for(var s=new W(e,n),o=s.coeffs[0],a=Z.Math2.ifactor(o),u=R.proots(e),l=0;l<u.length;l++){var c=u[l],p=1;if(!isNaN(c)){for(var f in a){var h=Z.Utils.round(Math.log(f)/Math.log(Math.abs(c)),8);if(_(h)){c=f,p=h;break}}var m=new z(c),g=[new z(m.num).negate()];g[p]=new z(m.den);var d=W.fromArray(g,s.variable).fill(),v=s.divide(d);v[1].equalsNumber(0)&&(s=v[0],i.push(d.toSymbol()))}}return s.equalsNumber(1)||(s=R.Factor.search(s,t)),i.forEach(function(e){t.add(e)}),s.toSymbol()}catch(e){return r}},search:function(i,s,o){o=o||10;function e(e,t,n,r){if((n=W.fit(e,t,n,o,r,a))&&1<n.coeffs.length){r=i.divide(n);if(r[1].equalsNumber(0))return s.add(n.toSymbol()),[r[0],n]}return null}var a=i.variable,t=i.coeffs[0],n=Z.Math2.ifactor(t),r=i.lc(),u=Z.Math2.ifactor(r),l=i.sub(o),c=Z.Math2.ifactor(l),p=R.Factor.mix(c,l<0),f=Math.ceil(i.coeffs.length/2),h=r.lessThan(0),m=t.lessThan(0);for(n[u[1]=1]=1;f--;)for(var g in u)for(var d in n)for(var v=0;v<p.length;v++){var w=e(g,d,p[v],f);if(w)return i=w[0],i=!Z.Utils.isPrime(i.sub(o))?R.Factor.search(i,s):i;w||(h&&m?w=e(-g,-d,p[v],f):h?w=e(-g,d,p[v],f):m&&(w=e(g,-d,p[v],f)))}return i},mSqfrFactor:function(e,t){if(e.group!==C)for(var n=$(e).reverse(),r=0;r<n.length;r++)do{if(n[r]!==e.value){var i=Z.Calculus.diff(e,n[r]),s=R.Factor.coeffFactor(i);if(s.equals(0))break;var o=!0;if(s.isConstant()&&e.isComposite()&&e.each(function(e){e.multiplier%s!=0&&(o=!1)},!0),o){var a=R.div(e,s.clone()),u=a[1].equals(0);if(e.equals(a[0])&&a[1].equals(0))break;if(a[0].isConstant()){t.add(a[0]);break}}else u=!1;u&&(t.add(a[0]),e=s)}else t.add(e),e=new Q(1)}while(u);return e},sqdiff:function(e,t){if(e.isConstant(\"all\"))return e;try{var n,r,i,s,o,a=function(e){return Z.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){return Q.unwrapPARENS(f.sqrt(f.abs(e)))},!0)},u=Z.Utils.separate(e.clone()),l=[];for(n in u)\"constants\"!==n&&l.push(u[n]);if(l.sort(function(e,t){return t.power-e.power}),2===l.length){if(o=l.pop(),r=l.pop(),U(o.power)&&U(r.power)&&o.sign()===r.sign()&&o.group===j&&r.group===j)throw new Error(\"Unable to factor\");o.isComposite()&&r.power.equals(2)?(r=a(r),(i=R.Factor.factor(H.add(o,u.constants))).power.equals(2)&&(i.toLinear(),t.add(H.subtract(i.clone(),r.clone())),t.add(H.add(i,r)),e=new Q(1))):(o=o.powSimp(),r=r.powSimp(),o.group!==j&&\"\"!==o.fname||!o.power.equals(2)||r.group!==j&&\"\"!==r.fname||!r.power.equals(2)||u.constants||(o.multiplier.lessThan(0)&&(s=r,r=o,o=s),o.multiplier.greaterThan(0)&&(o=a(o),r=a(r)),t.add(H.subtract(o.clone(),r.clone())),t.add(H.add(o,r)),e=new Q(1)))}}catch(e){}return e},mfactor:function(t,e){if(t.group===C){var n,r;\"sqrt\"===t.fname?(n=new O,r=R.Factor.common(t.args[0].clone(),n),r=R.Factor.coeffFactor(r,n),t=H.multiply(H.symfunction(\"sqrt\",[r]),H.parse(t.multiplier)),n.each(function(e){t=H.multiply(t,H.parse(Z.Utils.format(\"sqrt({0})\",e)))})):e.add(t)}else{t=R.Factor.mSqfrFactor(t,e);for(var i,s=$(t),o=t.collectSymbols().map(function(e){return Q.unwrapSQRT(e)}),a={},u={},l=s.length,c=o.length,p=0;p<l;p++){var f=s[p];a[f]=new Q(0);for(var h=0;h<c;h++){var m,g=o[h];g.contains(f)&&(m=(g.value===f?g:g.symbols[f]).power.toDecimal(),(!u[f]||m<u[f])&&(u[f]=m),a[f]=H.add(a[f],g.clone()))}}for(i in a){var d=H.parse(i+\"^\"+u[i]),v=H.divide(a[i],d),w=H.expand(v);if(w.equals(1))break;v=R.div(t.clone(),w);if(v[0].equals(0))break;if(v[1].equals(0)){var y=!1;if(v[0].each(function(e){_(e.multiplier)||(y=!0)}),y){v[1]=H.expand(H.multiply(v[1],w));break}}w=_(w)&&w.lessThan(0);if(v[1].equals(0)&&!w){w=R.div(t.clone(),v[0].clone());if((d=w[0]).equals(0))return t;if(t=w[1],d.equals(-1)&&!t.equals(0))return t;w=v[0];if(t.equals(w)){v=R.Factor.reduce(w,e);return t.equals(v)?v:R.Factor.mfactor(v,e)}return(e.add(w),t.equals(0))?d:d.isConstant(\"all\")?(e.add(d),d):R.Factor.mfactor(d,e)}}}return t=R.Factor.sqdiff(t,e),t=R.Factor.zeroes(t,e)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!R.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,n=e.group;if(n===y||n===X)for(var r in t=!0,e.symbols){var i=e.symbols[r],r=i.group;if(r!==C&&r!==p||(t=!1),r===L)t=1===$(i).length;else if(r===y||r===X)t=R.isLinear(i);else if(i.group!==u&&\"1\"!==i.power.toString()){t=!1;break}}else n===j&&1===e.power&&(t=!0);return t},gcd:function(){var e=1===arguments.length&&arguments[0]instanceof Z.Vector?arguments[0].elements:Z.Utils.arguments2Array(arguments);if(0===e.length)return new Q(1);if(1===e.length)return e[0];for(var t=[],n=!1,r=0;r<e.length;r++)if(e[r].group===C&&\"gcd\"===e[r].fname)(e=e.concat(arguments[r].args)).splice(r,1);else{var i=$(e[r]);if(Z.Utils.haveIntersection(i,t)){n=!0;break}t=t.concat(i)}if(n||0===t.length){if(e.every(function(e){return e.getDenom().equals(1)})){for(var s=e[0],r=1;r<e.length;r++)s=R.gcd_(e[r],s);return s}return H.divide(R.gcd.apply(null,e.map(function(e){return e.getNum()})),R.lcm.apply(null,e.map(function(e){return e.getDenom()})))}return H.symfunction(\"gcd\",e)},gcd_:function(e,t){if(e.group!==C&&e.group!==c||(e=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(e)})),t.group===C&&(t=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(t)})),e.isConstant()&&t.isConstant())return new Q(Z.Math2.QGCD(new z(+e),new z(+t)));var n=H.multiply(e.getDenom()||new Q(1),t.getDenom()||new Q(1)).invert();if(e=H.multiply(e.clone(),n.clone()),t=H.multiply(t.clone(),n.clone()),e=H.expand(e),t=H.expand(t),e.group===L||t.group===L){var r=H.divide(e.clone(),t.clone());if(!(u=H.multiply(t.clone(),r.getDenom().invert())).equals(1))return u}if(e.group===p||t.group===p){var r=new Q(Z.Math2.GCD(e.multiplier,t.multiplier)),i=R.gcd_(e.value===Y?new Q(1):H.parse(e.value),t.value===Y?new Q(1):H.parse(t.value)),s=R.gcd_(H.parse(e.power),H.parse(t.power));return H.multiply(r,H.pow(i,s))}e.length<t.length&&(u=e,e=t,t=u);i=$(e),s=$(t);if(i.length===s.length&&1===i.length&&i[0]===s[0]||1===i.length&&0===s.length||0===i.length&&1===s.length)return e=new W(e),t=new W(t),H.divide(e.gcd(t).toSymbol(),n);var o,a=[];for(e.each(function(e){a.push(e.multiplier)}),t.each(function(e){a.push(e.multiplier)});!t.equals(0);){var u=t.clone();if(e=e.clone(),o=R.div(e,u),t=o[1],o[0].equals(0))return H.divide(new Q(Z.Math2.QGCD(e.multiplier,t.multiplier)),n);e=u}var l=Z.Math2.QGCD.apply(void 0,a);return l.equals(1)||e.each(function(e){e.multiplier=e.multiplier.divide(l)}),!e.equals(1)||e.isConstant()||t.isConstant()?H.divide(e,n):H.divide(H.symfunction(\"gcd\",arguments),n)},lcm:function(){var e;1===arguments.length?arguments[0]instanceof Z.Vector?e=arguments[0].elements:H.error(\"lcm expects either 1 vector or 2 or more arguments\"):e=Z.Utils.arguments2Array(arguments);var t=e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1)),n=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map(function(e){return e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1))}),n=e.every(function(e){return Z.Utils.isVariableSymbol(e)})?H.symfunction(\"gcd\",Z.Utils.arrayUnique(n)):R.gcd.apply(null,n);return H.divide(t,n)},divide:function(e,t){var n=Z.Algebra.Factor.factor(e.clone()),r=n.getDenom();return r.isConstant(\"all\")?r=new Q(1):e=H.expand(Q.unwrapPARENS(H.multiply(n,r.clone()))),e=R.div(e,t),t=H.divide(e[1],t),H.divide(H.add(e[0],t),r)},div:function(e,t){var n,r,i=[new Q(0),e.clone()];try{if(t.isConstant(\"all\"))return e.each(function(e){e.multiplier=e.multiplier.divide(t.multiplier)}),[e,new Q(0)];if(e=H.expand(e),t=H.expand(t),e.group===j&&t.group===X){var s=e.value,o=Z.Utils.decompose_fn(t.clone(),s,!0);if(e.isLinear()&&o.x&&o.x.isLinear()&&t.isLinear()){var a=Q.create(e.multiplier);return[H.divide(a.clone(),o.a.clone()),H.divide(H.multiply(a,o.b),o.a).negate()]}}if(e.group===j&&t.group===j){var u=H.divide(e.clone(),t.clone());return u.isConstant()?[u,new Q(0)]:[new Q(0),e.clone()]}var l,c,p=e.hasFunc(),f=t.hasFunc(),h=!1;(p||f)&&(h=!0,l={},e=H.parse(Z.Utils.subFunctions(e,l)),t=H.parse(Z.Utils.subFunctions(t,l)),c=Z.Utils.getFunctionsSubs(l));var m=Z.Utils.arrayUnique($(e).concat($(t)));if((e.isImaginary()||t.isImaginary())&&m.push(Z.Settings.IMAGINARY),1===m.length)var g=(F=new W(e).divide(new W(t)))[0].toSymbol(),d=F[1].toSymbol();else{m.push(Y);var v=function(e){for(var t=new Q(0),n=0;n<e.length;n++)var r=e[n].toSymbol(),t=H.add(t,r);return t},b=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},S=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=b(n),o=t+1;o<r;o++){var a=e[o],u=n.sum.equals(a.sum);if(!u&&s)break;if(u){for(var l,c,p,f,h=n.terms.length,m=0;m<h;m++){var g=n.terms[m],d=a.terms[m];void 0!==l&&!g.greaterThan(l)||(l=g,p=m),void 0!==c&&!d.greaterThan(c)||(c=d,f=m)}var v=l.subtract(a.terms[p]),u=c.subtract(n.terms[f]);if(v<u){s=[c,f,a];break}if(u<v){s=[l,p,n];break}}else if(s=b(a))break;s=b(a)}if(!s)return b(e[0],!0);for(o=0;o<E.length;o++){var w,y=E[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?S(e,++t):s}},w=Z.Utils.toMapObj(m),y=function(e,t){return t.sum.subtract(e.sum)},M=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},N=e.tBase(w).sort(y),E=t.tBase(w).sort(y),q=M(N[0],E[0])&&N[0].count>E[0].count?E:N,x=S(q),A=[];if(x){var C=x[1],L=function(e,t){var n=e.len(),r=t.len(),t=t.terms[C],e=e.terms[C];return n<r&&t.greaterThan(e)?r-n:t.subtract(e)},C=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(N,C);N.sort(L),E.sort(L);var I=E[0],U=N[0],_=new J(new z(1),[],U.map);if(I.sum.greaterThan(U.sum)&&1<U.len())for(var O=0;O<U.terms.length;O++){var R=I.terms[O].subtract(U.terms[O]);if(R.equals(0))_.terms[O]=new z(0);else{var T=R.add(new z(1));_.terms[O]=R;for(var P=0;P<N.length;P++)N[P].terms[O]=N[P].terms[O].add(T)}}for(var k=M(N[0],E[0]),D=0;k&&(r=E,!(n=N)[0].sum.equals(r[0].sum)||n.length>=r.length);){if(200<D++)throw new Z.exceptions.InfiniteLoopError(\"Unable to compute!\");var F=N[0].divide(E[0]);A.push(F),N.shift();for(O=1;O<E.length;O++){var B=E[O].multiply(F).generateImage(),G=N.length;0===G&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L));for(P=0;P<G;P++){var V=N[P];if(V.getImg()===B.getImg()){V.coeff=V.coeff.subtract(B.coeff),V.coeff.equals(0)&&(Z.Utils.remove(N,P),P--);break}P===G-1&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L))}}if(!(k=M(N[0],E[0]))&&N.length>=E.length)for(O=1;O<N.length;O++)if(k=M(N[O],E[0])){N.unshift(Z.Utils.remove(N,O));break}}}g=v(A),d=v(N),void 0!==_&&(_=_.toSymbol(),g=H.divide(g,_.clone()),d=H.divide(d,_))}return h&&(g=H.parse(g.text(),c),d=H.parse(d.text(),c)),[g,d]}catch(e){return i}},line:function(e,t,n){Z.Utils.isArray(e)&&(e=Z.Utils.convertToVector(e)),Z.Utils.isArray(t)&&(t=Z.Utils.convertToVector(t)),n=H.parse(n||\"x\"),Z.Utils.isVector(e)&&Z.Utils.isVector(t)||H.error('Line expects a vector! Received \"'+e+'\" & \"'+t+'\"');var r=H.subtract(t.e(1).clone(),e.e(1).clone()),t=H.subtract(t.e(2).clone(),e.e(2).clone()),r=H.divide(t,r),n=H.multiply(n,r.clone()),r=H.multiply(e.e(1).clone(),r);return H.add(H.subtract(n,r),e.e(2).clone())},PartFrac:{createTemplate:function(r,e,t,n){(r=R.Factor.factor(r)).each(function(e,t){var n;e.group===C&&\"\"===e.fname&&e.args[0].group===j&&(n=e.args[0],this.symbols?(delete this.symbols[t],this.symbols[n.value]=n):r=e.args[0])});for(var i=e.collectFactors(),s=[],o=[],a=new Q(1),u=0;u<i.length;u++){var l=Q.unwrapPARENS(i[u]);if(l.power.greaterThan(1))for(var c=Number(l.power),p=l.clone().toLinear(),f=Number(R.degree(p,n)),h=0;h<c;h++){var m=H.pow(p.clone(),new Q(h+1));t.push(m.clone());var g=H.divide(r.clone(),m.clone());o.push(f),s.push(g)}else{f=Number(R.degree(l,n)),t.push(l);g=H.divide(r.clone(),l.clone());g=H.expand(Q.unwrapPARENS(g)),o.push(f),s.push(g)}}return[t=t.map(function(e){return H.multiply(e,a.clone())}),s,o]},partfrac:function(t,o,n){var e=$(t);o=o||H.parse(e[0]);try{var a,r,i,u,l,c,s,p,f,h,m,g,d,v,w=H.expand(t.getNum()),y=H.expand(t.getDenom().toUnitMultiplier());if(w.multiplier=t.multiplier,i=w.groupTerms(o),Number(R.degree(w,o))>=Number(R.degree(y,o))?(p=(s=R.div(w.clone(),H.expand(y.clone())))[0],i=(w=s[1]).groupTerms(o)):p=new Q(0),1===Number(R.degree(y,o))){var b=H.divide(w,y);return n?[p,b]:H.add(p,b)}r=R.Factor.factor(y),m=R.PartFrac.createTemplate(y.clone(),r,[],o),g=m[0],f=m[1],u=m[2],c=[i.length],l=[],a=[],h=[],f.map(function(e,t){d=g[t],v=u[t];for(var n=0;n<v;n++){a.push(d.clone());var r=Q.create(o,n),i=H.expand(H.multiply(e,r.clone())).groupTerms(o),s=i.length;c.push(s),l.push(i),h.push(r.clone())}});for(var S=Z.Utils.arrayMax(c),M=new Z.Matrix(Z.Utils.fillHoles(i,S)).transpose(),N=new Z.Matrix,E=0;E<l.length;E++)N.elements.push(Z.Utils.fillHoles(l[E],S));var q=H.multiply(N.transpose().invert(),M),x=n?[p]:p;return q.each(function(e,t){t=H.multiply(h[t],H.divide(e,a[t]));n?x.push(t):x=H.add(x,t)}),x}catch(e){try{if(t.isComposite()){var A={};t.each(function(e){var t=e.getDenom(),n=e.getNum(),e=A[t];A[t]=e?H.add(e,n):n});var C,L=new Q(0);for(C in A)L=H.add(L,H.divide(A[C],H.parse(C)));t=L}}catch(e){}}return t}},degree:function(e,t,n){if(n=n||{nd:[],sd:[],depth:0},!t){var r=$(e);if(1<r.length)throw new Error(\"You must specify the variable for multivariate polynomials!\");if(0===r.length)return new Q(0);t=H.parse(r[0])}r=e.group;e.isComposite()?((e=e.clone()).distributeExponent(),e.each(function(e){n.depth++,R.degree(e,t,n),n.depth--})):e.group===L?e.each(function(e){n.depth++,R.degree(e,t,n),n.depth++}):r===p&&e.value===t.value?n.sd.push(e.power.clone()):r===j&&e.value===t.value?n.nd.push(H.parse(e.power)):n.nd.push(new Q(0));e=0<n.nd.length?Z.Utils.arrayMax(n.nd):void 0;return 0===n.depth&&0<n.sd.length?(void 0!==e&&n.sd.unshift(e),H.symfunction(\"max\",n.sd)):Z.Utils.isSymbol(e)?e:H.parse(e)},sqComplete:function(e,t,n){Z.Utils.isSymbol(t)||(t=H.parse(t));var r,i,s,o,a,u=function(e){throw new Z.exceptions.ValueLimitExceededError(e=e||\"Stopping\")};return e.isPoly(!0)||u(\"Must be a polynomial!\"),o=Z.Utils.inBrackets,e=e.clone(),(r=Z.Algebra.degree(e,t)).equals(2)||u(\"Cannot complete square for degree \"+r),a=(s=Z.Algebra.coeffs(e,t))[2],u=s[1].sign(),r=H.divide(s[1],new Q(2)),e=H.pow(r.clone(),new Q(2)),n?[a,r,i]:(a=f.sqrt(a),e=H.divide(f.sqrt(e),a.clone()),i=H.subtract(s[0],H.pow(e.clone(),new Q(2))),{a:e=H.parse(o(a.clone()+\"*\"+t+(u<0?\"-\":\"+\")+e)),c:i,f:H.add(H.pow(e.clone(),new Q(2)),i.clone())})},Simplify:{strip:function(e){var t=H.parse(e.multiplier);e.toUnitMultiplier();var n=H.parse(e.power);return e.toLinear(),[t,n,e]},unstrip:function(e,t){var n=e[0],e=e[1];return H.multiply(n,H.pow(t,e))},complexSimp:function(e,t){var n=e.realpart(),r=e.imagpart(),i=t.realpart(),s=t.imagpart(),e=H.multiply(n.clone(),i.clone()),t=H.multiply(r.clone(),s.clone()),r=H.multiply(i.clone(),r),n=H.multiply(n,s.clone()),s=H.add(H.pow(i,new Q(2)),H.pow(s,new Q(2)));return H.divide(H.add(H.add(e,t),H.multiply(H.subtract(r,n),Q.imaginary())),s)},trigSimp:function(e){var t,n,r,i,s,o;return e.containsFunction([\"cos\",\"sin\",\"tan\"])&&(e=e.clone(),n=(e=(t=R.Simplify.strip(e)).pop()).clone(),e.group===X?(r=new Q(0),e.each(function(e){e=R.Simplify.trigSimp(e.fnTransform());r=H.add(r,e)},!0),n=H.pow(H.multiply(new Q(e.multiplier),r),new Q(e.power))):e.group===L&&(i=e.getNum(),s=e.getDenom(),(n=\"sin\"===i.fname&&\"cos\"===s.fname&&i.args[0].equals(s.args[0])&&i.power.equals(s.power)?H.parse(Z.Utils.format(\"({0})*({1})*tan({2})^({3})\",s.multiplier,i.multiplier,i.args[0],i.power)):n).group===L&&(o=new Q(1),n.each(function(e){\"tan\"===e.fname&&(e=H.parse(Z.Utils.format(\"({0})*sin({1})^({2})/cos({1})^({2})\",e.multiplier,R.Simplify.simplify(e.args[0]),e.power))),o=H.multiply(o,e)}),n=o)),e=n=R.Simplify.unstrip(t,n).distributeMultiplier()),e},fracSimp:function(e){var t=e.getDenom();if((e=(a=e.getNum()).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):e).isComposite()){for(var n,r,i,s,o,a,u=(e=1<e.power?H.expand(e):e).collectSymbols(),l=u.pop();u.length;)o=u.pop(),s=H.parse(l.getDenom()),i=H.parse(o.getDenom()),n=l.getNum(),r=o.getNum(),o=H.multiply(s.clone(),i.clone()),i=H.multiply(n,i),s=H.multiply(r,s),s=H.add(i,s),l=H.divide(s,o);return t=H.expand(l.getDenom()),(t=(a=H.expand(l.getNum())).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):H.divide(a,t)).equals(e)?e:R.Simplify.simplify(t)}return e},ratSimp:function(e){var t,n;return e.group===L&&(t=e.getDenom(),n=e.getNum().distributeMultiplier(),t=R.Simplify.fracSimp(t),n=R.Simplify.fracSimp(n),e=H.divide(n,t)),e},sqrtSimp:function(e,t){if(e.isSQRT()){var n,r,i=R.Factor.factor(e.args[0].clone()),s=H.parse(i.multiplier),o=s.sign(),a=H.sqrt(s.abs());if(_(a))return i.group===L?(n=new Q(1),i.each(function(e){var t;e.group===u?(t=H.sqrt(e.clone()),_(t)?a=H.multiply(a,t):n=H.multiply(n,e)):n=H.multiply(n,e)}),o=H.multiply(n,H.parse(o)),(r=H.sqrt(o.clone())).isImaginary&&(r=H.sqrt(H.expand(o.clone())))):r=H.sqrt(i.clone().toUnitMultiplier()),H.multiply(a,r)}else e.isComposite()&&e.isLinear()?(a=new Q(0),e.each(function(e){a=H.add(a,R.Simplify.sqrtSimp(e))},!0),a=H.multiply(a,H.parse(e.multiplier))):e.group===L&&(a=H.parse(e.multiplier),e.each(function(e){e=R.Simplify.sqrtSimp(e);a=H.multiply(a,e)},!0),a=H.pow(a,H.parse(e.power)));return a||H.parse(e)},patternSub:function(n){var r={},i=function(e){var t=!1;return e.each(function(e){e.group===X?t=!0:e.symbols&&(t=i(e))}),t},s=function(e){e.each(function(e){var t;!e.symbols&&e.group!==C||(i(e)?s(e):r[e.value]||(t=Z.Utils.getU(n),r[e.value]=t,n=n.sub(e.value,t)))},!0)};return s(n),[n,r]},simplify:function(e){var t=R.Simplify.strip(e);if(e=t.pop(),(e=R.Simplify.fracSimp(e)).isConstant()||e.group===Z.groups.S)return t.push(e),R.Simplify.unstrip(t,e);var n,r=e.clone(),r=R.Simplify.trigSimp(r);return r=R.Simplify.ratSimp(r),(r=R.Factor.factor(r)).group===Z.groups.CP&&r.isLinear()&&(e=r.multiplier.clone(),r.toUnitMultiplier(),n=new Q(0),r.each(function(e){e=R.Simplify.simplify(e);n=H.add(n,e)}),(r=n).multiplier=n.multiplier.multiply(e)),R.Simplify.unstrip(t,r)}},Classes:{Polynomial:W,Factors:O,MVTerm:J}};Z.Expression.prototype.simplify=function(){return R.Simplify.simplify(this.symbol)},nerdamer.useAlgebraDiv=function(){var n=R.divideFn=H.divide,r=0;H.divide=function(e,t){t=1===++r?Z.Algebra.divide(e,t):n(e,t);return r=0,t}},nerdamer.useParserDiv=function(){R.divideFn&&(H.divide=R.divideFn),delete R.divideFn},nerdamer.register([{name:\"factor\",visible:!0,numargs:1,build:function(){return R.Factor.factor}},{name:\"simplify\",visible:!0,numargs:1,build:function(){return R.Simplify.simplify}},{name:\"gcd\",visible:!0,numargs:[1],build:function(){return R.gcd}},{name:\"lcm\",visible:!0,numargs:[1],build:function(){return R.lcm}},{name:\"roots\",visible:!0,numargs:-1,build:function(){return R.roots}},{name:\"divide\",visible:!0,numargs:2,build:function(){return R.divide}},{name:\"div\",visible:!0,numargs:2,build:function(){return R.div}},{name:\"partfrac\",visible:!0,numargs:[1,2],build:function(){return R.PartFrac.partfrac}},{name:\"deg\",visible:!0,numargs:[1,2],build:function(){return R.degree}},{name:\"coeffs\",visible:!0,numargs:[1,2],build:function(){return function(){var e=R.coeffs.apply(R,arguments);return new Z.Vector(e)}}},{name:\"line\",visible:!0,numargs:[2,3],build:function(){return R.line}},{name:\"sqcomp\",visible:!0,numargs:[1,2],build:function(){return function(t,e){try{return e=e||$(t)[0],R.sqComplete(t.clone(),e).f}catch(e){return t}}}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&void 0===nerdamer&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Algebra.js\")),function(){\"use strict\";var ct=nerdamer.getCore(),pt=ct.PARSER,ft=ct.Frac,ht=ct.Settings,mt=ct.Utils.isSymbol,gt=ct.groups.FN,dt=ct.Symbol,m=ct.Utils.text,vt=ct.Utils.inBrackets,wt=ct.Utils.isInt,yt=ct.Utils.format,bt=ct.Utils.even,k=ct.Utils.evaluate,g=ct.groups.N,St=ct.groups.S,gt=ct.groups.FN,Mt=ct.groups.PL,Nt=ct.groups.CP,Et=ct.groups.CB,qt=ct.groups.EX,d=ct.groups.P,xt=ht.LOG,At=\"sqrt\",Ct=\"sin\",Lt=\"cos\",It=\"tan\",Ut=\"sec\",_t=\"csc\",Ot=\"cot\",Rt=\"asin\",Tt=\"atan\",Pt=\"sinh\",kt=\"cosh\",Dt=\"tanh\";function Ft(e){this.message=e||\"\"}Ft.prototype=new Error,dt.prototype.hasIntegral=function(){return this.containsFunction(\"integrate\")},dt.prototype.fnTransform=function(){if(this.group!==gt)return this;var e,t,n,r=this.args[0],i=new dt(this.multiplier),s=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case Pt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/2\",r));break;case kt:n=pt.parse(yt(\"(e^({0})+e^(-({0})))/2\",r));break;case Dt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))\",r));break;case It:n=pt.parse(yt(\"sin({0})/cos({0})\",r));break;case _t:n=pt.parse(yt(\"1/sin({0})\",r));break;case Ut:n=pt.parse(yt(\"1/cos({0})\",r));break;default:n=s}else if(this.power.equals(2))switch(this.fname){case Ct:n=pt.parse(yt(\"1/2-cos(2*({0}))/2\",r));break;case Lt:n=pt.parse(yt(\"1/2+cos(2*({0}))/2\",r));break;case It:n=pt.parse(yt(\"sin({0})^2/cos({0})^2\",r));break;case kt:n=pt.parse(yt(\"1/2+cosh(2*({0}))/2\",r));break;case Pt:n=pt.parse(yt(\"-1/2+cosh(2*({0}))/2\",r));break;case Dt:n=pt.parse(yt(\"(1+cosh(2*({0})))/(-1+cosh(2*({0})))\",r));break;case Ut:n=pt.parse(yt(\"(1-cos(2*({0})))/(1+cos(2*({0})))+1\",r));break;default:n=s}else this.fname===Ut?n=pt.parse(yt(\"1/cos({0})^({1})\",this.args[0],this.power)):this.fname===_t?n=pt.parse(yt(\"1/sin({0})^({1})\",this.args[0],this.power)):this.fname===It?n=this.power.lessThan(0)?pt.parse(yt(\"cos({0})^(-({1}))/sin({0})^({1})\",this.args[0],this.power.negate())):pt.parse(yt(\"sin({0})^({1})/cos({0})^({1})\",this.args[0],this.power)):this.fname===Ct&&this.power.lessThan(0)?n=pt.parse(yt(\"csc({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Lt&&this.power.lessThan(0)?n=pt.parse(yt(\"sec({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Ct&&this.power.equals(3)?n=pt.parse(yt(\"(3*sin({0})-sin(3*({0})))/4\",this.args[0])):this.fname===Lt&&this.power.equals(3)?n=pt.parse(yt(\"(cos(3*({0}))+3*cos({0}))/4\",this.args[0])):this.fname!==Lt&&this.fname!==Ct||!bt(this.power)?n=s:(t=this.power/2,e=pt.pow(this.clone().toLinear(),pt.parse(2)).fnTransform(),t=pt.expand(pt.pow(e,pt.parse(t))),n=new dt(0),t.each(function(e){e=e.fnTransform();n=pt.add(n,e)},!0));return pt.multiply(n,i)},dt.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===St)return!1;if(this.fname&&(ct.Utils.in_trig(this.fname)||ct.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].hasTrig())return!0;return!1},ct.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},ct.Utils.toCommonDenominator=function(e){if(e.isComposite()&&e.isLinear()){var t=new dt(e.multiplier),n=new dt(1),r=new dt(0);return e.each(function(e){n=pt.multiply(n,e.getDenom())},!0),e.each(function(e){var t=e.getNum(),e=e.getDenom(),e=pt.multiply(t,pt.divide(n.clone(),e));r=pt.add(r,e)}),pt.multiply(t,ct.Algebra.divide(pt.expand(r),pt.expand(n)))}return e},ct.Utils.in_inverse_trig=function(e){return-1!==[Rt,\"acos\",Tt,\"acsc\",\"asec\",\"acot\"].indexOf(e)},ct.Utils.in_trig=function(e){return-1!==[Lt,Ct,It,Ut,_t,Ot].indexOf(e)},ct.Utils.in_htrig=function(e){return-1!==[Pt,kt,Dt,\"acsch\",\"asech\",\"acoth\"].indexOf(e)},ct.Matrix.jacobian=function(e,t){var i=new ct.Matrix;return(t=t||ct.Utils.arrayGetVariables(e)).forEach(function(n,r){e.forEach(function(e,t){e=ct.Calculus.diff(e.clone(),n);i.set(t,r,e)})}),i},ct.Matrix.prototype.max=function(){var t=new dt(0);return this.each(function(e){e=e.abs();e.gt(t)&&(t=e)}),t},ct.Matrix.cMatrix=function(n,e){var r=new ct.Matrix;return e.forEach(function(e,t){r.set(t,0,pt.parse(n))}),r};var Bt=ct.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==gt)return!1;return!0},l=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(sin(({0})+({1}))-sin(({0})-({1})))/2\",e,t))},c=ct.Utils.cosAsinAtranform=function(e,t){if(1!==Number(t.power))return pt.multiply(e,t);e=e.args[0];return pt.parse(yt(\"(sin(2*({0})))/2\",e))},p=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(cos(({0})+({1}))-cos(({0})-({1})))/2\",e,t))},Gt=ct.Utils.trigTransform=function(e){for(var t,n,r,i,s={},o=new dt(1),a=0,u=e.length;a<u;a++)(r=e[a]).group===gt?(n=r.fname)===Lt&&s.sin?(t=(s.sin.args[0].toString()!==r.args[0].toString()?l:c)(r,s.sin),delete s.sin,o=pt.multiply(o,t)):n===Ct&&s.cos?(t=(s.cos.args[0].toString()!==r.args[0].toString()?l:c)(r,s.cos),delete s.cos,o=pt.multiply(o,t)):n===Ct&&s.sin?(t=s.sin.args[0].toString()!==r.args[0].toString()?p(r,s.sin):pt.multiply(r,s.sin),delete s.sin,o=t):s[n]=r:o=pt.multiply(o,r);for(i in s)o=pt.multiply(o,s[i]);return o};ct.Settings.integration_depth=10,ct.Settings.max_lim_depth=10;var Vt=ct.Calculus={version:\"1.4.6\",sum:function(s,o,a,u){if(o.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(o)+\" provided\");var e;return o=o.value,ct.Utils.isNumericSymbol(a)&&ct.Utils.isNumericSymbol(u)?(e=u-a<200?\"\":\"PARSE2NUMBER\",a=Number(a),u=Number(u),ct.Utils.block(e,function(){for(var e=s.text(),t={\"~\":!0},n=new ct.Symbol(0),r=a;r<=u;r++){t[o]=new dt(r);var i=pt.parse(e,t),n=pt.add(n,i)}return n})):pt.symfunction(\"sum\",arguments)},product:function(i,s,o,a){if(s.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(s)+\" provided\");return s=s.value,ct.Utils.isNumericSymbol(o)&&ct.Utils.isNumericSymbol(a)?ct.Utils.block(a-o<200?\"\":\"PARSE2NUMBER\",function(){o=Number(o),a=Number(a.multiplier);for(var e=i.text(),t={},n=new ct.Symbol(1),r=o;r<=a;r++)t[s]=new dt(r),n=pt.multiply(n,pt.parse(e,t));return n}):pt.symfunction(\"product\",arguments)},diff:function(e,l,r){if(ct.Utils.isVector(e)){var t=new ct.Vector([]);return e.each(function(e){t.elements.push(Vt.diff(e,l,r))}),t}if(ct.Utils.isMatrix(e)){var i=new ct.Matrix;return e.each(function(e,t,n){i.set(t,n,Vt.diff(e,l,r))}),i}var n,s,c=mt(l)?l.text():l;return r=mt(r)?r.multiplier:r||1,void 0===c&&(c=ct.Utils.variables(e)[0]),e.group===gt&&e.fname===At&&(s=e.args[0],n=e.power.clone(),s.group===g&&s.group===d||(s.power=mt(s.power)?pt.multiply(s.power,pt.multiply(new dt(.5)),n):s.power.multiply(new ft(.5)).multiply(n),s.multiplier=s.multiplier.multiply(e.multiplier)),e=s),e=e.group!==gt||mt(e.power)?f(e):(n=f(pt.parse(e)),s=Vt.diff(e.args[0].clone(),c),pt.multiply(n,s)),e=1<r?Vt.diff(e,l,--r):e;function p(e){return e.value!==c&&!e.contains(c,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new ft(1)),e.power.equals(0)&&(e=dt(e.multiplier))),e}function f(e){var t=e.group;if(t===g||t===St&&e.value!==c||t===d)e=dt(0);else if(t===St)e=p(e);else{if(t===Et){var n=e.multiplier.clone();e.toUnitMultiplier();var r=pt.multiply(function(e){for(var t=e.collectSymbols(),n=new dt(0),r=t.length,i=0;i<r;i++){for(var s=Vt.diff(t[i].clone(),c),o=0;o<r;o++)i!==o&&(s=pt.multiply(s,t[o].clone()));n=pt.add(n,s)}return n}(e),p(e));return r.multiplier=r.multiplier.multiply(n),r}if(t===gt&&e.power.equals(1))switch(e.fname){case xt:s=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=s.multiplier.divide(e.multiplier);break;case Lt:e.fname=Ct,e.multiplier.negate();break;case Ct:e.fname=Lt;break;case It:e.fname=Ut,e.power=new ft(2);break;case Ut:e=h(e,It);break;case _t:e=h(e,\"-cot\");break;case Ot:e.fname=_t,e.multiplier.negate(),e.power=new ft(2);break;case Rt:e=pt.parse(\"(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acos\":e=pt.parse(\"-(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case Tt:e=pt.parse(\"(1+(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"abs\":n=e.multiplier.clone(),e.toUnitMultiplier(),(o=e.args[0].clone()).toUnitMultiplier(),(e=pt.parse(vt(m(e.args[0]))+\"/abs\"+vt(m(o)))).multiplier=n;break;case\"parens\":e=dt(1);break;case\"cosh\":e.fname=\"sinh\";break;case\"sinh\":e.fname=\"cosh\";break;case Dt:e.fname=\"sech\",e.power=new ft(2);break;case\"sech\":e=h(e,\"-tanh\");break;case\"csch\":var i=String(e.args[0]);return pt.parse(\"-coth(\"+i+\")*csch(\"+i+\")\");case\"coth\":i=String(e.args[0]);return pt.parse(\"-csch(\"+i+\")^2\");case\"asinh\":e=pt.parse(\"(sqrt(1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acosh\":e=pt.parse(\"(sqrt(-1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"atanh\":e=pt.parse(\"(1-(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"asech\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2-1)*(\"+i+\")^2)\");break;case\"acoth\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2-1)\");break;case\"acsch\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2+1)*(\"+i+\")^2)\");break;case\"asec\":i=String(e.args[0]);e=pt.parse(\"1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acsc\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acot\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2+1)\");break;case\"S\":i=String(e.args[0]);e=pt.parse(\"sin((pi*(\"+i+\")^2)/2)\");break;case\"C\":i=String(e.args[0]);e=pt.parse(\"cos((pi*(\"+i+\")^2)/2)\");break;case\"Si\":i=e.args[0];e=pt.parse(\"sin(\"+i+\")/(\"+i+\")\");break;case\"Shi\":i=e.args[0];e=pt.parse(\"sinh(\"+i+\")/(\"+i+\")\");break;case\"Ci\":i=e.args[0];e=pt.parse(\"cos(\"+i+\")/(\"+i+\")\");break;case\"Chi\":i=e.args[0];e=pt.parse(\"cosh(\"+i+\")/(\"+i+\")\");break;case\"Ei\":i=e.args[0];e=pt.parse(\"e^(\"+i+\")/(\"+i+\")\");break;case\"Li\":i=e.args[0];e=pt.parse(\"1/\"+ht.LOG+\"(\"+i+\")\");break;case\"erf\":e=pt.parse(\"(2*e^(-(\"+e.args[0]+\")^2))/sqrt(pi)\");break;case\"atan2\":var s=String(e.args[0]),i=String(e.args[1]);e=pt.parse(\"(\"+i+\")/((\"+i+\")^2+(\"+s+\")^2)\");break;case\"sign\":e=new dt(0);break;case\"sinc\":e=pt.parse(yt(\"(({0})*cos({0})-sin({0}))*({0})^(-2)\",e.args[0]));break;case ht.LOG10:e=pt.parse(\"1/((\"+e.args[0]+\")*\"+ht.LOG+\"(10))\");break;default:e=pt.symfunction(\"diff\",[e,l])}else if(t===qt||t===gt&&mt(e.power)){var r=t===qt?e.value:t===gt&&e.contains(c)?e.fname+vt(m(e.args[0])):e.value+vt(m(e.args[0])),o=(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),Vt.diff(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),c));e=pt.multiply(e,o)}else if(t!==gt||e.power.equals(1)){if(t===Nt||t===Mt){var a,t=e.clone(),u=new dt(0);for(a in e.symbols)u=pt.add(u,Vt.diff(e.symbols[a].clone(),c));e=pt.multiply(p(t),u)}}else(o=e.clone()).toLinear(),o.toUnitMultiplier(),e=pt.multiply(p(e.clone()),f(o))}return e.updateHash(),e}function h(e,t,n){return pt.multiply(e,pt.parse(t+vt(n||m(e.args[0]))))}},integration:{u_substitution:function(e,i){function t(e,t,n){var r=Vt.diff(t,i),r=n?n(e,t):pt.divide(e.clone(),r);return r.contains(i,!0)?null:r}function n(e,t){e=Vt.integrate(pt.symfunction(e,[new dt(u)]),u,0);return(e=e.sub(new dt(u),t)).updateHash(),e}var r,s=e[0].clone(),o=e[1].clone(),a=s.group,e=o.group,u=\"__u__\";if(a===gt&&e!==gt)return(r=t(o,(c=s.args[0]).clone()))?pt.multiply(r,n(s.fname,c)):(r=t(o,s))?Vt.integration.poly_integrate(s):void 0;if(e===gt&&a!==gt){if(r=t(s,(c=o.args[0]).clone()))return pt.multiply(r,n(o.fname,c))}else{if(a===gt&&e===gt)return(r=t(s.clone(),o.clone()))||(r=t(o.clone(),s.clone()))?pt.multiply(Vt.integration.poly_integrate(o),r):void 0;if(a===qt&&e!==qt){if(!(r=t(o,(p=s.power).clone()))){var l=Vt.integration.decompose_arg(p.clone(),i),c=Vt.diff(l[2].clone(),i),c=Vt.integration.decompose_arg(c.clone(),i);if(pt.multiply(l[1],c[1]).power.equals(o.power)){c=pt.divide(l[0].clone(),c[0].clone()),c=pt.multiply(c.clone(),pt.pow(new dt(s.value),pt.multiply(l[0],new dt(u)))),c=pt.multiply(c,new dt(u));return Vt.integration.by_parts(c,u,0,{}).sub(u,l[1].clone())}}l=Vt.integrate(s.sub(p.clone(),new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(e===qt&&a!==qt){r=t(s,(p=o.power).clone());l=Vt.integrate(o.sub(p,new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(s.isComposite()||o.isComposite()){var a=function(e,t){t=Vt.diff(t,i),e=ct.Algebra.Factor.factor(e),t=ct.Algebra.Factor.factor(t);return pt.divide(e,t)},l=s.isComposite()?s.clone().toLinear():s.clone(),p=o.isComposite()?o.clone().toLinear():o.clone();return(r=t(l.clone(),p.clone(),a))?pt.multiply(Vt.integration.poly_integrate(o),r):(r=t(p.clone(),l.clone(),a))?pt.multiply(Vt.integration.poly_integrate(s),r):void 0}}},poly_integrate:function(e){var t=e.power.toString(),n=e.multiplier.toDecimal(),e=e.toUnitMultiplier().toLinear();return-1===Number(t)?pt.multiply(new dt(n),pt.symfunction(xt,[e])):pt.parse(yt(\"({0})*({1})^(({2})+1)/(({2})+1)\",n,e,t))},stop:function(e){throw ct.Utils.warn(e=e||\"Unable to compute integral!\"),new Ft(e)},partial_fraction:function(e,t,n,r){var i;return mt(t)||(t=pt.parse(t)),i=new dt(0),(e=ct.Algebra.PartFrac.partfrac(e,t)).group===Et&&e.isLinear()?(e.each(function(e){e.isLinear()||Vt.integration.stop()}),e.each(function(e){i=pt.add(i,Vt.integrate(e,t,n,r))})):i=pt.add(i,Vt.integrate(e,t,n,r)),i},get_udv:function(e){function t(e){var t,n=e.group;n===gt?(t=e.fname,ct.Utils.in_trig(t)||ct.Utils.in_htrig(t)?r[3].push(e):ct.Utils.in_inverse_trig(t)?r[1].push(e):t===xt?r[0].push(e):Vt.integration.stop()):n===St||e.isComposite()&&e.isLinear()||n===Et&&e.isLinear()?r[2].push(e):n===qt||e.isComposite()&&!e.isLinear()?r[4].push(e):Vt.integration.stop()}var r=[[],[],[],[],[]];e.group===Et?e.each(function(e){t(dt.unwrapSQRT(e,!0))}):t(e);for(var n,i=new dt(1),s=0;s<5;s++){var o=r[s],a=o.length;if(0<a){if(1<a)for(var u=new dt(1),l=0;l<a;l++)u=pt.multiply(u,o[l].clone());else u=o[0].clone();n?i=pt.multiply(i,u):(n=u).multiplier=n.multiplier.multiply(e.multiplier)}}return[n,i]},trig_sub:function(e,t,n,r,i,s){(i=i||Vt.integration.decompose_arg(e.clone().toLinear(),t))[3],i[2];var o=i[0],a=i[1];if(a.power.equals(2)&&o.greaterThan(0)){t=ct.Utils.getU(e),i=pt.parse(It+vt(t)),o=pt.parse(Ut+vt(t)+\"^2\"),o=pt.multiply(e.sub(a,i),o),a=Vt.integrate(o,t,n,r).sub(i,a);return ct.Utils.clearU(i),a}},by_parts:function(e,t,n,r){var i,s,o,a,u,l;return r.previous=r.previous||[],o=(s=Vt.integration.get_udv(e))[0],i=s[1],u=(a=dt.unwrapSQRT(pt.expand(Vt.diff(o.clone(),t)),!0)).clone().stripVar(t),a=pt.divide(a,u.clone()),e=Vt.integrate(i.clone(),t,n||0),a=(s=pt.multiply(e.clone(),a)).toString(),-1!==r.previous.indexOf(a)&&ct.Utils.in_trig(o.fname)&&i.isE()?(r.is_cyclic=!0,new dt(1)):(r.previous.push(a),o=pt.multiply(o,e),e=s.multiplier.clone(),s.toUnitMultiplier(),(u=pt.multiply(Vt.integrate(s.clone(),t,n,r),u)).multiplier=u.multiplier.multiply(e),u=pt.subtract(o,u),r.is_cyclic&&(r.previous.pop(),0===r.previous.length&&(u=pt.expand(u),l=new dt(0),u.each(function(e){e.contains(t)||(l=pt.add(l,e.clone()))}),u=pt.divide(pt.subtract(u,l.clone()),pt.subtract(new dt(1),l)))),u)},decompose_arg:ct.Utils.decompose_fn},integrate:function(ot,at,ut,lt){var e;if(at||(e=ct.Utils.variables(ot),at=(at=1===e.length?e[0]:at)||\"x\"),ct.Utils.isVector(ot)){var t=new ct.Vector([]);return ot.each(function(e){t.elements.push(Vt.integrate(e,at))}),t}return isNaN(at)||pt.error(\"variable expected but received \"+at),ot.isConstant(!0)?pt.multiply(ot.clone(),pt.parse(at)):(lt=lt||{},ct.Utils.block(\"PARSE2NUMBER\",function(){ut=ut||0;var t,n=mt(at)?at.toString():at,e=(ce=dt.unwrapSQRT(ot.clone(),!0)).group;try{if(++ut>ct.Settings.integration_depth&&Vt.integration.stop(\"Maximum depth reached. Exiting!\"),ce.contains(n,!0)){if(e===St)t=Vt.integration.poly_integrate(ce,n,ut);else if(e===qt)if(ce.previousGroup===gt&&\"sqrt\"!==ce.fname&&ce.fname!==ht.PARENTHESIS&&Vt.integration.stop(),ce.contains(n)&&ce.previousGroup!==gt)ce.power.contains(n)?Vt.integration.stop():((We=Vt.diff(ce.clone().toLinear(),n)).contains(n)&&Vt.integration.stop(),t=Vt.integration.poly_integrate(ce,n,ut));else{if((f=Vt.diff(ce.power.clone(),n)).contains(n)){var r=f.stripVar(n);if((h=pt.divide(f.clone(),r.clone())).group===St&&h.isLinear())return r.multiplier=r.multiplier.divide(new ft(2)),pt.parse(yt(\"({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))\",r,n,ce.multiplier));Vt.integration.stop()}ce.isE()?f.isLinear()?t=ce:f.isE()&&f.power.group===St&&f.power.power.equals(1)?t=pt.multiply(pt.symfunction(\"Ei\",[ce.power.clone()]),ce.power):Vt.integration.stop():(g=pt.symfunction(xt,[pt.parse(ce.value)]),t=pt.divide(ce,g)),t=pt.divide(t,f)}else if(ce.isComposite()&&ce.isLinear()){var i=pt.parse(ce.multiplier);ce.toUnitMultiplier(),t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),t=pt.multiply(i,t)}else if(e===Nt)if((ce=ce.power.greaterThan(1)?pt.expand(ce):ce).power.equals(1))t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0);else{var s=Number(ce.power),i=ce.multiplier.clone();ce.toUnitMultiplier();var o,a,u,l=ce.clone().toLinear(),c=(Ve=Vt.integration.decompose_arg(l,n))[3],p=Ve[2],f=Ve[0],h=Ve[1];if(-1===s&&h.group!==Mt&&h.power.equals(2)){var m,g,d,v,w,y,b,S,M,N,E,q=!wt(c)||0<c;t=h.group===St&&h.power.equals(2)&&q?(m=function(e){var t=new dt(1);return e.each(function(e){t=pt.multiply(t,\"abs\"===e.fname?e.args[0]:e)}),t},d=f.clone(),v=c.clone(),d=pt.pow(d,new dt(.5)),v=pt.pow(v,new dt(.5)),g=pt.multiply(m(v),m(d)),R=pt.symfunction(Tt,[pt.divide(pt.multiply(f,h.toLinear()),g.clone())]),pt.divide(R,g)):h.group===St&&h.isLinear()?pt.divide(Vt.integration.poly_integrate(ce),f):h.power.equals(4)?(E=vt,d=pt.parse(At+E(f)+\"*\"+n+\"^2\"),v=pt.parse(At+E(2)+\"*\"+E(f)+\"^\"+E(\"1/4\")+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),w=pt.parse(At+E(c)),P=pt.add(pt.add(d.clone(),v.clone()),w.clone()),X=pt.add(pt.subtract(d,v),w),y=pt.parse(At+E(2)+\"*\"+E(c)+\"^\"+E(\"3/4\")),b=pt.parse(At+E(c)+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),S=pt.parse(\"2*\"+E(c)+\"*\"+At+E(2)+\"*\"+E(c)+\"^\"+E(\"1/4\")),M=pt.divide(pt.subtract(y.clone(),b.clone()),pt.multiply(S.clone(),X)),N=pt.divide(pt.add(y,b),pt.multiply(S,P.clone())),pt.add(Vt.integrate(M,n,ut,lt),Vt.integrate(N,n,ut,lt))):Vt.integration.partial_fraction(ce,n,ut)}else if(-.5===s)h.group===St&&h.power.equals(2)&&p.multiplier.lessThan(0)&&!c.multiplier.lessThan(0)?(f.negate(),t=c.isConstant()&&f.isConstant()?(g=pt.symfunction(At,[f.clone()]),o=pt.symfunction(At,[pt.multiply(f.clone(),c)]),pt.divide(pt.symfunction(Rt,[pt.divide(p.toLinear(),o)]),g)):(a=pt.symfunction(At,[f]),u=pt.multiply(a.clone(),h.clone().toLinear()),pt.divide(pt.symfunction(Tt,[pt.divide(u,pt.symfunction(At,[l.clone()]))]),a))):Vt.integration.stop();else if(.5===s&&h.power.equals(2)&&f.greaterThan(0))Vt.integration.stop();else if(h.isLinear()&&h.group!==Mt)t=pt.divide(Vt.integration.poly_integrate(ce),f);else{if(h.power.equals(2)&&f.greaterThan(0)){var x=pt.parse(At+vt(f)),A=pt.parse(At+vt(c)),C=pt.multiply(x.clone(),A.clone()).invert(),L=pt.pow(c,new dt(ce.power)),I=ct.Utils.getU(ce);Ze=pt.multiply(C,h.clone().toLinear());var U=pt.parse(Tt+vt(Ze)),_=2*(Math.abs(ce.power)-1),O=Vt.integrate(pt.parse(Lt+vt(I)+\"^\"+_));return ct.Utils.clearU(I),pt.multiply(O.sub(I,U),L)}if(ce.group===Et||ce.power.lessThan(0)){var R=ce.clone().toLinear(),T=ct.Algebra.Factor.factor(R).toString()!==R.toString();if(ct.Algebra.degree(R,pt.parse(n)).equals(2)&&!T)try{var P,k,D=ct.Algebra.sqComplete(R,n);Ze=ct.Utils.getU(R),P=D.f.sub(D.a,Ze),k=pt.pow(P,pt.parse(ce.power)),t=Vt.integrate(k,Ze).sub(Ze,D.a)}catch(e){Vt.integration.stop()}else t=Vt.integration.partial_fraction(ce,n,ut,lt)}else t=Vt.integration.by_parts(ce,n,ut,lt)}t.multiplier=t.multiplier.multiply(i)}else if(e===gt){var F=ce.args[0],i=ce.multiplier.clone();ce.toUnitMultiplier();var B,G,V,H,j,X,$,Z,z,f=(Ve=Vt.integration.decompose_arg(F,n))[0],h=Ve[1],Q=ce.fname;if(Q===xt||Q===Rt||\"acos\"===Q||Q===Tt&&h.isLinear()){var Y,s=ce.power.toString();wt(s)&&(ut-=s),t=F.isComposite()?(Ze=ct.Utils.getU(ce),R=pt.pow(pt.parse(xt+vt(Ze)),new dt(s)),Ce=Vt.diff(F,n),Y=pt.multiply(R,Ce),O=Vt.integrate(Y,Ze,ut,lt),pt.multiply(pt.parse(i),O.sub(Ze,F))):pt.multiply(pt.parse(i),Vt.integration.by_parts(ce,n,ut,lt))}else{if(Q===It&&ce.power.lessThan(0))return(Je=ce.clone()).power.negate(),Je.fname=Ot,pt.multiply(pt.parse(i),Vt.integrate(Je,n,ut));if(!f.contains(n,!0)&&ce.isLinear())if(\"abs\"===Q)(h=pt.divide(F.clone(),f.clone())).group!==St||h.power.lessThan(0)?Vt.integration.stop():t=ct.Utils.even(h.power)?Vt.integrate(F,n,ut):((z=Vt.integrate(h,n,ut)).power=z.power.subtract(new ft(1)),pt.multiply(pt.multiply(pt.symfunction(\"abs\",[h.toLinear()]),z),f));else{var W=ce.args[0].group,J=Vt.integration.decompose_arg(F,n);switch((W!==Nt&&W!==St&&W!==Et||!J[1].power.equals(1)||F.hasFunc())&&Vt.integration.stop(),Q){case Lt:t=pt.symfunction(Ct,[F]);break;case Ct:(t=pt.symfunction(Lt,[F])).negate();break;case It:t=pt.parse(yt(ht.LOG+\"(sec({0}))\",F));break;case Ut:t=pt.parse(yt(ht.LOG+\"(tan({0})+sec({0}))\",F));break;case _t:t=pt.parse(yt(\"-\"+ht.LOG+\"(csc({0})+cot({0}))\",F));break;case Ot:t=pt.parse(yt(ht.LOG+\"(sin({0}))\",F));break;case Pt:t=pt.symfunction(kt,[F]);break;case kt:t=pt.symfunction(Pt,[F]);break;case Dt:t=pt.parse(yt(ht.LOG+\"(cosh({0}))\",F));break;case\"asec\":case\"acsc\":case\"acot\":case\"asech\":case\"acsch\":case\"acoth\":t=Vt.integration.by_parts(ce,n,ut,lt);break;case\"sech\":t=pt.parse(yt(\"atan(sinh({0}))\",F));break;case\"csch\":t=pt.parse(yt(ht.LOG+\"(tanh(({0})/2))\",F));break;case\"coth\":t=pt.parse(yt(ht.LOG+\"(sinh({0}))\",F));break;case\"exp\":t=Vt.integrate(pt.parse(yt(\"e^({0})\",F)),n,ut);break;case\"S\":var F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)\",ee,te,h));break;case\"C\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)\",ee,te,K));break;case\"erf\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0];t=pt.parse(yt(\"e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))\",ee,K,F));break;case\"sign\":t=pt.multiply(ce.clone(),F.clone());break;default:Vt.integration.stop()}t=pt.divide(t,f)}else h.isLinear()?Q===Lt||Q===Ct?(s=Number(ce.power),t=s<0?(ce.fname=Q===Ct?_t:Ut,ce.invert().updateHash(),Vt.integrate(ce,n,ut)):(F=ce.args[0],B=ce.clone(),G=ce.clone(),Ie=new dt((s-1)/s),V=pt.multiply(f.clone(),new dt(s)).invert(),B.power=B.power.subtract(new ft(1)),G.power=G.power.subtract(new ft(2)),We=pt.symfunction(Q===Lt?Ct:Lt,[F.clone()]),Q===Ct&&We.negate(),pt.add(pt.multiply(pt.multiply(V,B),We),pt.multiply(Ie,Vt.integrate(pt.parse(G),n,ut))))):Q===It||Q===Ot?ce.args[0].isLinear(n)&&(_=ce.power.subtract(new ft(1)).toString(),nt=ce.clone().toUnitMultiplier(),Z=pt.parse(yt((Q===Ot?\"-\":\"\")+\"1/({2}*{0})*{3}({1})^({0})\",_,F,f,Q)),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.subtract(Z,Vt.integrate(nt,n,ut))):Q===Ut||Q===_t?(H=ce.power.subtract(new ft(1)).toString(),j=ce.power.subtract(new ft(2)).toString(),X=Q===Ut?It:Ot,nt=ce.clone().toUnitMultiplier(),$=yt((Q===_t?\"-\":\"\")+\"1/({0}*{1})*{4}({3})^({2})*{5}({3})\",f,H,j,F,Q,X),Z=pt.parse($),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.add(Z,pt.multiply(new dt(j/H),Vt.integrate(nt,n,ut)))):Q!==kt&&Q!==Pt||!ce.power.equals(2)?Vt.integration.stop():t=Vt.integrate(ce.fnTransform(),n,ut):Vt.integration.stop();t.multiplier=t.multiplier.multiply(i)}}else if(e===Mt)t=Vt.integration.partial_fraction(ce,n,ut);else if(e===Et){var ne=(ce=ce.getDenom().group===St?pt.expand(ce):ce).stripVar(n),re=pt.divide(ce.clone(),ne.clone());if(ne.contains(n)&&(re=pt.multiply(re,ne),ne=new dt(1)),re.group!==Et){if(re.equals(1))return Vt.integrate(pt.expand(ce),n,ut);re.clone().toLinear().isPoly(!0)&&1<ct.Utils.variables(re).length&&(re=ct.Algebra.Factor.factor(re)),t=Vt.integrate(re,n,ut)}else{var ie=re.collectSymbols().sort(function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group}).map(function(e){e=dt.unwrapSQRT(e,!0);return\"exp\"===e.fname?pt.parse(yt(\"({1})*e^({0})\",e.args[0],e.multiplier)):e}),se=ie.length;if(ce.power<0){if(2===se)return Vt.integrate(pt.expand(ce),n,ut,lt)}else if(2===se){try{t=Vt.integration.u_substitution(ie,n)}catch(e){}if(!t){var oe,ae,ue,le,ce,pe,fe,he,me,ge,de,ve,we,ye,be,Se,Me,Ne,Ee,qe,xe,Ae,Ce,Le,Ie,Ue,_e,Oe,Re,Te,Pe=ie[0].group,ke=ie[1].group,De=ie[0],Fe=ie[1],Be=De.fname,Ge=Fe.fname;if(ce=pt.multiply(De.clone(),Fe.clone()),Pe===gt&&ke===gt)if(Be===xt||Ge===xt)t=Vt.integration.by_parts(ce.clone(),n,ut,lt);else{ie.sort(function(e,t){return t.fname>e.fname});var Ve,He=De.args[0];He.isLinear()&&(He.group===Nt||He.group===Et||He.group===St)||Vt.integration.stop(),h=(Ve=Vt.integration.decompose_arg(He,n))[1],f=Ve[0],h.isLinear()||Vt.integration.stop();var je,Xe=Fe.args[0];if(He.equals(Xe))if(Be===Ct&&Ge===Lt||Be===Lt&&Ge===Ct)if(De.power.lessThan(0)&&Vt.integration.stop(),Be===Ct&&De.power.add(Fe.power).equals(0))De.fname=It,De.updateHash(),t=Vt.integrate(De,n,ut);else if(bt(De.power)&&Ge===Lt&&Fe.power.lessThan(0)){var _=Number(De.power)/2,$e=pt.parse(yt(\"(1-cos({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else if(bt(De.power)&&Ge===Ct&&Fe.power.lessThan(0)){_=Number(De.power)/2,$e=pt.parse(yt(\"(1-sin({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else{var Ze,ze=ct.Utils.even(De.power),Qe=ct.Utils.even(Fe.power);if(t=new dt(0),ze&&Qe){var Ye=function(e){var t=e.power/2,t=e.fname===Lt?\"((1/2)+(cos(2*(\"+e.args[0]+\"))/2))^\"+t:\"((1/2)-(cos(2*(\"+e.args[0]+\"))/2))^\"+t;return pt.parse(t)},f=Ye(De),c=Ye(Fe),We=pt.multiply(f,c);return(Je=pt.expand(We)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),pt.multiply(t,ne)}nt=ze?(Ze=De,Fe):(Ze=Fe,De);var Je,Ke=Ze.fname===Lt?-1:1,et=((_=nt.power)-1)/2,tt=pt.parse(\"(1-\"+Ze.fname+ct.Utils.inBrackets(He)+\"^2)^\"+et);(Je=pt.expand(pt.multiply(new dt(Ke),pt.multiply(Ze.clone(),tt)))).each(function(e){t=pt.add(t,Vt.integration.poly_integrate(e.clone()))})}else Be===Ut&&Ge===It&&h.isLinear()&&Fe.isLinear()?t=pt.parse(yt(\"sec({0})^({1})/({1})\",De.args[0],De.power)):Be===It&&Ge===Ut&&h.isLinear()?De.isLinear()&&Fe.isLinear()?t=pt.divide(pt.symfunction(Ut,[He.clone()]),f):bt(De.power)?(s=Number(De.power)/2,We=pt.parse(yt(\"(sec({0})^2-1)^({1})\",De.args[0],s)),t=Vt.integrate(pt.expand(pt.multiply(We,Fe)),n,ut)):Vt.integration.stop():t=Be===Ut&&Ge===Lt?(De.fname=Lt,De.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):Be===Ct&&Ge===_t?(Fe.fname=Ct,Fe.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):(We=Be!==It||Ge!==Lt&&Ge!==Ct||!Fe.power.lessThan(0)?pt.multiply(De.fnTransform(),Fe.fnTransform()):pt.multiply(De.fnTransform(),Fe),Vt.integrate(pt.expand(We),n,ut));else Be!==Ct&&Be!==Lt||Ge!==Ct&&Ge!==Lt?Vt.integration.stop():De.isLinear()&&Fe.isLinear()?t=De.args[0].isLinear()&&Fe.args[0].isLinear()?(Ge===Ct?(p=De.args[0],je=Fe.args[0]):(je=De.args[0],p=Fe.args[0]),R=pt.parse(yt(\"(sin(({1})+({0}))+sin(({1})-({0})))/2\",p.toString(),je.toString())),Vt.integrate(R,n,ut)):(st=Gt(ie),Vt.integrate(pt.expand(st),n,ut)):(st=new dt(1),ie.map(function(e){e=e.fnTransform();st=pt.multiply(st,e)}),We=pt.expand(st),(t=Vt.integrate(We,n,ut)).hasIntegral()&&(t=Vt.integrate(Gt(st.collectSymbols()),n,ut)))}else Pe===gt&&ke===St?(oe=De.isLinear(),De.fname===Lt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Ci\",[De.args[0]]):De.fname===Lt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===kt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Chi\",[De.args[0]]):De.fname===kt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Ct&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Si\",[De.args[0]]):De.fname===Ct&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Pt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Shi\",[De.args[0]]):De.fname===Pt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===xt&&Fe.power.equals(-1)?t=Vt.integration.poly_integrate(De,n,ut):\"erf\"===De.fname?Fe.power.equals(1)&&(ee=(Se=Vt.integration.decompose_arg(De.args[0],n))[0],K=Se[1],F=De.args[0].toString(),t=pt.parse(yt(\"(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)\",ee,K,F))):t=Vt.integration.by_parts(ce,n,ut,lt)):Pe===qt&&ke===St?(h=Be===xt?Vt.integration.decompose_arg(De.args[0],n)[1]:null,t=De.isE()&&(De.power.group===St||De.power.group===Et)&&Fe.power.equals(-1)?pt.symfunction(\"Ei\",[De.power.clone()]):Be===xt&&h.value===Fe.value?Vt.integration.poly_integrate(De,n,ut):Vt.integration.by_parts(ce,n,ut,lt)):Pe===Mt&&ke===St?(ce=Fe.value===De.value&&De.power.equals(-1)?(ae=Math.min.apply(null,ct.Utils.keys(De.symbols)),ue=Math.min(ae,Fe.power),(le=Fe.clone()).power=new ft(ue),Fe=pt.divide(Fe,le.clone()),We=new dt(0),De.each(function(e){We=pt.add(We,pt.divide(e.clone(),le.clone()))}),We.multiplier=De.multiplier,pt.divide(Fe,We)):pt.expand(ce),t=Vt.integration.partial_fraction(ce,n,ut)):Pe===Nt&&ke===St?(R=De.clone().toLinear(),pe=ct.Algebra.degree(R,pt.parse(n)).equals(1),De.power.equals(-.5)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],xe=Number(De.power),Ae=Number(Fe.power),wt(Ae)&&ct.Utils.even(Ae)&&h.power.equals(2)?(Me=pt.divide(pt.multiply(pt.pow(c.clone(),new dt(2)),pt.symfunction(At,[pt.divide(c.clone(),f.clone())])),pt.pow(f.clone(),new dt(2))),Me=pt.multiply(Me,pt.symfunction(At,[c]).invert()),(fe=pt.parse(\"sin(u)\")).power=fe.power.multiply(Fe.power),O=Vt.integrate(fe,\"u\",ut),he=pt.parse(\"asin(sqrt(\"+f+\"/\"+c+\")*\"+n+\")\"),t=pt.multiply(Me,O.sub(new dt(\"u\"),he))):-.5===xe&&(me=function(e,t){t=pt.parse(Vt.integrate(e,n,ut,lt).sub(n,yt(t,n)));if(!t.hasIntegral())return t},-1===Ae?t=me(pt.expand(pt.expand(pt.pow(pt.multiply(De.invert(),Fe.invert()),new dt(2)))).invert(),\"sqrt(1-1/({0})^2)\"):-2===Ae&&(t=me(pt.sqrt(pt.expand(pt.divide(pt.pow(ce,new dt(2)).invert(),pt.pow(new dt(n),new dt(2))).negate())).invert(),\"sqrt(1-1/({0})^2)\")))):De.power.equals(-1)&&Fe.isLinear()&&pe?t=Vt.integration.partial_fraction(ce,n,ut):!De.power.lessThan(0)&&wt(De.power)?(ge=pt.expand(De),t=new dt(0),ge.each(function(e){e.group===Mt?e.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))}):t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))})):De.power.lessThan(-2)?t=Vt.integration.by_parts(ce,n,ut,lt):De.power.lessThan(0)&&Fe.power.greaterThan(1)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],l=De.clone().toLinear(),t=h.group!==Mt&&h.isLinear()?(s=Number(Fe.power),Ze=new dt(Ce=\"_u_\"),de=pt.expand(pt.divide(pt.pow(pt.subtract(Ze.clone(),c.clone()),new dt(s)),Ze.clone())),(ve={})[Ce]=l,we=pt.parse(de,ve),Vt.integrate(we,n,0)):Fe.power.greaterThan(h.power)||Fe.power.equals(h.power)?(ye=new ct.Algebra.Classes.Factors,De=ct.Algebra.Factor.coeffFactor(De.invert(),ye),(be=ct.Algebra.divide(Fe,De)).group!==Et?(t=new dt(0),be.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),ye.each(function(e){t=pt.divide(t,e)}),pt.expand(t)):Vt.integration.by_parts(ce,n,ut,lt)):Vt.integration.partial_fraction(ce,n,ut)):De.power.den.equals(2)?(f=(Se=Vt.integration.decompose_arg(De.clone().toLinear(),n))[3],h=Se[1],c=Se[0],je=Se[2],t=h.power.equals(2)&&c.lessThan(0)?(f.equals(1)||(ne=pt.multiply(ne,pt.pow(f,new dt(2)))),Ze=n,Me=pt.divide(pt.pow(c.clone().negate(),new dt(.5)),pt.pow(f,new dt(.5))),Ce=pt.symfunction(Lt,[new dt(Ze)]),Ne=pt.pow(pt.symfunction(Lt,[new dt(Ze)]),new dt(De.power.num)),Ee=pt.pow(pt.symfunction(Ct,[new dt(Ze)]),new dt(Fe.power)),qe=pt.multiply(pt.multiply(Ne,Ce),Ee),(O=Vt.integrate(qe,Ze,ut)).sub(Ze,pt.symfunction(Rt,[pt.multiply(new dt(n),Me)]))):Vt.integration.partial_fraction(ce,n,ut,lt)):pe&&(t=Vt.integration.partial_fraction(ce,n,ut))):De.isComposite()&&Fe.isComposite()?(t=new dt(0),De.power.greaterThan(0)&&Fe.power.greaterThan(0)?(Je=pt.expand(ce)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0):(xe=Number(De.power),Ae=Number(Fe.power),xe<0&&0<Ae&&(We=De,De=Fe,Fe=We),-1===xe&&-1===Ae?t=Vt.integration.partial_fraction(ce,n):De.each(function(e){e=pt.multiply(e,Fe.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)}))):Pe===Nt&&ie[0].power.greaterThan(0)?(De=pt.expand(De),t=new dt(0),De.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(e,Fe.clone()),n,ut))},!0)):Pe===gt&&ke===qt&&ct.Utils.in_htrig(De.fname)?(De=De.fnTransform(),t=Vt.integrate(pt.expand(pt.multiply(De,Fe)),n,ut)):Pe===gt&&ke===Nt||ke===gt&&Pe===Nt?(ke===gt&&Pe===Nt&&(We=De,De=Fe,Fe=We),Ce=dt.unwrapSQRT(Vt.diff(De.clone(),n),!0),Le=dt.unwrapSQRT(Fe,!0),Ce.power.equals(Le.power)?(s=new dt(Fe.power),Ue=Ce.clone().toLinear(),_e=Fe.clone().toLinear(),(Ie=ct.Algebra.divide(Ue.toLinear(),_e)).isConstant()&&(Oe=pt.pow(Ie,s.negate()),t=pt.multiply(Oe,Vt.integration.poly_integrate(De.clone())))):t=Vt.integration.by_parts(ce,n,ut,lt)):(Re=De.clone().toLinear(),Te=Fe.clone().toLinear(),t=Pe===qt&&ke===qt&&De.power.contains(n)&&Fe.power.contains(n)&&!Re.contains(n)&&!Te.contains(n)?pt.parse(yt(\"(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))\",Re.toString(),Te.toString(),De.power.multiplier.toString(),Fe.power.multiplier.toString(),n)):Vt.integration.by_parts(ce,n,ut,lt))}}else if(3===se&&(ie[2].group===St&&ie[2].power.lessThan(2)||ie[0].group===Nt)){var nt,rt=ie[0];rt.group===Nt?(rt.power.greaterThan(1)&&(rt=pt.expand(rt)),nt=pt.multiply(ie[1],ie[2]),t=new dt(0),rt.each(function(e){e=pt.multiply(e,nt.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)},!0)):t=Vt.integration.by_parts(ce,n,ut,lt)}else if(Bt(ie)){for(var We=new dt(1),it=0,se=ie.length;it<se;it++)We=pt.multiply(We,ie[it].fnTransform());We=pt.expand(We),t=Vt.integrate(We,n,ut)}else{var st=Gt(ie);t=Vt.integrate(pt.expand(st),n,ut)}}t=pt.multiply(t,ne)}}else t=pt.multiply(ce.clone(),pt.parse(n));if(t)return t}catch(e){if(!(e instanceof Ft||e instanceof ct.exceptions.DivisionByZero))throw e}return pt.symfunction(\"integrate\",[ot,at])},!1))},defint:function(e,t,n,r){r=r||\"x\";function i(t,e,n){try{return pt.parse(t,e)}catch(e){return Vt.Limit.limit(t,r,n)}}var s,o,a=ct.Utils.variables(e),u=e.hasTrig();return 1!==a.length||r||(r=a[0]),u||(s=Vt.integrate(e,r)),u||s.hasIntegral()?1===a.length&&t.isConstant()&&n.isConstant()?(o=ct.Utils.build(e),new dt(ct.Math2.num_integrate(o,Number(t),Number(n)))):pt.symfunction(\"defint\",[e,t,n,r]):(o={},(e={})[r]=n,o[r]=t,n=i(s,e,n),t=i(s,o,t),pt.subtract(n,t))},Limit:{interval:function(e,t){return pt.parse(yt(\"[{0}, {1}]\",e,t))},diverges:function(){return Vt.Limit.interval(\"-Infinity\",\"Infinity\")},divide:function(e,t,n,r,i){if(!(i++>ht.max_lim_depth)){e.clone();var s=t.clone();if(\"abs\"===t.fname){var o=e.sign(),a=r.sign();if(r.isInfinity)return pt.multiply(new dt(o),new dt(a));if(r.equals(0)){var a=pt.parse(e.multiplier),u=pt.parse(t.multiplier);return pt.divide(pt.multiply(a,Vt.Limit.interval(\"-1\",\"1\")),u)}Vt.Limit.diverges()}var l=function(e){if(ct.Utils.isVector(e)){for(var t=0;t<e.elements.length;t++)if(!e.elements[t].isInfinity)return!1;return!0}return e.isInfinity},c=function(e,t){return!ct.Utils.isVector(e)&&e.equals(t)};do{var p,f,h=k(Vt.Limit.limit(e.clone(),n,r,i)),m=k(Vt.Limit.limit(t.clone(),n,r,i)),g=l(h)&&l(m)||c(h,0)&&c(m,0)}while(g&&(p=Vt.diff(e.clone(),n),f=Vt.diff(t.clone(),n),e=(f=pt.expand(pt.divide(p,f))).getNum(),t=f.getDenom()),g);u=m.equals(0),s=Number(s.power);return r.isConstant(!0)&&u?dt.infinity(ct.Utils.even(s)&&h.lessThan(0)?-1:void 0):u?Vt.Limit.diverges():pt.divide(h,m)}},rewriteToLog:function(e){var t=e.power.clone();return e.toLinear(),pt.pow(new dt(\"e\"),pt.multiply(t,pt.symfunction(ht.LOG+\"\",[e])))},getSubbed:function(t,e,n){var r;t.group===qt&&(t=Vt.rewriteToLog(t));try{r=t.sub(e,n)}catch(e){r=t}return r},isInterval:function(e){return ct.Utils.isVector(e)},isConvergent:function(e){return!(Vt.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction(\"limit\"))},limit:function(t,n,r,i){if(t.isLinear()&&t.isComposite()){var s=new dt(0);return t.each(function(e){s=pt.add(s,Vt.Limit.limit(e,n,r,i))},!0),s}if(t=ct.Algebra.Simplify.simplify(t),i=i||1,!(i++>ht.max_lim_depth)){var e=pt.parse(t.multiplier);t.toUnitMultiplier();try{if(t.isConstant(!0))d=t;else{var o={};o[n]=r;try{var a=pt.parse(t.sub(n,r),o);(a.isConstant(!0)||a.isInfinity)&&(d=a)}catch(e){}if(!d){var u,l=t.getNum(),c=t.getDenom();if(c.isConstant(!0)){if(t.group===qt){var p,f,h,m,g,d,v=t.clone().toLinear(),w=(t.power.clone(),v.getNum()),y=v.getDenom(),b=ct.Utils.decompose_fn(y,n,!0);d=w.group===St&&w.multiplier.isOne()&&b.ax.group===St&&b.b.isConstant(!0)&&b.a.isOne()&&b.b.isConstant(!0)?pt.parse(yt(\"(1/e^({0}))\",b.b)):(f=(p=Vt.Limit.rewriteToLog(t.clone())).power.clone(),h=p.clone().toLinear(),m=Vt.Limit.limit(h,n,r,i),g=Vt.Limit.limit(f,n,r,i),pt.pow(m,g))}else if(t.group===gt&&1===t.args.length){var S,M=Vt.Limit.limit(t.args[0],n,r,i);if(ct.Utils.isVector(M))return d=M.map(function(e){return t.clone().args[0]=e,Vt.Limit.limit(pt.symfunction(t.fname,[e]),n,r,i)}),pt.multiply(e,d);if(M.isConstant(!0)){var N=pt.symfunction(t.fname,[M]);try{k(N),S=!0}catch(e){S=!1}}if(S)d=N;else if(Vt.Limit.isConvergent(M))if(t.fname===xt)switch(M.toString()){case\"0\":d=dt.infinity().negate();break;case\"Infinity\":case\"-Infinity\":d=dt.infinity()}else if(t.fname!==Lt&&t.fname!==Ct||!r.isInfinity){if(t.fname===It){var E=t.args[0],q=E.getNum(),x=E.getDenom(),A=q.toUnitMultiplier();(r.isInfinity||A.equals(\"pi\")&&x.equals(2))&&(d=divergent())}else if(t.fname===ht.FACTORIAL&&M.isInfinity)return dt.infinity()}else d=Vt.Limit.interval(-1,1)}else if(t.group===St){if(0<t.power)return pt.parse(t,o);d=ct.Utils.even(t.power)?dt.infinity():Vt.Limit.diverges()}else if(t.group===Et){for(var v=(U=t.collectSymbols().sort(function(e,t){return e.group-t.group})).pop(),C=k(Vt.Limit.limit(v,n,r,i));U.length;){var L=U.pop(),I=k(Vt.Limit.limit(L,n,r,i));C.isInfinity||!Vt.Limit.isConvergent(C)&&I.equals(0)||C.equals(0)&&Vt.Limit.isConvergent(I)?((L=L.containsFunction(xt)?[v,v=L][0]:L).invert(),C=C.isInfinity&&I.isInfinity?dt.infinity():Vt.Limit.divide(v,L,n,r,i)):(C=pt.multiply(C,I),v=pt.multiply(v,L))}d=C}else if(t.isComposite()){t.isLinear()||(t=pt.expand(t)),d=new dt(0);for(var U=t.collectSymbols().sort(function(e,t){return t.group-e.group}),_=[],O=new dt(0),R=0,T=U.length;R<T;R++)(P=U[R].clone()).group===gt||P.group===Et&&P.hasFunc()?O=pt.add(O,P):_.push(P);_.unshift(O),1!==_.length&&(U=_);for(R=0,T=U.length;R<T;R++){var P=U[R];try{u=Vt.Limit.limit(P,n,r,i)}catch(e){u=Vt.Limit.diverges()}try{d=pt.add(d,u)}catch(e){if(i++>ht.max_lim_depth)return;d=Vt.Limit.limit(Vt.diff(t,n),n,r,i)}}}}else d=Vt.Limit.divide(l,c,n,r,i)}}d=d||pt.symfunction(\"limit\",[t,n,r])}catch(e){d=pt.symfunction(\"limit\",[t,n,r])}return pt.multiply(e,d)}}},Fresnel:{S:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"sin(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"S\",arguments)},C:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"cos(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"C\",arguments)}}};nerdamer.register([{name:\"diff\",visible:!0,numargs:[1,3],build:function(){return Vt.diff}},{name:\"sum\",visible:!0,numargs:4,build:function(){return Vt.sum}},{name:\"product\",visible:!0,numargs:4,build:function(){return Vt.product}},{name:\"integrate\",visible:!0,numargs:[1,2],build:function(){return Vt.integrate}},{name:\"defint\",visible:!0,numargs:[3,4],build:function(){return Vt.defint}},{name:\"S\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.S}},{name:\"C\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.C}},{name:\"limit\",visible:!0,numargs:[3,4],build:function(){return Vt.Limit.limit}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\"),require(\"./Algebra.js\")),function(){var t,H=nerdamer.getCore(),j=H.PARSER,X=H.Algebra,$=H.Calculus,Z=$.integration.decompose_arg,z=H.Utils.evaluate,q=H.Utils.remove,c=H.Utils.format,Q=H.Utils.build,f=H.Utils.knownVariable,Y=H.Symbol,W=H.Utils.isSymbol,l=H.Utils.variables,J=H.groups.S,K=H.groups.PL,ee=H.groups.CB,te=H.groups.CP,ne=H.groups.FN,re=H.Settings,s=H.Utils.range,ie=H.Utils.isArray;function se(e,t){if(t.isConstant()&&e.isConstant()&&!e.equals(t)||e.equals(H.Settings.IMAGINARY)&&t.isConstant(!0)||t.equals(H.Settings.IMAGINARY)&&e.isConstant(!0))throw new H.exceptions.NerdamerValueError(e.toString()+\" does not equal \"+t.toString());this.LHS=e,this.RHS=t}H.Settings.SOLVE_RADIUS=1e3,H.Settings.ROOTS_PER_SIDE=10,H.Settings.make_pi_conversions=!1,H.Settings.STEP_SIZE=.1,H.Settings.EPSILON=1e-13,H.Settings.MAX_NEWTON_ITERATIONS=200,H.Settings.MAX_NON_LINEAR_TRIES=12,H.Settings.NON_LINEAR_JUMP_AT=50,H.Settings.NON_LINEAR_JUMP_SIZE=100,H.Settings.NON_LINEAR_START=.01,H.Settings.NEWTON_SLICES=200,H.Settings.NEWTON_EPSILON=2*Number.EPSILON,H.Settings.SOLUTION_PROXIMITY=1e-14,H.Settings.FILTER_SOLUTIONS=!0,H.Settings.MAX_SOLVE_DEPTH=10,H.Settings.ZERO_EPSILON=1e-9,H.Settings.MAX_BISECTION_ITER=2e3,H.Settings.BI_SECTION_EPSILON=1e-12,H.Symbol.prototype.hasTrig=function(){return this.containsFunction([\"cos\",\"sin\",\"tan\",\"cot\",\"csc\",\"sec\"])},H.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===K&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},se.prototype={toString:function(){return this.LHS.toString()+\"=\"+this.RHS.toString()},text:function(e){return this.LHS.text(e)+\"=\"+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]);n=j.subtract(t,n);return new se(e?j.expand(n):n,new Y(0)).removeDenom().LHS},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=j.multiply(e.getDenom(),t.getDenom());if(e=j.expand(j.multiply(e,n.clone())),(t=j.expand(j.multiply(t,n))).group===te&&t.group!==te&&(r=e,e=t,t=r),e.group===ee){var r=new Y(e.multiplier),i=t.clone();e.each(function(e){e.power.lessThan(0)?i=j.divide(i,e):r=j.multiply(r,e)}),e=r,t=i}else if(e.group===te)for(var s in e.symbols){var o=e.symbols[s];if(o.group===ee)for(var a in o.symbols){a=o.symbols[a];if(a.power.lessThan(0))return new se(j.expand(j.multiply(a.clone().toLinear(),e)),j.expand(j.multiply(a.clone().toLinear(),t)))}}return new se(e,t)},clone:function(){return new se(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return H.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join(\"=\")}},j.equals=function(e,t){return new se(e,t)},t=j.functions.simplify[0],j.functions.simplify[0]=function(e){return e instanceof se?(e.LHS=t(e.LHS),e.RHS=t(e.RHS),e):t(e)},H.Expression.prototype.equals=function(e){return e instanceof H.Expression&&(e=e.symbol),new se(this.symbol,e)},H.Expression.prototype.solveFor=function(e){var t;if(this.symbol instanceof se){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new H.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new H.Expression(this.symbol.RHS);t=this.symbol.toLHS()}else t=this.symbol;return ue(t,e).map(function(e){return new H.Expression(e)})},H.Expression.prototype.expand=function(){if(this.symbol instanceof se){var e=this.symbol.clone();return e.RHS=j.expand(e.RHS),e.LHS=j.expand(e.LHS),new H.Expression(e)}return new H.Expression(j.expand(this.symbol))},H.Expression.prototype.variables=function(){return this.symbol instanceof se?H.Utils.arrayUnique(l(this.symbol.LHS).concat(l(this.symbol.RHS))):l(this.symbol)};function e(e,t){return j.equals(e,t)}H.Equation=se;var oe=H.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},ae=H.Solve={version:\"2.0.3\",solutions:[],solve:function(e,t){t=ue(e,String(t));return new H.Vector(t)},toLHS:function(e,t){return W(e)?e:(e instanceof se||((n=e.split(\"=\"))[1]=n[1]||\"0\",e=new se(j.parse(n[0]),j.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,t){for(var n=t.map(function(e){return j.parse(e)}),r=[],i=[],s=0;s<e.length;s++){for(var o=[],a=0;a<n.length;a++)o.push(Number(H.Algebra.degree(e[s],n[a])));o.push(H.Utils.arraySum(o,!0)),r.push(o)}var u,l,c=e[0],p=e[1];return r[0][2]>r[1][2]&&([p,c]=[c,p],[r[1],r[0]]=[r[0],r[1]]),1===r[0][0]&&2===r[0][2]&&2===r[1][0]&&4===r[1][2]&&(u=t[0],l=t[1],t=ue(j.parse(p,f(u,ue(j.parse(c),u)[0])),l).map(function(e){return e.toString()}),p=[ue(j.parse(c,f(l,t[0])))[0].toString()],t[1]&&p.push(ue(j.parse(c,f(l,t[1])))[0].toString()),re.SOLUTIONS_AS_OBJECT?((i={})[u]=p,i[l]=t):(t.unshift(l),p.unshift(u),i=[p,t])),i},solveNonLinearSystem:function(e,t,r){if(t<0)return[];r=void 0===r?H.Settings.NON_LINEAR_START:r;var i=H.Settings.MAX_NON_LINEAR_TRIES,s=Math.floor(i/2);t=void 0===t?i:t;var o,a,u,l,c,p=H.Settings.NON_LINEAR_JUMP_AT,f=H.Settings.NON_LINEAR_JUMP_SIZE,h=!0,m=H.Utils.arrayGetVariables(e),i=H.Matrix.jacobian(e,m,function(e){return Q(e,m)},!0),g=H.Settings.MAX_NEWTON_ITERATIONS,d=e.map(function(e){return Q(e,m)}),v=i.map(function(e){return Q(e,m)},!0),w=H.Matrix.cMatrix(0,m),y=H.Matrix.cMatrix(r,m),b=0;do{if(g<b)break;o=function(e,n){return e.map(function(e,t){return Number(n.get(t,0))})}(m,y),l=y.clone(),d.forEach(function(e,t){y.set(t,0,e.apply(null,o))});var S=new H.Matrix;if(v.each(function(e,t,n){e=e.apply(null,o);S.set(t,n,e)}),S=S.invert(),c=(a=j.multiply(S,y).negate()).subtract(w,function(e){return j.parse(Number(e))}),w=l.add(a,function(e){return j.parse(Number(e))}),y=w,p<=b&&1<u){t===s&&(r=0);var M=s<t?1:-1;return n=t%Math.floor(s)+1,r+=M*n*f,ae.solveNonLinearSystem(e,--t,r)}}while((M=u,b++,u=c.max(),Number(u)!==Number(M))&&Number(u)>=Number.EPSILON);return h?ae.systemSolutions(y,m,!0,function(e){return H.Utils.round(Number(e),14)}):[]},systemSolutions:function(e,r,i,s){var o=H.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each(function(e,t){var n=(i?j.expand(e):e).valueOf();s&&(n=s.call(e,n));t=r[t];H.Settings.SOLUTIONS_AS_OBJECT?o[t]=n:o.push([t,n])}),o},solveSystemBySubstitution:function(e){var t=l(e[0]),n=l(e[1]);return 2===e.length&&2===t.length&&H.Utils.arrayEqual(t,n)?ae.solveCircle(e,t):[]},solveSystem:function(e,t){for(var n=0;n<e.length;n++)e[n]=ae.toLHS(e[n]);var r,i=e.length,s=new H.Matrix,o=new H.Matrix,a=!1;if(void 0===t){if(!X.allLinear(e))try{return ae.solveNonLinearSystem(e)}catch(c){if(c instanceof H.exceptions.DivisionByZero)return ae.solveSystemBySubstitution(e)}if(1===(r=H.Utils.arrayGetVariables(e)).length){var u,l=0;do{var c=e[l].clone()}while(0<l&&(c=c.sub(r[0],u[0])),u=ue(c,r[0]),++l<e.length);return re.SOLUTIONS_AS_OBJECT?(h={})[r[0]]=u:h=0===u.length?u:[r[0],u],h}if(r.length<e.length){for(var p=[],l=e.length,n=0;n<l-1;n++)p.push(j.parse(e[n]));var f={},h=ae.solveSystem(p,r);Array.isArray(h)?h.forEach(function(e){f[e[0]]=e[1]}):f=h;for(var m=!0,n=l-1;n<l;n++)j.parse(e[n],f).equals(0)||(m=!1);if(m)return h}for(n=0;n<r.length;n++)nerdamer.setVar(r[n],\"delete\");for(n=0;n<i;n++){for(var c=e[n],g=0;g<r.length;g++){var d=r[g],v=[];c.each(function(e){e.contains(d)&&(v=v.concat(e.coeffs()))});var w=H.Utils.arraySum(v);s.set(n,g,w)}var y=c.clone();r.map(function(e){y=y.stripVar(e,!0)}),o.set(n,0,y.negate())}}else for(r=t,a=!0,n=0;n<i;n++){o.set(n,0,new Y(0));for(c=j.expand(e[n]).collectSymbols(),g=0;g<t.length;g++){s.set(n,g,new Y(0));for(var d=t[g],b=0;b<c.length;b++){for(var S,M=c[b],N=!1,E=0;E<t.length;E++)M.contains(t[E])&&(N&&H.err(\"Multiple variables found for term \"+M),N=!0);M.contains(d)&&(S=Z(q(c,b),d),s.set(n,g,j.add(s.get(n,g),S[0])))}}for(b=0;b<c.length;b++)o.set(n,0,j.add(o.get(n,0),c[b]))}if(r.length!==e.length||s.determinant().equals(0))throw new H.exceptions.SolveError(\"System does not have a distinct solution\");h=(s=s.invert()).multiply(o);return H.Utils.isArray(t)&&h.each(function(e){return e.negate()}),ae.systemSolutions(h,r,a)},quad:function(e,t,n){e=j.subtract(j.pow(t.clone(),Y(2)),j.multiply(j.multiply(n.clone(),e.clone()),Y(4))),e=j.expand(e),e=j.pow(e,Y(.5)),n=j.parse(j.multiply(new Y(2),n.clone()));return[j.parse(c(\"(-({0})+({1}))/({2})\",t,e,n)),j.parse(c(\"(-({0})-({1}))/({2})\",t,e,n))]},cubic:function(e,t,n,r){r=r.text(),n=n.text(),t=t.text(),e=`(-(${n})^3/(27*(${r})^3)+(${n})*(${t})/(6*(${r})^2)-(${e.text()})/(2*(${r})))`,t=`((${t})/(3*(${r}))-(${n})^2/(9*(${r})^2))`,n=`((${e})+sqrt((${e})^2+(${t})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-(${`(${n})/(3*(${r}))`})`,r=\"1/2+sqrt(3)/2*i\";return[j.parse(n),j.parse(`(${n})(${r})`),j.parse(`(${n})(${r})^2`)]},quartic:function(e,t,n,r,i){var s,o,a,u={};return H.Utils.arrayUnique(l(i).concat(l(r)).concat(l(n)).concat(l(t)).concat(l(e))).map(function(e){u[e]=1}),i=i.toString(),r=r.toString(),n=n.toString(),t=t.toString(),e=e.toString(),s=j.parse(c(\"(8*({0})*({2})-3*({1})^2)/(8*({0})^2)\",i,r,n)).toString(),o=j.parse(c(\"(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)\",i,r,n,t)).toString(),a=j.parse(c(\"12*({0})*({4})-3*({1})*({3})+({2})^2\",i,r,n,t,e)).toString(),e=j.parse(c(\"2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})\",i,r,n,t,e)).toString(),e=j.parse(c(\"((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)\",a,e)).toString(),J=j.parse(c(\"(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)\",i,s,e,a)).toString(),[j.parse(c(\"-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J))]},divideAndConquer:function(e,t){var n=[],e=H.Algebra.Factor.factor(e);return e.group===ee&&e.each(function(e){e=Y.unwrapPARENS(e),n=n.concat(ue(e,t))}),n},csolve:function(u,l){return H.Utils.block(\"IGNORE_E\",function(){var e=[],t=H.Utils.decompose_fn(u,l,!0);if(t.x.group===J)for(var n,r=j.parse(t.x.power),i=Number(r),s=j.pow(j.divide(t.b.negate(),t.a),r.invert()),s=(t=Y.toPolarFormArray(s))[0],o=(t[1],s.toString()),a=(r.toString(),0);a<i;a++)n=c(\"({0})*e^(2*{1}*pi*{2}*{3})\",o,a,r,H.Settings.IMAGINARY),n=j.parse(n),e.push(n);return e},!0)},getPoints:function(e,t,u){t=t||.01,u=u||[];var l=Q(e),n=Math.round(0),r=l(n),c=r/Math.abs(r),i=H.Settings.ROOTS_PER_SIDE,r=i;u.push(Math.floor(n/2)),u.push(Math.abs(n)),u.push(n),e.each(function(e){e.containsFunction(H.Settings.LOG)&&u.push(.1)});e=s(-H.Settings.SOLVE_RADIUS,n,t),n=s(n,H.Settings.SOLVE_RADIUS,t),t=function(e,t){for(var n,r,i,s=[],o=0,a=e.length;o<a;o++)n=e[o],i=(r=l(n))/Math.abs(r),isNaN(r)||!isFinite(r)||s.length>t||(i!==c&&s.push(n),c=i);u=u.concat(s)};return t(e,r),t(n,i),u},bisection:function(e,t){var n=e-1,r=e+1;if(Math.sign(t(n))!==Math.sign(t(r))){var i,s,o=0;do{if(i=Math.abs(r-n),o++>H.Settings.MAX_BISECTION_ITER||isNaN(i))return}while(s=(n+r)/2,0<t(n)*t(s)?n=s:r=s,i>=re.EPSILON);var a=(n+r)/2,e=t(a);if(!isNaN(e)&&Math.abs(e)<=H.Settings.BI_SECTION_EPSILON)return H.Utils.round(a,13)}},Newton:function(e,t,n){var r=H.Settings.MAX_NEWTON_ITERATIONS,i=0,s=e;do{var o=t(s);if(0===s&&0===o){a=0;break}if(r<++i)return;var a=s-o/n(s),o=Math.abs(a-s),s=a}while(o>re.NEWTON_EPSILON);if(Math.abs(t(a))<=re.EPSILON)return a},rewrite:function(e,t,n){var r,i;t=t||new Y(0),e.isComposite()&&e.isLinear()?(r=[],i=[],e.each(function(e){(\"sqrt\"===(e=e.clone()).fname&&e.contains(n)?r:i).push(e)},!0),1===r.length&&(t=j.expand(j.pow(j.subtract(t,H.Utils.arraySum(i)),new Y(2))),e=j.expand(j.pow(Y.unwrapSQRT(r[0]),new Y(2))))):e=Y.unwrapSQRT(j.expand(e));var s=0,o=e.length;if(e.group===te&&e.contains(n)&&e.isLinear()){e.distributeMultiplier();var a=new Y(0);return e.each(function(e){e.contains(n)?(s++,a=j.add(a,e.clone())):t=j.subtract(t,e.clone())}),e=a,s!==o?ae.rewrite(e,t,n):[e,t]}if(e.group===ee&&e.contains(n)&&e.isLinear()){if(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new H.Frac(-1)),t.multiplier=t.multiplier.multiply(new H.Frac(-1))),t.equals(0))return new Y(0);a=new Y(1);return e.each(function(e){e.contains(n)?a=j.multiply(a,e.clone()):t=j.divide(t,e.clone())}),ae.rewrite(e=a,t,n)}if(!e.isLinear()&&e.contains(n)){o=j.parse(e.power.clone().invert());return e=j.pow(e,o.clone()),t=j.pow(j.expand(t),o.clone()),ae.rewrite(e,t,n)}if(e.group===ne||e.group===J||e.group===K)return[e,t]},sqrtSolve:function(n,r){var t=new Y(0),i=new Y(0);if(n.isComposite()&&(n.each(function(e){\"sqrt\"===e.fname&&e.contains(r)?t=j.add(t,e.clone()):i=j.add(i,e.clone())}),!t.equals(0))){var e=j.expand(j.multiply(j.parse(n.multiplier),j.subtract(j.pow(i,new Y(2)),j.pow(t,new Y(2)))));return ue(e,r).filter(function(e){if(e.isImaginary())return e;var t={};return t[r]=e,z(n,t).equals(0)?e:void 0})}}},ue=function(n,p,i,t,e){if(t=t||0,t++>re.MAX_SOLVE_DEPTH)return i;if(n instanceof se){if(n.isZero())return[new Y(0)];if(n.LHS.equals(p)&&!n.RHS.contains(p))return[n.RHS];if(n.RHS.equals(p)&&!n.LHS.contains(p))return[n.LHS]}if(n instanceof H.Vector&&(n=n.elements),p=p||\"x\",ie(n))return ae.solveSystem.apply(void 0,arguments);i=i||[];var s={},r={};if(r[p]=0,W(n)&&!0===z(n.getDenom(),r).equals(0))return i;var o=function(e,t){var n,r=W(e);void 0===e||\"number\"==typeof e&&isNaN(e)||(ie(e)?e.forEach(function(e){o(e)}):\"null\"!==e.valueOf()&&(\"function\"==typeof H.Settings.PRE_ADD_SOLUTION&&(e=H.Settings.PRE_ADD_SOLUTION(e)),r||(e=j.parse(e)),H.Settings.make_pi_conversions&&t&&(r=(n=j.divide(e.clone(),new Y(Math.PI))).multiplier,t=Math.abs(r.num),r=Math.abs(r.den),t<10&&r<10&&(e=j.multiply(n,new Y(\"pi\")))),n=e.toString(),s[n]||i.push(e),s[n]=!0))};if(n.group===J&&n.contains(p)){try{var a={};a[p]=0,z(e,a,\"numer\"),o(new Y(0))}catch(e){}return i}if(n.group===ee){var u=n.getNum();if(u.group!==ee)return ue(u,p,i,t,e);var l=String(p);return u.each(function(e){e.contains(l)&&ue(e,p,i,t,n)}),i}n.group===ne&&\"sqrt\"===n.fname&&(n=j.pow(Y.unwrapSQRT(n),new Y(2)));var c=(H.Utils.isSymbol(n)?n:ae.toLHS(n,!1)).getNum(),r=H.Utils.variables(c),a=r.length;if((c=H.Utils.isInt(c.power)&&0<c.power?j.parse(c).toLinear():c).group===J||c.group===ee&&c.contains(p))return[new Y(0)];function f(e){var t=new Y(0),n=new Y(0);return e.each(function(e){e.contains(p,!0)?t=j.add(t,e.clone()):n=j.subtract(n,e.clone())}),[t,n]}var h,m={},g=function(n){var e=(n=j.expand(n,{expand_denominator:!0,expand_functions:!0})).clone();if(n.symbols)for(var t in n.symbols){var r=n.symbols[t],i=r.getDenom();if(!i.isConstant(!0)&&n.isComposite()){var s=new Y(0);return n.each(function(e){s=j.add(s,j.multiply(e,i.clone()))}),g(j.multiply(j.parse(n.multiplier),s))}var o=Z(r,p),a=o[1].fname===H.Settings.SQRT,u=Y.unwrapSQRT(o[1]),t=u.power.clone();if(!W(t)&&!t.equals(.5))if(t.den.gt(1)){if(a)return n=j.subtract(n,r.clone()),n=j.add(n,j.multiply(o[0].clone(),u)),g(n);u=m[t.den];m[t.den]=u?u++:1}else{if(-1===t.sign()){var l=j.parse(p+\"^\"+Math.abs(t));return n.each(function(e,t){e.contains(p)&&(n.symbols[t]=j.multiply(e,l.clone()))}),m={},g(j.parse(n))}if(r.group===K){r=H.Utils.arrayMin(H.Utils.keys(r.symbols));if(r<0){var l=j.parse(p+\"^\"+Math.abs(r)),c=new Y(0);return e.each(function(e){c=j.add(c,j.multiply(e.clone(),l.clone()))},!0),c}}}}return n};if(ae.inverseFunctionSolve=function(e,t,n){var r=Z(t.args[0],p);if(r[1].group===J)return j.divide(j.symfunction(e,[j.divide(n,j.parse(t.multiplier))]),r[0])},(c=g(c)).equals(0))return[c];var d,v,u=H.Utils.keys(m);if(1===u.length&&(h=u[0],c.each(function(e,t){var n,r;!e.contains(p)||(e=(r=(n=Z(e,p))[1]).power).den.gt(1)&&(r.power=e.multiply(new H.Frac(h)),c.symbols[t]=j.multiply(r,n[0]))}),c=j.parse(c)),o(ae.sqrtSolve(c,p)),1===a)if(c.isPoly(!0)){var w=new H.Algebra.Classes.Factors;if(H.Algebra.Factor.factor(c,w),1<w.getNumberSymbolics())for(var y in w.factors)o(ue(w.factors[y],p));else{var b,S,M=(b=H.Utils.getCoeffs(c,p)).length-1,a=!1;r[0]===p&&(oe(b,function(e){return e.group!==H.groups.N})&&(r=H.Algebra.proots(c),oe(r,function(e){return!H.Utils.isInt(e)})&&(a=!0,r.map(function(e){o(new Y(e))}))),a||((n=j.parse(n))instanceof H.Equation&&(n=n.toLHS()),1===M?o(j.divide(b[0],b[1].negate())):2===M?o(j.expand(ae.quad.apply(void 0,b))):3===M?(i=[],S=H.Algebra.Factor.factor(n),0<(i=[]).length?o(i):o(ae.cubic.apply(void 0,b))):X.proots(c).map(o)))}}else try{for(var N,E,q=c.hasTrig(),x=ae.getPoints(c,.1),A=ae.getPoints(c,.05),C=ae.getPoints(c,.01),L=H.Utils.arrayUnique(x.concat(A).concat(C)).sort(function(e,t){return e-t}),I=Q(c.clone()),U=[],_=0;_<L.length;_++)N=L[_],void 0!==(E=ae.bisection(N,I))?o(E,q):U.push(N);var L=U,O=$.diff(c.clone()),R=Q(O);for(_=0;_<L.length;_++)N=L[_],o(ae.Newton(N,I,R),q);i.sort()}catch(e){console.log(e)}else if(!c.hasFunc(p)&&c.isComposite())try{if((S=H.Algebra.Factor.factor(c.clone())).group===ee)S.each(function(e){o(ue(e,p))});else{switch(M=(b=H.Utils.getCoeffs(c,p)).length-1){case 0:var T,P,k,D=(T=f(c))[0],F=T[1];D.group===H.groups.EX&&(k=`${P=H.Settings.LOG}((${F})/(${D.multiplier}))/${P}(${D.value})/${D.power.multiplier}`,o(j.parse(k)));break;case 1:o(j.divide(b[0],b[1].negate()));break;case 2:o(ae.quad.apply(void 0,b));break;case 3:o(ae.cubic.apply(void 0,b));break;case 4:o(ae.quartic.apply(void 0,b));break;default:o(ae.csolve(c,p)),0===i.length&&o(ae.divideAndConquer(c,p))}0===i.length&&o(ue(S,p,i,t))}}catch(e){}else try{var B,G=ae.rewrite(c,null,p),D=G[0],F=G[1];if(D.group===ne)\"abs\"===D.fname?o([F.clone(),F.negate()]):\"sin\"===D.fname?o(ae.inverseFunctionSolve(\"asin\",D,F)):\"cos\"===D.fname?o(ae.inverseFunctionSolve(\"acos\",D,F)):\"tan\"===D.fname?o(ae.inverseFunctionSolve(\"atan\",D,F)):D.fname===H.Settings.LOG?(y=(B=Z(D.args[0],p))[1]).group===J&&(c=new se(y,F=j.divide(j.subtract(j.pow(1<D.args.length?D.args[1]:new Y(\"e\"),j.divide(F,j.parse(D.multiplier))),B[3]),B[0])).toLHS(),o(ue(c,p))):o(j.subtract(D,F));else{var V=new se(D,F).toLHS();if(V.equals(c))throw new Error(\"Stopping. No stop condition exists\");o(ue(V,p))}}catch(e){try{c.group===ee?o(0):c.group===te&&(D=(T=f(c))[0],F=T[1],D.group===H.groups.EX&&D.value===p&&(d=D.power.clone().invert(),o(j.pow(F,d))))}catch(e){}}return h&&(i=i.map(function(e){return j.pow(e,new Y(h))})),W(n)&&(v={},i=i.filter(function(e){try{v[p]=e;var t=Number(z(n,v));return isNaN(t)?!0:!0}catch(e){return!1}})),i};nerdamer.register([{name:\"solveEquations\",parent:\"nerdamer\",numargs:-1,visible:!0,build:function(){return ue}},{name:\"solve\",parent:\"Solve\",numargs:2,visible:!0,build:function(){return H.Solve.solve}},{name:\"setEquation\",parent:\"Solve\",visible:!0,build:function(){return e}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus\"),require(\"./Algebra\")),function(){\"use strict\";var x=nerdamer.getCore(),A=x.PARSER,C=x.Symbol,L=x.Utils.format,a=x.Utils.isVector,u=x.Utils.isArray,I=(x.Vector,x.groups.S),U=(x.groups.EX,x.groups.CP),_=x.groups.CB,l=x.groups.FN;x.Settings.Laplace_integration_depth=40,C.prototype.findFunction=function(e){if(this.group===l&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var O=x.Extra={version:\"1.4.2\",LaPlace:{transform:function(n,r,i){n=n.clone(),r=r.toString();var e=(n=C.unwrapSQRT(n,!0)).stripVar(r),t=n.group;if((n=A.divide(n,e.clone())).isConstant()||!n.contains(r,!0))o=A.parse(L(\"({0})/({1})\",n,i));else if(t===I&&x.Utils.isInt(n.power))var s=String(n.power),o=A.parse(L(\"factorial({0})/({1})^({0}+1)\",s,i));else if(n.group===I&&n.power.equals(.5))o=A.parse(L(\"sqrt(pi)/(2*({0})^(3/2))\",i));else if(n.isComposite())o=new C(0),n.each(function(e){o=A.add(o,O.LaPlace.transform(e,r,i))},!0);else if(!n.isE()||n.power.group!==I&&n.power.group!==_)if(n.group!==l||-1===[\"sin\",\"cos\",\"sinh\",\"cosh\"].indexOf(n.fname)||n.args[0].group!==I&&n.args[0].group!==_){var a,s=x.Settings.integration_depth<x.Settings.Laplace_integration_depth;s&&(a=x.Settings.integration_depth,x.Settings.integration_depth=x.Settings.Laplace_integration_depth),x.Utils.block(\"PARSE2NUMBER\",function(){var e=r,t=n.sub(r,e),t=A.parse(\"e^(-\"+i+\"*\"+e+\")*\"+t);if((o=x.Calculus.integrate(t,e)).hasIntegral())return A.symfunction(\"laplace\",arguments);o=o.sub(r,0),o=(o=A.expand(A.multiply(o,new C(-1)))).sub(e,r)},!1),o=x.Utils.block(\"PARSE2NUMBER\",function(){return A.parse(o)},!0),s&&(x.Settings.integration_depth=a)}else{u=n.args[0].stripVar(r);switch(n.fname){case\"sin\":o=A.parse(L(\"({0})/(({1})^2+({0})^2)\",u,i));break;case\"cos\":o=A.parse(L(\"({1})/(({1})^2+({0})^2)\",u,i));break;case\"sinh\":o=A.parse(L(\"({0})/(({1})^2-({0})^2)\",u,i));break;case\"cosh\":o=A.parse(L(\"({1})/(({1})^2-({0})^2)\",u,i))}}else{var u=n.power.stripVar(r);o=A.parse(L(\"1/(({1})-({0}))\",u,i))}return A.multiply(o,e)},inverse:function(M,N,E){var q=M.clone();return x.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){if((M=M.group===_?x.Algebra.PartFrac.partfrac(A.expand(M),N):M).group===I||M.group===_||M.isComposite()){var e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g=function(){(s=A.multiply(s,e)).multiplier=s.multiplier.multiply(M.multiplier),s=A.divide(s,r.a)},d=M.multiplier.clone();if(M.toUnitMultiplier(),e=M.getNum(),(t=M.getDenom().toUnitMultiplier()).group===U?(i=t.power.clone(),t.toLinear()):i=new x.Frac(1),n=N.toString(),r=x.Utils.decompose_fn(t,n,!0),x.Utils.decompose_fn(A.expand(e.clone()),n,!0),e.multiplier=e.multiplier.multiply(d),(t.group===I||t.group===_)&&r.x.value===n&&r.b.equals(0)&&x.Utils.isInt(r.x.power))p=r.x.power-1,f=x.Math2.factorial(p),s=A.divide(A.pow(E,new C(p)),new C(f)),g();else if(t.group===U&&i.equals(1))r.x.group===x.groups.PL&&x.Algebra.degree(t).equals(2)?(u=x.Algebra.sqComplete(t,n),l=x.Utils.getU(t),h=x.Utils.decompose_fn(u.a,n,!0).b,c=O.LaPlace.inverse(A.parse(`1/((${l})^2+(${u.c}))`),l,E),s=A.multiply(c,A.parse(`(${d})*e^(-(${h})*(${E}))`))):r.x.isLinear()&&!e.contains(n)?(E=A.divide(E,r.a.clone()),s=A.parse(L(\"(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))\",E,r.a,r.b,i,f=0===(p=i-1)||1===p?\"1\":`(${i}-1)!`)),g()):r.x.group===I&&r.x.power.equals(2)&&(e.contains(n)?(h=new C(1),e.group===_&&(o=new C(1),e.each(function(e){e.contains(n)?o=A.multiply(o,e):h=A.multiply(h,e)}),e=o),u=(a=x.Utils.decompose_fn(e,n,!0)).a,l=a.b,c=u.containsFunction(\"sin\"),p=u.containsFunction(\"cos\"),f=l.containsFunction(\"cos\"),g=l.containsFunction(\"sin\"),a.x.value===n&&a.x.isLinear()&&!(c&&f||p||g)?s=A.parse(L(\"(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})\",E,a.a,r.a,r.b)):c&&f&&(c=u.findFunction(\"sin\"),f=l.findFunction(\"cos\"),c.args[0].equals(f.args[0])&&!c.args[0].contains(n)&&(v=A.divide(l,f.toUnitMultiplier()).toString(),f=c.args[0].toString(),m=r.b,c=A.divide(u,c.toUnitMultiplier()),s=A.parse(L(\"(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))\",E,h,v,f,m,c))))):s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))\",E,e,r.a,r.b)));else if(r.x.power.num&&r.x.power.num.equals(3)&&r.x.power.den.equals(2)&&e.contains(\"sqrt(pi)\")&&!e.contains(n)&&e.isLinear()){var v=A.divide(e.clone(),A.parse(\"sqrt(pi)\"));s=A.parse(L(\"(2*({2})*sqrt({0}))/({1})\",E,r.a,v,e))}else if(i.equals(2)&&r.x.power.equals(2))if(e.contains(n))if((a=x.Utils.decompose_fn(A.expand(e.clone()),n,!0)).x.isComposite()){var w=[],y=e.collectSymbols(function(e){e=C.unwrapPARENS(e);var t=x.Utils.decompose_fn(e,n,!0);return t.symbol=e,t}).sort(function(e,t){e=e.x.value!==n?0:e.x.power;return(t.x.value!==n?0:t.x.power)-e});h=new C(-1);for(var b=0;b<y.length;b++){var S=y[b];S.x.value===n?w.push(S):h=A.multiply(h,S.symbol)}w[0].x.power.equals(2)&&w[1].x.power.equals(1)&&w[1].b.equals(0)&&!w[0].b.equals(0)&&(v=w[0].a.negate(),s=A.parse(L(\"-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2\",E,h,v,w[0].b,r.a,r.b)))}else a.x.isLinear()?(h=A.divide(a.a,new C(2)),s=A.parse(L(\"(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))\",E,h,r.a,r.b))):a.x.power.equals(2)&&(s=a.b.equals(0)?(h=A.divide(a.a,new C(2)),A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b))):(h=A.divide(a.a,new C(2)),m=a.b.negate(),A.parse(L(\"-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b,m))));else h=A.divide(e,new C(2)),s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))\",E,h,r.a,r.b));else M.isComposite()&&(i.equals(2)&&r.x.group===I?s=A.parse(`(${d})*(${E})*e^(-(${r.b})*(${E}))`):(s=new C(0),M.each(function(e){s=A.add(s,O.LaPlace.inverse(e,N,E))},!0)))}return s=s||A.symfunction(\"ilt\",[q,N,E])},!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort(function(e,t){return e.isConstant()&&t.isConstant()||A.error(\"Unable to sort! All values must be numeric\"),e.multiplier.subtract(t.multiplier)})},count:function(e){return new C(e.length)},sum:function(e,t){for(var n=new C(0),r=0,i=e.length;r<i;r++)var s=e[r].clone(),n=t?A.add(A.pow(A.subtract(s,t.clone()),new C(2)),n):A.add(s,n);return n},mean:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.mean.apply(this,e[0].elements):A.divide(O.Statistics.sum(e),O.Statistics.count(e))},median:function(){var t=[].slice.call(arguments);if(a(t[0]))return O.Statistics.median.apply(this,t[0].elements);try{var e,n,r=O.Statistics.sort(t),i=t.length;n=x.Utils.even(i)?(e=i/2,O.Statistics.mean(r[e-1],r[e])):r[Math.floor(i/2)]}catch(e){n=A.symfunction(\"median\",t)}return n},mode:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.mode.apply(this,e[0].elements);var t=O.Statistics.frequencyMap(e);if(1===x.Utils.keys(t).length)o=e[0];else{var n,r={};for(n in t){var i,s=t[n];s in r?(i=r[s],u(i)?i.push(n):r[s]=[n,r[s]]):r[s]=n}var e=r[Math.max.apply(null,x.Utils.keys(r))],o=u(e)?A.symfunction(\"mode\",e.sort()):A.parse(e)}return o},gVariance:function(e,t){var n=O.Statistics.mean.apply(O.Statistics,t),n=O.Statistics.sum(t,n);return A.multiply(e,n)},variance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.variance.apply(this,e[0].elements);var t=A.divide(new C(1),O.Statistics.count(e));return O.Statistics.gVariance(t,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.sampleVariance.apply(this,e[0].elements);var t=A.divide(new C(1),A.subtract(O.Statistics.count(e),new C(1)));return O.Statistics.gVariance(t,e)},standardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.standardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.variance.apply(O.Statistics,e),new C(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.sampleStandardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.sampleVariance.apply(O.Statistics,e),new C(.5))},zScore:function(e,t,n){return A.divide(A.subtract(e,t),n)}},Units:{table:{foot:\"12 inch\",meter:\"100 cm\",decimeter:\"10 cm\"}}};nerdamer.register([{name:\"laplace\",visible:!0,numargs:3,build:function(){return O.LaPlace.transform}},{name:\"ilt\",visible:!0,numargs:3,build:function(){return O.LaPlace.inverse}},{name:\"mean\",visible:!0,numargs:-1,build:function(){return O.Statistics.mean}},{name:\"median\",visible:!0,numargs:-1,build:function(){return O.Statistics.median}},{name:\"mode\",visible:!0,numargs:-1,build:function(){return O.Statistics.mode}},{name:\"smpvar\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleVariance}},{name:\"variance\",visible:!0,numargs:-1,build:function(){return O.Statistics.variance}},{name:\"smpstdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleStandardDeviation}},{name:\"stdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.standardDeviation}},{name:\"zscore\",visible:!0,numargs:3,build:function(){return O.Statistics.zScore}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(module.exports=nerdamer);"],
  "mappings": "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,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK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",
  "names": ["Symbol", "n", "i", "x", "rarr", "powers", "max", "p", "N", "c", "d", "g", "c2", "j", "zeror", "zeroi", "l", "a", "b", "e", "ret", "symbol", "evaluate", "det", "l2", "s1", "s2", "lead_var", "t", "Symbol", "n", "retval", "symbol", "a", "b", "f", "arg", "x", "n2", "p", "k", "sym", "u", "integral", "t", "factor", "vars", "e", "t", "n", "r", "i", "s", "o", "a", "u", "l", "c", "p", "f", "h", "m", "g", "d", "v", "w", "y", "b", "C", "x", "L", "A", "E", "O", "R", "I", "T", "q", "U", "N", "_", "S", "M", "P", "H", "j", "X", "$", "G", "k"]
}
